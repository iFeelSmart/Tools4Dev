#### PROJECT HEADER BLOC
# Generated From $Tools4Dev_PATH/Templates/function.env
# This documentation will be read and compile for man usage, MarkDown file and shell documentation
# v1.2
#
#   - Name:
#       AutoBump
###
#   - Prefix:
#       wk
###
#   - Description:
#       Tools4Dev Global function
###
#   - Modules:
#       Will Be Generated Automatically
###
#   - WKS Options:
#       Will Be Generated Automatically
###
#   - Commands:
#       Will Be Generated Automatically
###

#   - Doctor :
#       Will Be Generated Automatically
###
#   - Supported Platform:
#       * OSX ( 10.12.6 or higher )
#       * Fedora ( 25 or higher )
###
#   - Author(s):
#       - Quentin NIO
#
###
#   - Template:
#       Generated From 0-Example-0 Project
#       v1.0.1
#
###
#### HEADER BLOC ####


wks(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "wks" "$#" "$@"
#cat &>/dev/null << EOF
###### wks
#   - Name:
#       wks
###
#   - Synopsis:
#       Main Function that contains list of all available specific workspace behavior
###
#   - Definition:
#
###
#   - Usage:
#
###
#   - Options:
#
###
#   - Example:
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    (
        local CHPWD=1
        set -e
        case $1 in 
            make)                   t4dMake ${@:2}              ;;
            build-tools)            _t4dMakeTools ${@:2}        ;;
            clone)                  _wksClone ${@:2}            ;;
            help|'')                _wksHelp  ${@:2}            ;;
            *)
                _t4dDebugLog $perror "${plyellow}wks $1 ${pstd}- Option ${plyellow}${1}${pstd} not available for this project"
            ;;
        esac
        
    )

    #ALL COMMAND ARE LAUNCHED IN A SUBSHELL
    #This is here to stop command at the first untracked error
    #We Also need to check the subshell output in order to identified which kind of error is sent
    _wksParseReturnCode $? _WS_ERROR $WS_LOGFILE
    return $_WS_ERROR


###############################
_t4dDebugInfoEnd "wks" "$@"
}

_wksHelp(){
###### _wksHelp
#   - Name:
#       _wksHelp
###
#   - Synopsis:
#       Show Project Documentation
###
#   - Definition:
#       Parse project Header to show user a ready to read shell documentation
###
###### DOCUMENTATION BLOC ##### 
    local _wksContent="$(_t4dDocGetFunctionContent wks)"
    if [[ $# -eq 1 ]] && [[ "$(_t4dDocGetOptionsList "$_wksContent" | grep "^$1")" != "" ]]; then
        local _OptionHiddenCallName="$(_t4dDocGetOptionsHiddenCall "$_wksContent" $1)"
        t4dHelp $_OptionHiddenCallName
    elif [[ "$1" == "" ]] || [[ "$1" == "wks" ]]; then
        _wksLogo doc
        t4dHelp $WS_ROOT/project.env
    else 
        t4dHelp $@
    fi
    echo ""
    echo ""
    echo ""
  
}



_wksInit(){
############# DEFAULT Tools4Dev Path
    export WS_ROOT="$PWD"
    export Tools4Dev_PATH=$WS_ROOT

    _wksLoad

    alias wksClone='_wksClone'

    export WS_JENKINS_PROJECT_NAME="Tools4Dev"
    export WS_VERSION_FILE=""
    export WS_CI_BUILD_ARGUMENT="buildWithParameters"

    [[ "$_t4d" != "true" ]] && t4dLogo && _t4d='true'
    
    if [[ ! -e "$T4D_PROJECT_LOG_PATH/clone/.clone" ]] && [[ -e "$WS_ROOT/manifest.xml" ]]; then _wksReadyForClone; fi

}

_wksLoad(){
###### _wksLoad
#   - Name:
#       _wksLoad
###
#   - Synopsis:
#       Here you can configure your project
###
###### DOCUMENTATION BLOC #####

    if [[ -f $Tools4Dev_PATH/tools4Dev.env ]]; then
        source $Tools4Dev_PATH/tools4Dev.env
        _t4dPromptSquare "Project $(basename $WS_ROOT)" $plblue
        ###### Modules
        for _Module in $(_t4dDocGetAvailableModules); do
            if [[ -e "$T4D_MODULES_PATH/$_Module/_main_.env" ]]; then
                t4dLoadModule $_Module
            fi
        done
        t4dLoadCompletion
        #################
        if [[ "${_wksHelper}" != "done" ]]; then _wksHelp && export _wksHelper="done"; fi

    else
        _wksFatalError "wks might need Tools4Dev environment that need to be cloned into $Tools4Dev_PATH"
    fi
###############################
}

_wksLogo(){

    local _color=${1:-$plpurple}
    local center="$(_t4dPromptCenterSpace '34' | sed 's|-||g')"
    l1="    ##      ##  ##   ##    #####  "
    l2="   ##  ##  ##  ##  ##     ##   ## "
    l3="  ## #### ##  #####        ##     "
    l4=" ###    ###  ##   ##   ##    ##   "
    l5="##      ##  ##     ##   #####     "
    if [[ "$1" == "doc" ]]; then
        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"
        _t4dDocWks ${_Content} ${pipurple}
    elif [[ "$1" == "build" ]]; then
        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"
        _t4dDocWks ${_Content} ${pipurple} "$2"
    elif [[ "$1" == "doctor" ]]; then
        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"
        _t4dDocWks ${_Content} ${pipurple} "Doctor"
    else
        echo "${center}${_color} $l1 ${pstd}"
        echo "${center}${_color} $l2 ${pstd}"
        echo "${center}${_color} $l3 ${pstd}"
        echo "${center}${_color} $l4 ${pstd}"    
        echo "${center}${_color} $l5 ${pstd}" 
        echo ""
    fi
}

_wksFatalError(){
    echo -e "\033[1;31m"
    echo -e "                            __---__"
    echo -e "                         _-       _--______"
    echo -e "                    __--( /     \\ )XXXXXXXXXXXXX_"
    echo -e "                  --XXX(   O   O  )XXXXXXXXXXXXXXX-"
    echo -e "                 /XXX(       U     )        XXXXXXX\\"
    echo -e "               /XXXXX(              )--_  XXXXXXXXXXX\\"
    echo -e "              /XXXXX/ (      O     )   XXXXXX   \XXXXX\\"
    echo -e "              XXXXX/   /            XXXXXX   \\__ \\XXXXX----"
    echo -e "              XXXXXX__/          XXXXXX         \\__----  -"
    echo -e "      ---___  XXX__/          XXXXXX      \\__         ---"
    echo -e "        --  --__/   ___/\  XXXXXX            /  ___---="
    echo -e "          -_    ___/    XXXXXX              '--- XXXXXX"
    echo -e "            --\\/XXX\ XXXXXX                      /XXXXX"
    echo -e "              \\XXXXXXXXX                        /XXXXX/"
    echo -e "               \\XXXXXX                        _/XXXXX/"
    echo -e "                 \\XXXXX--__/              __-- XXXX/"
    echo -e "                  --XXXXXXX---------------  XXXXX--"
    echo -e "                     \XXXXXXXXXXXXXXXXXXXXXXXX-"
    echo -e "                       --XXXXXXXXXXXXXXXXXX-"
    echo -e "                 * * * * * who ya gonna call? * * * * *"
    echo -e "                       * * * Your DevOps !! * * *"
    echo -e "                             * * * * * * * *"
    echo -e "IFS now need Tools4Dev environment that need to be cloned into $Tools4Dev_PATH"
    echo -e "Please try >source tools4Dev.env<. If it doesn't work then :"
    echo -e "1- Call your Project Manager"
    echo -e "2- Call your DevOps or Admin System"
    echo -e "3- Call 911"
    echo -e ""
    echo -e ""
    echo -e "\033[m"
    echo -e "\033[1;32m TIPS : ssh access problem - can't access to BitBucket server ?"
    echo -e "\033[1;32m TIPS : Okay that was a joke please don't call 911"
    return 911
}

_wksReadyForClone(){
    echo "${plblue} _________________${pstd}"
    echo "${plblue}|.---------------.|${pstd}"
    echo "${plblue}||  You can use  ||${pstd}"
    echo "${plblue}||  >wks clone<  ||${pstd}"
    echo "${plblue}||      now      ||${pstd}"
    echo "${plblue}||_______________||${pstd}"
    echo "${plblue}'-------. .-------'${pstd}"
    echo "${plblue}        | |    _|/${pstd}"
    echo "${plblue}        | |  .\"   \".${pstd}"
    echo "${plblue}        | | /(O)-(O)\\ ${pstd}"
    echo "${plblue}       /_)||   /     |${pstd}"
    echo "${plblue}       |_)||  '-     |     ${pstd}"
    echo "${plblue}       \_)|\ '.___.' /   |\\/|_${pstd}"
    echo "${plblue}        | | \  \_/  /   _|  '/${pstd}"
    echo "${plblue}        |_|\ '.___.'    \ ) /${pstd}"
    echo "${plblue}        \   \_/\\__/\\__   |==|${pstd}"
    echo "${plblue}         \\    \\ /\\ /\\ '\\ |  |${pstd}"
    echo "${plblue}          \    \\\//     \|  |${pstd}"
    echo "${plblue}           '\\   /\\   |  /   |${pstd}"
    echo "${plblue}             ;  ||   |\____/${pstd}"
    echo "${plblue}             |  ||   |${pstd}"
}

_wksInit

#!/usr/bin/env zsh
autoload -U colors &> /dev/null 
colors &> /dev/null 
export T4D_ROOT_PATH="${T4D_ROOT_PATH:-$HOME/.tools4dev}"
if [[ "$(readlink $0)" != "" ]]; then
    export Tools4Dev_PATH="$(dirname "$(readlink -f $0)")"
elif [[ -e "$0/../src" ]]; then
    export Tools4Dev_PATH="$(dirname "$0")"
else
    export Tools4Dev_PATH="$T4D_ROOT_PATH/src"
fi
function t4d-init() { source $T4D_ROOT_PATH/init }

if [[ -e "$Tools4Dev_PATH/manifest.xml" ]]; then
    export WS_TEAM="$(cat $Tools4Dev_PATH/manifest.xml | grep '<team' | grep -Eo 'name=.*' | cut -d '"' -f2)"
fi

export T4D_SILENT_COMMAND=true

case $1 in
    start)
        _ForceSrcUpdate="$2"
        mkdir -p $T4D_ROOT_PATH
        if [[ -e "$T4D_ROOT_PATH/src" ]] && [[ "$_ForceSrcUpdate" != "-f" ]]; then
            echo "Using $(readlink -f $T4D_ROOT_PATH/src) [$0]"
        else
            echo "Linking $Tools4Dev_PATH [$0]"
            # local _Src="$Tools4Dev_PATH"
            if [[ "$Tools4Dev_PATH" != "$T4D_ROOT_PATH/src" ]]; then
                ln -sfnv "$Tools4Dev_PATH" "$T4D_ROOT_PATH/src"
            elif [[ -e "$T4D_ROOT_PATH/src-devel" ]]; then
                ln -sfnv "$T4D_ROOT_PATH/src-devel" "$T4D_ROOT_PATH/src"
            fi
        fi

        if [[ ! -e "$T4D_ROOT_PATH/.zshrc" ]]; then
            echo "Tools4Dev setup Link"
            (
                cd $T4D_ROOT_PATH
                mkdir -p completions bin lib team
                ln -sfn "src/project.env"              "${T4D_ROOT_PATH}/project.env"
                ln -sfn "src/.t4drc"                   "${T4D_ROOT_PATH}/.zshrc"
                ln -sfn "../src/t4d"                   "${T4D_ROOT_PATH}/bin/t4d"
                ln -sfn "src/Templates/init.env"       "${T4D_ROOT_PATH}/init"
                ln -sfn "../src/Templates/Team-New"    "${T4D_ROOT_PATH}/team/Default"
                if [[ ! -e "${T4D_ROOT_PATH}/manifest.xml" ]]; then
                    ln -sfn "src/Templates/Team-New/t4d-manifest.xml" "${T4D_ROOT_PATH}/manifest.xml"
                fi
            )
        fi
        echo "Welcome to Tools4Dev [$(cat $Tools4Dev_PATH/VERSION)]"
        export ZDOTDIR=$T4D_ROOT_PATH; zsh
    ;;
    *version)
        cat $Tools4Dev_PATH/VERSION
    ;;
    *help)
        echo "TO DO helper"
    ;;
    team)
        echo "$0"
        echo "-> T4D_ROOT_PATH=$T4D_ROOT_PATH"
        mkdir -p $T4D_ROOT_PATH/team
        t4d-init &> /dev/null
        if [[ "$2" == "-add" ]]; then
            _TeamOriginalPath="$PWD"
            if [[ -e "$_TeamOriginalPath/t4d-manifest.xml" ]]; then
                export WS_TEAM="$(cat $_TeamOriginalPath/t4d-manifest.xml | grep '<team' | grep -Eo 'name=.*' | cut -d '"' -f2)"
                if [[ ! -e "$T4D_ROOT_PATH/team/$WS_TEAM" ]]; then
                    ln -sfn $_TeamOriginalPath $T4D_ROOT_PATH/team/$WS_TEAM
                    ln -sfn $_TeamOriginalPath/t4d-manifest.xml $T4D_ROOT_PATH/manifest.xml
                    _t4dCheckSucceeded "Team $WS_TEAM added to Tools4Dev"
                    _t4dDebugLog $pinfo "you can now use wkd to reload your environment"
                else
                    _t4dCheckInfo "Team $WS_TEAM already exist"
                fi
            else
                _t4dDebugLog $perror "Folder >$_TeamOriginalPath< does not contain t4d-manifest.xml"
            fi
        else
            local _TeamOriginalPath="$(readlink $T4D_ROOT_PATH/team/$2)"
            if [[ "$_TeamOriginalPath" == "" ]]; then
                _TeamOriginalPath="$T4D_ROOT_PATH/team/$2"
            fi
            if [[ -e "$_TeamOriginalPath/t4d-manifest.xml" ]] && [[ "$WS_TEAM" != "$2" ]]; then
                ln -sfn $_TeamOriginalPath/t4d-manifest.xml $T4D_ROOT_PATH/manifest.xml
                _t4dDebugLog $plog "Tools4Dev is now linked to $2"
                _t4dDebugLog $plog "Team folder is now $_TeamOriginalPath"
                _t4dDebugLog $pinfo "you can now use wkd to reload your environment"
            elif [[ "$WS_TEAM" == "$2" ]]; then
                _t4dCheckSucceeded "Team $2 already setup in Tools4Dev"
            fi
        fi
        
    ;;
    link)
        echo "Using $Tools4Dev_PATH [$0]"
        local _Src="$Tools4Dev_PATH"
        if [[ "$_Src" != "$T4D_ROOT_PATH/src" ]]; then
            ln -sfnv "$_Src" "$T4D_ROOT_PATH/src"
        elif [[ "$Tools4Dev_PATH" != "$T4D_ROOT_PATH/src" ]]; then
            ln -sfnv "$Tools4Dev_PATH" "$T4D_ROOT_PATH/src"
        elif [[ -e "$T4D_ROOT_PATH/src-devel" ]]; then
            ln -sfnv "$T4D_ROOT_PATH/src-devel" "$T4D_ROOT_PATH/src"
        fi
    ;;
    native)
        if [[ -e "$HOME/.zshenv" ]]; then
            cat "$HOME/.zshenv" | grep -v "^ZDOTDIR" > $HOME/.zshenv.tmp
            mv $HOME/.zshenv.tmp $HOME/.zshenv
        fi
        echo "ZDOTDIR=$HOME/.tools4dev" > $HOME/.zshenv
    ;;
    update)
        set -e
        shift
        t4d-init &> /dev/null || t4d-init
        # t4dLoadProjectConf &> /dev/null
        t4dUpdate ${@}
    ;;
    clone)
        set -e
        shift
        cd $Tools4Dev_PATH
        t4d-init &> /dev/null || t4d-init
        # t4dLoadProjectConf &> /dev/null
        t4dUpdate 
        wks clone ${@}
    ;;
    exec)
        set -e
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
    docker)
        set -e
        shift
        cd $Tools4Dev_PATH 
        t4d-init
        mkdir -p $Tools4Dev_PATH/.t4d
        _lastTag="$(_t4dSrcGitInfoLastTag)"
        _lastTagName="$(echo $_lastTag | cut -d ' ' -f2)"
        _lastTagCommit="$(echo $_lastTag | cut -d ' ' -f1)"
        _Commit="$(_t4dSrcGitInfoLogFromBranch "$(echo $_lastTag | cut -d ' ' -f1)" HEAD | wc -l | tr -d ' ')"
        if [[ "$(echo $_lastTagName | grep -Eo '\-dev[0-9].*')" != "" ]]; then
            _CountTag="$(echo $_lastTagName | grep -Eo '\-dev[0-9].*' | sed 's|\-dev||g')"
            _Commit="$(_t4dMath $_Commit + $_CountTag)"
        fi
        _Version="$(cat $Tools4Dev_PATH/VERSION)"
        if [[ -e "$Tools4Dev_PATH/.t4d/.containerID" ]]; then
            T4D_CONTAINER_ID="$(cat $Tools4Dev_PATH/.t4d/.containerID)"
        fi
        case $WS_GIT_BRANCH in
            develop)
                _VersionSuffix="-dev$_Commit"
            ;;
            support/*)
                _VersionSuffix="-rc$_Commit"
            ;;
            $_Version)
                _VersionSuffix=""
            ;;
        esac
        case $1 in
            build)
                rm tools4dev.tar || true
                echo "docker build -t tools4dev:$_Version${_VersionSuffix} ."
                docker build --no-cache --progress=plain --build-arg T4D_FINAL_VERSION_SUFFIX="$_VersionSuffix" -t tools4dev:$_Version${_VersionSuffix} .
                echo "docker run -dt tools4dev:$_Version${_VersionSuffix}"
                docker run -dt tools4dev:$_Version${_VersionSuffix} > $Tools4Dev_PATH/.t4d/.containerID
                echo "export to $Tools4Dev_PATH/.t4d/docker/build"
                mkdir -p $Tools4Dev_PATH/.t4d/docker/build/tools4dev
                docker cp $(cat $Tools4Dev_PATH/.t4d/.containerID):/root/.tools4dev/tools4dev.tar $Tools4Dev_PATH/.t4d/docker/build/tools4dev_${_Version}${_VersionSuffix}.tar
                cd $Tools4Dev_PATH/.t4d/docker/build
                mkdir -p "${_Version}${_VersionSuffix}"
                sha256sum "tools4dev_${_Version}${_VersionSuffix}.tar" > "tools4dev_${_Version}${_VersionSuffix}.tar.sha"
                tar -xf "tools4dev_${_Version}${_VersionSuffix}.tar" -C "${_Version}${_VersionSuffix}"
                echo "To test new t4d setup you can now launch"
                echo "t4d start $Tools4Dev_PATH/.t4d/docker/build/${_Version}${_VersionSuffix}"
            ;;
            run)
                docker run -dt tools4dev:$_Version${_VersionSuffix} > $Tools4Dev_PATH/.t4d/.containerID
            ;;
            exec)
                if [[ -e "$Tools4Dev_PATH/.t4d/.containerID" ]]; then
                    docker exec -it $T4D_CONTAINER_ID zsh
                fi
            ;;
            stop)
                if [[ -e "$Tools4Dev_PATH/.t4d/.containerID" ]]; then
                    docker stop $T4D_CONTAINER_ID
                    rm $Tools4Dev_PATH/.t4d/.containerID
                fi
            ;;
        esac
    ;;
    -path|path)
        set -e
        cd $2
        shift
        shift
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null || source $PWD/project.env
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null || source $Tools4Dev_PATH/tools4Dev.env
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
    *)
        set -e
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null || source $PWD/project.env
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null || source $Tools4Dev_PATH/tools4Dev.env
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
esac

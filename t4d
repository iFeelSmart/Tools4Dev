#!/bin/zsh

autoload -U colors &> /dev/null 
colors &> /dev/null 
export Tools4Dev_PATH="${Tools4Dev_PATH:-$HOME/.tools4dev/src}"
function t4d-init() { source $T4D_ROOT_PATH/init }

if [[ -e "$Tools4Dev_PATH/manifest.xml" ]]; then
    export WS_TEAM="$(cat $Tools4Dev_PATH/manifest.xml | grep '<team' | grep -Eo 'name=.*' | cut -d '"' -f2)"
fi

export T4D_SILENT_COMMAND=true

case $1 in
    install)
        set -e
        cp -f "$HOME/.zshrc" "$HOME/.zshrc_" &&         echo "Tools4Dev  -> Old zshrc saved in $HOME/.zshrc_"

        if [[ $2 == "append" ]]; then
            ( cat "$Tools4Dev_PATH/Templates/zshrc.env" | sed "s|<TOOLS4DEV_PATH>|$Tools4Dev_PATH|g" | sed "s|<SHARED_WORKSPACE>|$SHARED_WORKSPACE|g"  | tee -a "$HOME/.zshrc" && echo "Tools4Dev  -> Write content of $Tools4Dev_PATH/Templates/zshrc.env at the end of $HOME/.zshrc" ) 2> /dev/null
            [[ ! -e "$Tools4Dev_PATH/Users/$USER.env" ]] && cp -f "$Tools4Dev_PATH/Templates/user-OhMyZSH.env" "./Users/$USER.env" 
        elif [[ $2 == "askMe" ]]; then
            echo "================"
            cat "$Tools4Dev_PATH/Templates/zshrc.env" | sed "s|<TOOLS4DEV_PATH>|$Tools4Dev_PATH|g" | sed "s|<SHARED_WORKSPACE>|$SHARED_WORKSPACE|g" 
            echo ""
            echo "================"
            echo "Do you want this file to be written at the end of your $HOME/.zshrc ?"
            echo "Enter to proceed, Ctrl+C to abort"
            read answer
            cat "$Tools4Dev_PATH/Templates/zshrc.env" | sed "s|<TOOLS4DEV_PATH>|$Tools4Dev_PATH|g" | sed "s|<SHARED_WORKSPACE>|$SHARED_WORKSPACE|g"  | tee -a "$HOME/.zshrc" && echo "Tools4Dev  -> Write content of $Tools4Dev_PATH/Templates/zshrc.env at the end of $HOME/.zshrc"
            if [[ ! -e "$Tools4Dev_PATH/Users/$USER.env" ]]; then
                cp -f "$Tools4Dev_PATH/Templates/user-OhMyZSH.env" "$Tools4Dev_PATH/Users/$USER.env"
            fi
        else
            cat "$Tools4Dev_PATH/Templates/zshrc.env" | sed "s|<TOOLS4DEV_PATH>|$Tools4Dev_PATH|g" | sed "s|<SHARED_WORKSPACE>|$SHARED_WORKSPACE|g"  > "$HOME/.zshrc" && echo "Tools4Dev  -> $Tools4Dev_PATH/Templates/zshrc.env copied in $HOME/.zshrc "
            if [[ ! -e "$Tools4Dev_PATH/Users/$USER.env" ]]; then
                cp -f "$Tools4Dev_PATH/Templates/user.env" "$Tools4Dev_PATH/Users/$USER.env"
            fi
        fi
    ;;
    uninstall)
        source $Tools4Dev_PATH/tools4Dev.env
        if [[ "$(echo $PWD | grep '.tools4dev')" != "" ]]; then
            _t4dDebugLog $perror "Please uninstall tools4dev from another repository"
            _t4dDebugLog $pinfo "cd $HOME"
            return 1
        fi
        _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color 'UNINSTALL')" "$plyellow" "15"
        echo ""
        echo "${plyellow}You are going to do nasty things, please verify first :${pstd}"
        echo "    - Local Git Content will be erased, please verify that your work is commited & pushed"
        echo "    - Also check cmake sub-repository that you might forgotten"
        echo "    - Check if you are local or hidden files that you want to keep in $T4D_ROOT_PATH or $Tools4Dev_PATH"
        if [[ -e "$Tools4Dev_PATH/.${USER}.env" ]]; then
            _t4dDebugLog $pinfo "Found $Tools4Dev_PATH/.${USER}.env backing up in $HOME/.t4d-$USER-backup.env"
            cp -f "$Tools4Dev_PATH/.${USER}.env" "$HOME/.t4d-$USER-backup.env"
        fi
        _t4dPromptSquare "Enter to continue, Ctrl+C to abort" $plpurple
        read answer
        echo ""
        echo ""
        echo ""
        
        echo ""
        _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color 'Deleting Tools4Dev ?')" "$plyellow" "15"
        _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color 'Enter to proceed, Ctrl+C to abort')" "$plyellow" "15"
        _t4dDebugLog $pinfo "It will erase $T4D_ROOT_PATH from your computer"
        
        read answer
        rm -rf "${T4D_ROOT_PATH:-$HOME/.tools4dev}" &
    ;;
    update)
        set -e
        shift
        t4d-init &> /dev/null || t4d-init
        # t4dLoadProjectConf &> /dev/null
        t4dUpdate ${@}
    ;;
    exec)
        set -e
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
    -path)
        set -e
        cd $2
        shift
        shift
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null || source $PWD/project.env
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null || source $Tools4Dev_PATH/tools4Dev.env
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
    *)
        set -e
        if [[ -e $PWD/project.env ]]; then
            source $PWD/project.env &> /dev/null || source $PWD/project.env
        else
            source $Tools4Dev_PATH/tools4Dev.env &> /dev/null || source $Tools4Dev_PATH/tools4Dev.env
        fi
        t4dLoadProjectConf &> /dev/null || t4dLoadProjectConf
        $@
    ;;
esac

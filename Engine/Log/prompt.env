#ERROR CODE 202

_t4dPromptLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptLine
#   - Name:
#       _t4dPromptLine
###
#   - Synopsis:
#       Will read your term Length create a line with =
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Example:
#       * {Example1}              = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local res=''
    local HALF_COLUMNS="$(expr $(_t4dPromptSize) / 2)"
    for numero in $(seq 1 $HALF_COLUMNS); do 
        res="${res}${plred}=${pstd}${pgreen}-${pstd}"
    done
    echo $res
###############################
}

_t4dPromptLineChar(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptLineChar
#   - Name:
#       _t4dPromptLineChar
###
#   - Synopsis:
#       Will read your term Length create a line with char send in $1
###
#   - Usage:
#       * _t4dPromptLineChar <char> [color]        = fill line with char and colorize it
#
###
#   - Example:
#       * {Example1}              = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local res="${2:-$plred}"
    for numero in $(seq 1 $(_t4dPromptSize)); do
        res="${res}$1"
    done
    echo "$res${pstd}"

###############################
}

_t4dPromptEndOfLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptEndOfLine
#   - Name:
#       _t4dPromptEndOfLine
###
#   - Synopsis:
#       Will write $1 at the end of line of your term
###
#   Usage :
#       * _t4dPromptEndOfLine <string> [colorCode] [remove n char]
#
#   Usage :
#       * _t4dPromptEndOfLine toto 
#       * _t4dPromptEndOfLine toto $plblue
#       * _t4dPromptEndOfLine toto $plblue 20
#
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
        local _res="${2:-$plred}"
    local _char="${3:-0}"
    local _endOfLine="$(_t4dPromptSize)"
    local _var="$(echo $1 | sed 's| |@|g')"
    local _output="$(_t4dPromptVarWithSpaceAtEnd "$( expr $_endOfLine - $_char)" "$_var" | sed 's|%||g')"
    echo "${_res}${_output}${pstd}" | sed 's|@| |g'

###############################
}

_t4dPromptObjectEndOfLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptObjectEndOfLine
#   - Name:
#       _t4dPromptObjectEndOfLine
###
#   - Synopsis:
#       Will write  at the end of line of your term
###
#   - Usage:
#       * _t4dPromptEndOfLine <string> [colorCode] [remove n char]     = print string at end of line
#
###
#   - Example:
#       * _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color 'BUILD INFO')" "$plpurple" "15"   = print square in purple at end of line removing 15 char 
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _res="${2:-$plred}"
    local _char="${3:-0}"
    local _endOfLine="$(_t4dPromptSize)"
    local _var="$(echo $1 | sed 's| |@|g')"
    for _vi in $(echo $_var); do
        local _output="$(_t4dPromptVarWithSpace "$( expr $_endOfLine - $_char)" "$_vi" | sed 's|%||g')"
        echo "${_res}${_output}${pstd}" | sed 's|@| |g'
    done


###############################
}

_t4dPromptObjectCenter(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptObjectCenter
#   - Name:
#       _t4dPromptObjectCenter
###
#   - Synopsis:
#       Will write  at the end of line of your term
###
#   Usage :
#       _t4dPromptObjectCenter <string> [colorCode] [remove n char]
#
###
#   - Example:
#       * _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color 'BUILD INFO')" "$plpurple" "15"
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _res="${2:-$plred}"
    local _head="$(echo $1 | head -1)"
    local _endOfLine="$( expr $(_t4dPromptSize 2) + $(expr ${#_head} / 2) )"
    local _var="$(echo $1 | sed 's| |@|g')"
    for _vi in $(echo $_var); do
        local _output="$(_t4dPromptVarWithSpaceAtEnd "$_endOfLine" "$(echo ${_vi} | rev)" "@" | rev | sed 's|%||g')"
        echo "${_res}${_output}${pstd}" | sed 's|@| |g'
    done

###############################
}

_t4dPromptIndent(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dPromptIndent" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptIndent
#   - Name:
#       _t4dPromptIndent
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Definition:
#
###
#   - Usage:
#       _t4dPromptIndent <NumberOfIndent> <Content>
#
###
#   - Example:
#       _t4dPromptIndent 4 "$(_t4dPromptSquare 'BUILD INFO')"
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _IndentBase=4
    local _TotalSpace="$(expr $1 \* $_IndentBase )"
    local _Content="$(echo $2 | sed 's| |@|g')"
    for _Line in $(echo $_Content); do
        echo "$(_t4dPromptVarWithSpace "$_TotalSpace" " ")${_Line}" | sed 's|@| |g' | sed 's|%||g'
    done

###############################
_t4dDebugInfoEnd "_t4dPromptIndent" "$@"
}


_t4dPromptAskForChar(){
###### _t4dPromptAskForChar
#   Usage : _t4dPromptAskForChar <Question> 
#
#   Output :
#   Return true if Enter was pressed
#   Return false if Any Key was pressed
#   Abort function if Ctrl+C was pressed
###### DOCUMENTATION BLOC #####
    if [[ "$_T4D_INTERACTIVE_MODE" == "true" ]]; then
        local _answer=""
        echo "$1"
        read -k 1 _answer
        if [[ "$(echo $_answer | tr -d '')" == "" ]]; then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi

}

_t4dPromptCentralLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptCentralLine
#   - Name:
#       _t4dPromptCentralLine
###
#   - Synopsis:
#       Will read your term Length create a line with char send in $1
###
#   - Usage:
#       * _t4dPromptCentralLine [color]        = create central line with color
#
###
#   - Example:
#       * _t4dPromptCentralLine                      = Default behavior
#       * _t4dPromptCentralLine $plblue              = Central line in blue
#       * _t4dPromptCentralLine $plblue  toto        = Central line in blue with toto at end
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local color=${1:-$pgreen}
    local _CharAtEnd="${2}"
    local res=''
    local HALF_COLUMNS="$(expr $(_t4dPromptSize) / 3)"
    if [[ "$_CharAtEnd" != "" ]]; then
        HALF_COLUMNS="$(expr $HALF_COLUMNS - ${#_CharAtEnd})"
    fi
    for numero in $(seq 1 $HALF_COLUMNS); do 
        res="${res}${color}--${pstd}"
    done
    echo "$(_t4dPromptCenterSpace "$(expr $HALF_COLUMNS \* 2)" | sed 's|-||g')${res}${color}${_CharAtEnd}${pstd}"

###############################
}

_t4dPromptEmptyCenter(){
###### _t4dPromptEmptyCenter
#   Will write a line with char expect N char in center
#   Usage :
#       _t4dPromptEmptyCenter <N> [Char]
###### DOCUMENTATION BLOC #####
    local _res=""
    local _space=""
    local _rest="0"
    local _size="$(_t4dPromptSize)"
    local _half="$(expr $_size / 2)"
    local _realHalf=$(expr $_half - ${1:-0})
    local _rest="$(expr $_size % 2)"
    for a in $(seq 1 ${1:-1}); do
        local _space="$_space "
    done 
    for i in $(seq 1 $_realHalf); do
        _res="$_res${2:-#}"
    done
    if [[ "$_rest" != "1" ]]; then
        _res="$(echo $_res | sed 's|#||')"
    fi
    _res="$_res$_space"
    echo "$_res$(echo $_res | rev)"
}

_t4dPromptCenterSpace(){
###### _t4dPromptCenterSpace
#   This method will show a word in the center of your stdout
#   Usage1 : echo "$(_t4dPromptCenterSpace '6' | sed 's|-||g')Coucou"
#   Usage2 : echo "$(_t4dPromptCenterSpace '21' | sed 's|-||g')1234567890 1234567890"
###### DOCUMENTATION BLOC #####
    local _res=''
    local _col=$(_t4dPromptSize)
    local _CENTER_CUNTER="$(expr $(expr $_col - $1) / 2)"
    for numero in $(seq 1 $_CENTER_CUNTER); do 
        _res="$_res "
    done
    echo "$_res-"
}

_t4dPromptSize(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dPromptSize" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptSize
#   - Name:
#       _t4dPromptSize
###
#   - Synopsis:
#       Get Terminal number of columns
###
#   - Definition:
#       Return Terminal number of columns, if variable COLUMNS does not exist, will return 100
#       you can divide this result with arg1
#
###
#   - Usage:
#       _t4dPromptSize <Arg>
#
###
#   - Options:
#
###
#   - Example:
#       _t4dPromptSize 2
#       _t4dPromptSize
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _res=${COLUMNS}
    if [[ "$_res" == "0" ]] || [[ "$_res" == "" ]]; then
        _res=100
    fi
    echo "$(expr $_res / ${1:-1})"

###############################
_t4dDebugInfoEnd "_t4dPromptSize" "$@"
}

_t4dPromptLogo(){
    echo "WARNING : OBSOLETE USE t4dLogo"
    t4dLogo
}

_t4dPromptError(){
###### _t4dPromptError
#   Definition :
#       Show preformat error message
#
#   Usage :
#       _t4dPromptError <ErrorCode> <Message> [Involved function]
###### DOCUMENTATION BLOC #####
    (>&2 echo "    ${plred}ERROR $1${pstd} -> $2")
    if [[ "$3" != "" ]]; then
        echo ""
        echo "${plyellow}$3${pstd}"
        [[ "$3" != "" ]] && which $3 | grep '^#' | sed 's|^#||g'
    fi
}

_t4dWarning(){
    (>&2 echo)
    (>&2 echo)
    (>&2 _t4dPromptSquare "ERROR $1" $plyellow)
}

_t4dPromptWorkspace(){
###### _t4dPromptWorkspace
#    Will show important information
###### DOCUMENTATION BLOC #####
    local _user=$USER
    local _sharedDir=$Tools4Dev_PATH
    local _counter=$(expr $(_t4dPromptSize) - ${#_user:-0} - ${#_sharedDir:-0} - 28 )
    for numero in $(seq 1 $_counter); do
        center="$center "
    done
    _t4dPromptInfo "User" "${_user}" 17
    _t4dPromptInfo "Tools4Dev_PATH" "${_sharedDir}" 17
    _t4dPromptInfo "IFS_ROOT" "${IFS_ROOT}" 17
}

_t4dPromptInfo(){
###### _t4dPromptInfo
#    linked to _t4dPromptWorkspace functions
#   Usage :
#       _t4dPromptInfo "toto" "info" 17 ":" $plyellow
###### DOCUMENTATION BLOC #####
    local _res=''
    local _variableName="$1"
    local _variable="$(echo $2 | tr '\n' '~' | sed 's|     | |g' | sed 's|    | |g' | sed 's|   | |g' | sed 's|~$||g')"
    local _maxSize="$3"
    local _separator="${4}"
    local _color="${5:-"$plpurple"}"
    local _counter=$(expr $_maxSize - ${#_variableName})
    local _indentSpace="$(_t4dPromptVarWithSpaceAtEnd "$(expr $_maxSize + 2)" " " | sed 's|%||g')"
    for _numero in $(seq 1 $_counter); do
        _res="${_res} "
    done
    if [[ ! -z ${_variable} ]]; then
        echo "${_color}${_variableName}${_res}${pstd}${_separator:-":"} $(echo ${_variable} | sed "s|~|\n$_indentSpace|g")"
    fi
}

_t4dPromptListInfo(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dPromptListInfo" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptListInfo
#   - Name:
#       _t4dPromptListInfo
###
#   - Synopsis:
#       Show a list of Variable name and contents
###
#   - Definition:
#       Linked to _t4dPromptInfo
#
###
#   - Usage:
#       _t4dPromptListInfo "<List of Variable Names>" 17 ":" $plyellow
#
###
#   - Options:
#
###
#   - Example:
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    for i in $(echo $1); do
        _t4dPromptInfo "    $i" "$(eval echo \$$i)" ${2:-17} "${3:-':'}" "${4:-"$plred"}"
    done

###############################
_t4dDebugInfoEnd "_t4dPromptListInfo" "$@"
}

_t4dPromptVarWithChar(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dPromptVarWithChar
#   - Name:
#      _t4dPromptVarWithChar
###
#   - Synopsis:
#        Important and usefull method to fill variable with space to create a fixed lenght variable and generate pretty stdout blocks
###
#   - Usage:
#        _t4dPromptVarWithChar 10 "yourVariable" '.' | sed 's|%||g'
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _res=''
    local _Rev="false"

    if [[ "$1" == "-rev" ]]; then
        _Rev="true"
        shift
    fi
    local _lenght="$1"
    local _var="$2"
    local _char="$3"
    local _counter=$(expr $_lenght - ${#_var})

    if [[ $_counter -gt 0 ]]; then
        _res="$(_t4dPromptVarFillWithChar "$_char" $_counter)"
    fi
    
    if [[ "$_Rev" == "true" ]]; then
        echo "%$_res$2%"
    else

        echo "%$2$_res%"
    fi
###############################
}

_t4dPromptVarCenterWithChar(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.0
_t4dDebugInfoStart "_t4dPromptVarCenterWithChar" "$#" "$@"
###### _t4dPromptVarCenterWithChar
#   - Name:
#       _t4dPromptVarCenterWithChar
###
#   - Synopsis:
#       Fill variable with char to create a fixed lenght variable with value at center
###
#   - Example:
#       _t4dPromptVarCenterWithChar 20 "yourVa" '.' | sed 's|%||g'
#       _t4dPromptVarCenterWithChar 20 "yourVariable123" '.' | sed 's|%||g'
#       _t4dPromptVarCenterWithChar 20 "yourVariable" '.' | sed 's|%||g'
###
###### DOCUMENTATION BLOC #####

    local _res=''
    local _pair=''
    local _Color=""
    if [[ "$1" == "--color" ]]; then
        local _Color="$2"
        shift
        shift
    else
        local pstd=""
    fi

    local _counter="$(expr $(expr $1 - ${#2}) / 2 )"
    local _rest="$(expr $(expr $1 - ${#2}) % 2 )"
    local _sep="${3:-.}"
    local _sepF="${4:-%}"

    for _numero in $(seq 1 $_counter); do
        _res="${_res}${_sep}"
    done
    if [[ "$_rest" != "0" ]]; then
        _pair="$_sep"
    fi
    echo "${_sepF}${_Color}${_res}$2${_res}${_pair}${pstd}${_sepF}"

###############################
_t4dDebugInfoEnd "_t4dPromptVarCenterWithChar" "$@"
}

_t4dPromptVarWithSpaceAtEnd(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.0
_t4dDebugInfoStart "_t4dPromptVarWithSpaceAtEnd" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptVarWithSpaceAtEnd
#
#   Definition:
#       Important and usefull method to fill variable with space to create a fixed lenght variable and generate pretty stdout blocks
#
#   Usage :
#       _t4dPromptVarWithSpace 10 "yourVariable" | sed 's|%||g'
#
#   Note :
#       Space are included before
#
#   - Keyword:
#       
#
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    #EMPTY FUNCTION OVERRIDED IN PLATFORMS

###############################
_t4dDebugInfoEnd "_t4dPromptVarWithSpaceAtEnd" "$@"
}

_t4dPromptVarWithSpace(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.0
_t4dDebugInfoStart "_t4dPromptVarWithSpace" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptVarWithSpace
#
#   Definition:
#       Important and usefull method to fill variable with space to create a fixed lenght variable and generate pretty stdout blocks
#
#   Usage :
#       _t4dPromptVarWithSpace 20 "yourVariable" | sed 's|%||g'
#
#   Note :
#       Space are included before
#
#   - Keyword:
#       
#
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    #EMPTY FUNCTION OVERRIDED IN PLATFORMS

###############################
_t4dDebugInfoEnd "_t4dPromptVarWithSpace" "$@"
}


_t4dPromptEchoTimer(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dPromptEchoTimer" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptEchoTimer
#   - Name:
#       _t4dPromptEchoTimer
###
#   - Synopsis:
#       Echo Timer that decrease his value until 1 + sleeping 1 seconds
###
#   - Example:
#       _t4dPromptEchoTimer 9 <Message>
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _Pre="${2}"
    local _Post="${3}"
    for i in $( seq $1 -1 1 ); do
        echo -en "\r${_Pre} $i ${_Post}  "
        sleep 1
    done
    echo -en "\r"

###############################
_t4dDebugInfoEnd "_t4dPromptEchoTimer" "$@"
}

_t4dPromptInProgress(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dPromptEchoTimer" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptEchoTimer
#   - Name:
#       _t4dPromptEchoTimer
###
#   - Synopsis:
#       Delete previous echo then show sended message
###
#   - Example:
#       _t4dPromptEchoTimer <Message>
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    echo -en "\r$1"

###############################
}

_t4dPromptSquare(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dPromptSquare
#   - Name:
#       _t4dPromptSquare
###
#   - Synopsis:
#       Generate pretty square with your string in it (and by string i mean variable)
###
#   - Definition:
#       Can be used anywhere in your code in order to generated a pretty console output
#       +-+-+-+-+-+-+
#       + taratata  +
#       +-+-+-+-+-+-+
#
###
#   - Usage:
#       * _t4dPromptSquare [Options] <Args>
#
###
#   - Available Options:
#       * --no-color          = Remove all color code from output, used to write data in file
#
###
#   - Example:
#       * _t4dPromptSquare --no-color 'taratata'
#       * _t4dColorDisabled _t4dPromptSquare 'taratata'
#       * _t4dPromptSquare 'taratata'
#       * _t4dPromptSquare 'taratata' $plblue
#       * _t4dPromptSquare 'My Name is %%HAMTARO%%'
#       * _t4dPromptSquare 'My Name is %%HAMTARO%%' $plblue $plpurple
#       * _t4dPromptSquare "My Name is %%HAMTARO%% \n NewLine" $plblue $plpurple
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _res="+"
    local _Pairspace=" "
    local _additionnalColor=""
    local _color=""

    if [[ "$1" == "--no-color" ]]; then 
        local pstd=""
        shift
    else
        _color=${2:-$plred}
        if [[ "$(echo $1 | grep '%%')" != "" ]]; then
            _additionnalColor="${3:-$plcyan}"
        fi
    fi

    local _variable="$(echo $1 | sed 's|%%||g')"
    local _varmaxSize="$(_t4dVarGetMaxSize $(echo $_variable | sed 's| |_|g'))"
    local _outputvariable="$(echo $1)"
    
    if [[ "$(expr ${_varmaxSize} % 2)" == "1" ]]; then 
        _Pairspace="$_Pairspace "
    fi

    local _totalSize="$(expr $(expr ${_varmaxSize} + 5) / 2 )"
    for _numero in $(seq 1 $_totalSize); do
        _res="${_res}-+"
    done
   
    echo "${_color}${_res}${pstd}"

    echo $_outputvariable | while read _line ; do
        if [[ "$_additionnalColor" != "" ]]; then
            local _varmaxSizeAdditionnalColor="$(expr $_varmaxSize + $(echo $_line | grep -Eo '%%' | tr -d '\n' | wc -c | tr -d ' ') )"
            echo "${_color}+ $(_t4dPromptVarWithSpaceAtEnd "$_varmaxSizeAdditionnalColor" "${_line}" | sed "s|%%|\\$_additionnalColor|" | sed "s|%%|\\${_color}|" | sed 's|%||g')${_color}${_Pairspace} +${pstd}"
        else
            echo "${_color}+ $(_t4dPromptVarWithSpaceAtEnd "$_varmaxSize" "${_line}" | sed 's|%||g')${_color}${_Pairspace} +${pstd}"
        fi
    done

    echo "${_color}${_res}${pstd}"

###############################
}

_t4dPromptHyperLink(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dPromptHyperLink" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dPromptHyperLink
#   - Name:
#       _t4dPromptHyperLink
###
#   - Synopsis:
#       Show OutPut Line as HyperLink
###
#   - Usage:
#       _t4dPromptHyperLink <Link> <Name>
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    echo -e "\e]8;;${1}\a${2}\e]8;;\a"

###############################
_t4dDebugInfoEnd "_t4dPromptHyperLink" "$@"
}

_t4dPromptFixedCol(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.0
_t4dDebugInfoStart "_t4dPromptFixedCol" "$#" "$@"
###### _t4dPromptFixedCol
#   - Name:
#       _t4dPromptFixedCol
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Example:
#       _t4dPromptFixedCol 40 "yeah" "u" "tototototototot" "ILoveMyWorkHer" "1" "barbra streisand" "yeah" "u" "tototototototot" "ILoveMyWorkHer" "1" "barbra streisand"
###
###### DOCUMENTATION BLOC #####
    local _limit="$1"
    local _Color=""
    shift
    if [[ "$1" == "--color" ]]; then
        local _Color="$2"
        shift
        shift
    fi
    local res=$_limit
    local col=$(expr $(_t4dPromptSize) / ${_limit} )
    local line=$(expr $# / $col + 1)
    #echo $col - $line
    for n in $(seq 0 $(expr $line - 1)); do
        _res=''
        for i in $(seq 1 $col); do
            s="$(expr $col \* $n + $i)"
            var=$(_t4dPromptVarWithSpace ${res} $(eval "echo \$$s") | sed 's|%||g')
            _res="$_res$var"
        done
        echo "${_Color}    $_res ${pstd}"
    done

###############################
_t4dDebugInfoEnd "_t4dPromptFixedCol" "$@"
}

_t4dPromptTable(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.0
_t4dDebugInfoStart "_t4dPromptTable" "$#" "$@"
###### _t4dPromptTable
#   - Name:
#       _t4dPromptTable
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Example:
#       _t4dPromptTable 40 "yeah" "u" "tototototototot" "ILoveMyWorkHer" "1" "barbra streisand" "yeah" "u" "tototototototot" "ILoveMyWorkHer" "1" "barbra streisand"
###
###### DOCUMENTATION BLOC #####
    _t4dDebugLog $pwarning "This is deprecated"
    local _limit="$1"
    local _Color=""
    shift
    if [[ "$1" == "--color" ]]; then
        local _Color="$2"
        shift
        shift
    fi
    local res=$_limit
    local col=$(expr $(_t4dPromptSize) / ${_limit} )
    local line=$(expr $# / $col + 1)
    if [[ $line -gt 1 ]]; then
        echo "Error"
    else
        _res=''
        for i in $(seq 1 $col); do
            s="$(expr $col \* $n + $i)"
            var=$(_t4dPromptVarCenterWithChar ${res} $(eval "echo \$$s") | sed 's|%||g')
            _res="$_res$var"
        done
        echo "${_Color}    $_res ${pstd}"
    fi
}

_t4dPromptChart(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dPromptChart
#   - Name:
#       _t4dPromptChart
###
#   - Synopsis:
#       utils that will return a preformated table
###
#   - Usage:
#       _t4dPromptChart -head  "   A1   |      B1      "
#       _t4dPromptChart -data  "   A2   |      B2      "
###
#   - Example:
#       _t4dPromptChart -head  "   TitleA   |      TitleB      "
#       _t4dPromptChart -data  "   DataA1   |      DataB2      "
#       _t4dPromptChart -data  "   DataA2   |      DataB2      "
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Res="|"
    local _ResL2="|"
    local _SpaceDelim="§"

    while [[ "$@" != "" ]]; do
        case "$1" in
            -delim)
                _SpaceDelim="$2"
                shift
            ;;
            -head|-data)
                local _type="$1"
                local _Content="$2"
                shift
            ;;
            -size)
                local _ContentSize="$2"
                local _UseFixedSize="true"
                shift
            ;;
            *)
                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
                return $_t4dErrorCode
            ;;
        esac
        shift
    done

    if [[ "$(echo $_Content | grep "$_SpaceDelim")" != "" ]]; then
        _t4dDebugLog $pwarning "_t4dPromptChart - Unsupported char $_SpaceDelim"
    fi

    case $_type in
        -head|-data)
            local _Count="$(echo $_Content | tr '|' '\n' | wc -l)"
            for i in $(seq 1 $_Count); do
                local data="$(echo $_Content | cut -d '|' -f$(echo $i))"
                if [[ "$_UseFixedSize" == "true" ]]; then
                    local _valueSize="$(echo $_ContentSize | cut -d '|' -f$(echo $i))"
                    local _size="$(expr ${#_valueSize} + 2 )"
                else
                    local _size="$(expr ${#data} + 2 )"
                fi
                # _t4dDebugLog $pinfo "$data -> ${_size}"
                _Res="${_Res} $(_t4dPromptVarCenterWithChar ${_size} "$data" "$_SpaceDelim" "$_SpaceDelim") |"
                _ResL2="${_ResL2} $(_t4dPromptVarCenterWithChar ${_size} "$_valueSize" "$_SpaceDelim" "$_SpaceDelim") |"
            done
            echo "$_Res" | sed "s|$_SpaceDelim| |g"
            if [[ "$_type" == "-head" ]]; then
                echo "$_ResL2" | sed "s|$_SpaceDelim| |g"
            fi


        ;;
        *)
            _t4dDebugLog $perror "Can't manage type >$_type< in _t4dPromptChart $@"
        ;;
    esac

###############################
}

_t4dPromptCol(){
###### _t4dPromptCol
#    Please don't touch it's a very sensible function
#    This will create a beautiful table with variable using your term lenght + variables lenght + number
#    Usage : _t4dPromptCol "yeah" "u" "tototototototot" "ILoveMyWorkHereButIWantMoreFoodInTheFridge" "1" "barbra streisand"
#    Usage : _t4dPromptCol "yeah" "u" "tototototototot" "ILoveMyWorkHere" "1" "12" "barbra streisand" "David Ghetta" "Hello"
###### DOCUMENTATION BLOC #####

    res=1
    for _var in $@; do
        if (( ${#_var} > $res )); then
            export res=$(expr ${#_var} + 4)
        fi
    done
    col=$(expr $(_t4dPromptSize) / ${res} )
    line=$(expr $# / $col + 1)
    #echo $col - $line
    for n in $(seq 0 $(expr $line - 1)); do
        _res=''
        for i in $(seq 1 $col); do
            s="$(expr $col \* $n + $i)"
            var=$(_t4dPromptVarWithSpace ${res} $(eval "echo \$$s") | sed 's|%||g')
            _res="$_res$var"
        done
        echo "    $_res"
    done
}

_t4dSrcPromptDemo(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcPromptDemo
#   - Name:
#       _t4dSrcPromptDemo
###
#   - Synopsis:
#       return an output to show user what can be done with prompt functions
###
#   - Usage:
#       * _t4dSrcPromptDemo        = See output example for _t4dPrompt Lib
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local  _HeadMenu="     FirstCol   |     SecondCol      |            Data           "
    local _ChartSize=":--------------:|:------------------:|:-------------------------:"

    _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color 'BUILD INFO')" "$plpurple" "15"
    for i in $(seq 1 5); do
        _t4dPromptInfo "Title[$i]" "Data" 17 ":" $plyellow
    done
    echo ""
    _t4dPromptEndOfLine "END OF LINE" $plblue
    _t4dPromptLineChar "-"




    _t4dPromptChart -head $_HeadMenu -size $_ChartSize

    for i in $(seq 1 15); do
        _t4dPromptChart -data "Chart[1][$i]|Chart[2][$i]|Chart[1][$i]" -size $_ChartSize
    done
    ###############################
}

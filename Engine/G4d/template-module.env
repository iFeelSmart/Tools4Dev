
_t4dUtilsModuleMain(){
    local _Name="$1"
    local _Options="$2"
    local _Synopsis="$3"
    _t4dUtilsModuleMainHeader "$_Name" "$_Synopsis"
    echo ""
    _t4dUtilsModuleMainFunction "$_Name" "$_Options" "$_Synopsis"
    echo ""
    _t4dUtilsModuleMainCompletion "$_Name"
    echo ""
    _t4dUtilsModuleMainDoc "$_Name"
    echo ""
    _t4dUtilsModuleMainLogo "$_Name"

}

_t4dUtilsModuleMainHeader(){
    local _LowerName="$(_t4dVarRemoveMaj $1)"
    local _CamlName="$(_t4dVarConvertToCamelCase $1)"
    local _MajName="$(echo $_LowerName | tr '[a-z]' '[A-Z]')"
    local _Synopsis="$2"
    echo '#### MODULE HEADER BLOC'
    echo '#'
    echo '#   - Name:'
    echo "#       ${_LowerName}"
    echo '###'
    echo '#   - Synopsis:'
    echo "#       ${_Synopsis}"
    echo '###'
    echo '#   - Prefix:'
    echo "#       _t4dMod${_CamlName}"
    echo '###'
    echo '#   - Error Code:'
    echo '#       360'
    echo '###'
    echo '#  -  Supported Platform:'
    echo '#       * OSX ( 10.12.6 or higher )'
    echo '#       * Fedora ( 25 or higher )'
    echo '###'
    echo '#  -  Author(s):'
    echo '#       Quentin NIO'
    echo '#'
    echo '###'
    echo '#### HEADER BLOC ####'
    local _AvailableFiles="$(find $T4D_MODULES_PATH/$_LowerName/_t4d_ | grep '.env$' | sed "s|$T4D_MODULES_PATH/$_LowerName/_t4d_/||g")"
    for _file in $(echo $_AvailableFiles); do
        echo "source \$T4D_MODULES_PATH/$_LowerName/_t4d_/$_file" 
    done
    echo ""
    echo "T4D_MOD_${_MajName}_ROOT=\"\$T4D_MODULES_PATH/$_LowerName\""
}

_t4dUtilsModuleMainFunction(){
    local _Name="$(_t4dVarConvertToCamelCase $1)"
    local _LowerName="$(_t4dVarRemoveMaj $1)"
    local _Synopsis="$3"
    local _Options="$2"

    _t4dUtilsTemplateFunctionStart "${_LowerName}"
    _t4dUtilsTemplateHeaderBlockstart "$_LowerName" "$_Synopsis"
    _t4dUtilsTemplateHeaderBlocksection Definition
    echo '#   - Usage:'
    echo "#       * ${_LowerName} <option>  [arguments]"
    echo "#           Will execute ${_LowerName} command with all arguments"
    echo "#       * ${_LowerName} help <option>       "
    echo "#           Show specific option's documentation "
    echo '#'
    echo '###'
    _t4dUtilsTemplateHeaderBlocksection Options
    _t4dUtilsTemplateHeaderBlocksection Example
    _t4dUtilsTemplateHeaderBlocEnd

    echo "    local CHPWD=1"
    echo '    local _debug="false"'
    echo "    local _t4d${_Name}Error=360"
    echo "    mkdir -p \$T4D_PROJECT_LOG_PATH/${_LowerName}"

    echo '    if [[ $1 != "help" ]]; then'
    echo "        _t4dMod${_Name}Logo main"
    echo '    fi'
    echo 'if [[ "$1" == "--debug" ]]; then'
    echo '    _debug="true"'
    echo '    set -x'
    echo '    shift'
    echo 'fi'

    echo '    (set -e'
    echo '        case $1 in'
    for _option in $(echo $_Options | grep -v 'help') "help" ; do
        local _CamelCase="$(_t4dVarConvertToCamelCase $_option)"
        echo "            $(_t4dPromptVarWithSpaceAtEnd 20 "$_option)"  ) $(_t4dPromptVarWithSpaceAtEnd 35 "_t4dMod${_Name}${_CamelCase} \${@:2}") ;;" | sed 's|%||g'
    done
    echo '            *)'
    echo '                _t4dDebugLog "$perror" "Empty or Unknown argument < $1 >"'
    echo '                return 360'
    echo '            ;;'
    echo '         esac'

    echo '    )'
    echo '    #ALL COMMAND ARE LAUNCHED IN A SUBSHELL'
    echo '    #This is here to stop command at the first untracked error'
    echo '    #We Also need to check the subshell output in order to identified which kind of error is sent'
    echo '    if [[ "$?" == "0" ]]; then'
    echo "        _t4d${_Name}Error=\"0\""
    echo '    fi'
    echo '    if [[ "$_debug" == "true" ]]; then'
    echo '        set +x'
    echo '    fi'

    echo "    return \$_t4d${_Name}Error"

    _t4dUtilsTemplateFunctionEnd
}

_t4dUtilsModuleMainCompletion(){
    local _Name="$(_t4dVarConvertToCamelCase $1)"
    local _LowerName="$(_t4dVarRemoveMaj $1)"
    echo '#AUTO COMPLETION'
    echo " _${_LowerName}(){"
    echo '     local cur prev opts'
    echo "     local _name='${_LowerName}'"
    echo '     COMPREPLY=()'
    echo '     cur="${COMP_WORDS[COMP_CWORD]}"'
    echo '     prev="${COMP_WORDS[COMP_CWORD-1]}"'
    echo '     option="${COMP_WORDS[1]}"'
    echo '     if [[ -e $T4D_MODULES_PATH/${_name}/.ressources/completions/${_name} ]]; then'
    echo '         if [[ ${prev} == "${_name}" ]] || [[ ${prev} == "help" ]] ; then'
    echo '             opts="$(cat $T4D_MODULES_PATH/${_name}/.ressources/completions/${_name})"'
    echo '             COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )'
    echo '             return 0'
    echo '         elif [[ -e "$T4D_MODULES_PATH/${_name}/.ressources/completions/${_name}-module/${option}" ]]; then'
    echo '             opts="$(cat $T4D_MODULES_PATH/${_name}/.ressources/completions/${_name}-module/${option})"'
    echo '             COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )'
    echo '             return 0'
    echo '         fi'
    echo '     fi'
    echo ' }'
}

_t4dUtilsModuleMainDoc(){
    local _Name="$(_t4dVarConvertToCamelCase $1)"
    local _LowerName="$(_t4dVarRemoveMaj $1)"
    echo "_t4dMod${_Name}Help(){"
    echo "###### _t4dMod${_Name}Help"
    echo '#   - Name:'
    echo "#       _t4dMod${_Name}Help"
    echo '###'
    echo '#   - Synopsis:'
    echo '#       Show Module Documentation'
    echo '###'
    echo '#   - Definition:'
    echo '#       Parse module Header to show user a ready to read shell documentation'
    echo '###'
    echo '###### DOCUMENTATION BLOC ##### '
    echo '########### CODE BLOC #########'
    echo '    local _Internal="${2:-shell}"'
    echo "    local _Module='${_LowerName}'"
    echo '    local _MainContent="$(_t4dDocGetFunctionContent ${_Module})"'
    echo '    if [[ "$_Internal" == "-no-shell" ]]; then'
    echo '        echo $_MainContent'
    echo '    elif [[ $# -eq 1 ]] && [[ "$(_t4dDocGetOptionsList "$_MainContent" | grep "^$1")" != "" ]]; then'
    echo '        local _OptionHiddenCallName="$(_t4dDocGetOptionsHiddenCall "$_MainContent" $1)"'
    echo '        t4dHelp $_OptionHiddenCallName | sed "s|$_OptionHiddenCallName|$_Module $1|g"'
    echo '    elif [[ "$1" == "" ]] || [[ "$1" == "${_Module}" ]]; then'
    echo "        _t4dMod${_Name}Logo doc"
    echo '        t4dHelp -no-logo ${_Module}'
    echo '    else'
    echo '        t4dHelp $@'
    echo '    fi'
    echo '    echo ""'
    echo '    echo ""'
    echo '    echo ""'
    echo '}'
    echo '###############################'
}

_t4dUtilsModuleMainLogo(){
    local _Name="$(_t4dVarConvertToCamelCase $1)"

    echo "_t4dMod${_Name}Logo(){"
    echo '# Generated From $Tools4Dev_PATH/Engine/G4d/templates-module.env'
    echo '# v1.8.0'
    echo "###### _t4dMod${_Name}Logo"
    echo '#   - Name:'
    echo "#       _t4dMod${_Name}Logo"
    echo '###'
    echo '#   - Synopsis:'
    echo '#       Show Ascii Module logo art'
    echo '###'
    echo '##### DOCUMENTATION BLOC #####'
    echo '########### CODE BLOC #########'
    echo '     local _color=${1:-$plcyan}'
    echo '     hashL1="##      ##     #####      ###### "'
    echo '     hashL2="###    ###   ##    ##    ##    ##"'
    echo '     hashL3="## #### ##  ##     ##   ##     ##"'
    echo '     hashL4="##  ##  ##  ##    ##   ##     ## "'
    echo '     hashL5="##      ##   #####    ########   "'
    echo '     if [[ "$_T4D_QUIET_MODE" == "true" ]]; then'
    echo '         #DoNothing'
    echo '     elif [[ "$1" == "doc" ]]; then'
    echo '         local _Content="${hashL1}%${hashL2}%${hashL3}%${hashL4}%${hashL5}"'
    echo '         _t4dDocWks ${_Content} ${pired}'
    echo '     elif [[ "$1" == "main" ]]; then'
    echo '         local center="$(_t4dPromptCenterSpace "58" | sed "s|-||g")"'
    echo '         echo "${center}${plcyan}##########################################################"'
    echo '         echo          "${center}#################                         ################"'
    echo '         echo          "${center}#########                 Modules                 ########"'
    echo '         echo          "${center}###### _____            _     _  _     ___          ######"'
    echo '         echo          "${center}####  /__   \___   ___ | |___| || |   /   \_____   __ ####"'
    echo '         echo          "${center}###     / /\/ _ \ / _ \| / __| || |_ / /\ / _ \ \ / /  ###"'
    echo '         echo          "${center}###    / / | (_) | (_) | \__ \__   _/ /_//  __/\ V /   ###"'
    echo '         echo          "${center}###    \/   \___/ \___/|_|___/  |_|/___ / \___| \_/    ###"'
    echo '         _t4dPromptEmptyCenter 26'
    echo '         _t4dPromptEmptyCenter 26'
    echo '         _t4dPromptEmptyCenter 26'
    echo '         echo "$pstd"'
    echo '     else'
    echo '         local center="$(_t4dPromptCenterSpace "${\#l5}" | sed "s|-||g")"'
    echo '         echo "${center}${_color} $hashL1 ${pstd}"'
    echo '         echo "${center}${_color} $hashL2 ${pstd}"'
    echo '         echo "${center}${_color} $hashL3 ${pstd}"'
    echo '         echo "${center}${_color} $hashL4 ${pstd}"'
    echo '         echo "${center}${_color} $hashL5 ${pstd}"'
    echo '         echo ""'
    echo '     fi'
    echo '}'
    echo '###############################'
}

_t4dUtilsModuleCreateFile(){
    local _File="$1"
    local _ModuleName="$2"
    case $_File in
        _main_*)
            local _ModuleOptions="$3"
            local _ModuleSynopsis="$4"
            _t4dUtilsModuleMain "$_ModuleName" "$_ModuleOptions" "$_ModuleSynopsis" > $_File
            _t4dCheckInfo "File $_File Created"
        ;;
    esac
    
}
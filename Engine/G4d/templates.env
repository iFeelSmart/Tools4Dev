T4D_GENERATOR_VERSION="1.8.0"
T4D_GENERATOR_PATH="\$Tools4Dev_PATH/Engine/G4d/templates.env"


_t4dUtilsTemplateErrorCode(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateErrorCode
#   - Name:
#       _t4dUtilsTemplateErrorCode
###
#   - Synopsis:
#       write error code for dynamic content generation
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
local _Code=${1:-1}
cat >&1 << EOF
    local _t4dErrorCode=${_Code}
EOF
###############################
}

_t4dUtilsTemplateDebugLog(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateDebugLog
#   - Name:
#       _t4dUtilsTemplateDebugLog
###
#   - Synopsis:
#       write debugLog not defined yet code for dynamic content generation
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
local _Name=${1}
   echo "   _t4dDebugLog \$pinfo \"${_Name} not defined yet\""
###############################
}

_t4dUtilsTemplateFunctionStart(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateFunctionStart
#   - Name:
#       _t4dUtilsTemplateFunctionStart
###
#   - Synopsis:
#       function name
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
local _Name=$1
cat >&1 << EOF
$_Name(){
EOF
###############################
}

_t4dUtilsTemplateFunctionEnd(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateFunctionEnd
#   - Name:
#       _t4dUtilsTemplateFunctionEnd
###
#   - Synopsis:
#       function end
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo "###############################"
    echo "}"
###############################
}


_t4dUtilsTemplateHeaderBlockstart(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateHeaderBlockstart
#   - Name:
#       _t4dUtilsTemplateHeaderBlockstart
###
#   - Synopsis:
#       Documentation Bloc Start
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _Name="$1"
    local _Synopsis="${2:-'|One-line description of what it does. (less than 55 char)|'}"
    echo "# Generated From $T4D_GENERATOR_PATH"
    echo "# v$T4D_GENERATOR_VERSION"
    echo "###### $_Name"
    echo '#   - Name:'
    echo "#       $_Name"
    echo '###'
    echo '#   - Synopsis:'
    echo "#       $_Synopsis"
    echo '###'
###############################
}

_t4dUtilsTemplateHeaderBlocksection(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateHeaderBlocksection
#   - Name:
#       _t4dUtilsTemplateHeaderBlocksection
###
#   - Synopsis:
#       Documentation Bloc Section
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _Section="$1"
    case $_Section in
        Options)
            echo "#   - ${_Section}:"
            echo "#"
            echo "###"
        ;;
        Definition)
            echo "#   - Definition:"
            echo "#       {Text}"
            echo "#       {Text}"
            echo "#"
            echo "#       ยง Part1"
            echo "#           1. List"
            echo "#           2. List"
            echo "#           3. List"
            echo "#"
            echo "#       ยง Part2"
            echo "#           1. List"
            echo "#"
            echo "###"
        ;;
        Available_Options)
            echo "#   - Available Options:"
            echo "#       * {option1}               = {One-Line Description}"
            echo "#"
            echo "###"
        ;;
        Usage)
            echo "#   - Usage:"
            echo "#       * {Name} <option>  [arguments]        = {One-Line Description}"
            echo "#"
            echo "###"
        ;;
        Example)
            echo "#   - Example:"
            echo "#       * {Example1}              = {One-Line Description}"
            echo "#"
            echo "###"
        ;;
        *)
            echo "#   - ${_Section}:"
            echo "#"
            echo "###"
        ;;
    esac
###############################
}

_t4dUtilsTemplateHeaderBlocEnd(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateHeaderBlocEnd
#   - Name:
#       _t4dUtilsTemplateHeaderBlocEnd
###
#   - Synopsis:
#       Documentation Bloc End
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo "#   - Note:"
    echo "#       <Required>"
    echo "#       [Optionnal]"
    echo "#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL"
    echo "###"
    echo '###### DOCUMENTATION BLOC #####'
    echo '########### CODE BLOC #########'
###############################
}


_t4dUtilsTemplateMenu(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsTemplateMenu
#   - Name:
#       _t4dUtilsTemplateMenu
###
#   - Synopsis:
#       Generate Menu
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    case $1 in 
        loop)
            echo '    while [[ "$@" != "" ]]; do'
            echo '        case "$1" in'
            echo '            *)'
            echo '                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"'
            echo '                return $_t4dErrorCode'
            echo '            ;;'
            echo '        esac'
            echo '        shift'
            echo '    done'
        ;;
        classic)
            echo '    case "$1" in'
            echo '        *)'
            echo '            _t4dDebugLog $perror "Empty or Unknown argument < $1 >"'
            echo '            return $_t4dErrorCode'
            echo '        ;;'
            echo '    esac'
            echo '    shift'
        ;;
        *)
            echo ""
        ;;
    esac
###############################
}


_t4dUtilsProjectHeader(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectHeader
#   - Name:
#       _t4dUtilsProjectHeader
###
#   - Synopsis:
#       Generate Project Header
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
echo '#### PROJECT HEADER BLOC'
echo "# Generated From $T4D_GENERATOR_PATH"
echo "# v$T4D_GENERATOR_VERSION"
echo '# This documentation will be read and compile for man usage, MarkDown file and shell documentation'
echo '#'
echo '#   - Name:'
echo '#       <PROJECT NAME>'
echo '###'
echo '#   - Prefix:'
echo '#       wk'
echo '###'
echo '#   - Description:'
echo '#       A textual description of the functioning of the command or function.'
echo '###'
echo '#   - Working process:'
echo '#           *'
echo '#       '
echo '###'
echo '#   - Modules:'
echo '#       Will Be Generated Automatically'
echo '###'
echo '#   - WKS Options:'
echo '#       Will Be Generated Automatically'
echo '###'
echo '#   - Commands:'
echo '#       Will Be Generated Automatically'
echo '###'
echo '#   - Doctor :'
echo '#       Will Be Generated Automatically'
echo '###'
echo '#   - Supported Platform:'
echo '#       * OSX ( 10.12.6 or higher )'
echo '#       * Fedora ( 25 or higher )'
echo '###'
echo '#   - Author(s):'
echo '#       - <Insert name here>'
echo '#'
echo '###'
echo '#### HEADER BLOC ####'
###############################
}

_t4dUtilsAddOptionsToMenu(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsAddOptionsToMenu
#   - Name:
#       _t4dUtilsAddOptionsToMenu
###
#   - Synopsis:
#       Generate new option bloc
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _Name="$1"
    local _InternalWks="$2"
    echo "            $(_t4dPromptVarWithSpace 15 "$1)" ) $(_t4dPromptVarWithSpace 20 "$2 \${@:2}")            ;;" | sed 's|%||g'
###############################
}


_t4dUtilsProjectMenu(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectMenu
#   - Name:
#       _t4dUtilsProjectMenu
###
#   - Synopsis:
#       Generate wks default content
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo 'wks(){'
    echo '###### wks'
    echo '#   - Name:'
    echo '#       wks'
    echo '###'
    echo '#   - Synopsis:'
    echo '#       Main function that contains list of all available specific workspace behaviors'
    echo '###'
    echo '###### DOCUMENTATION BLOC #####'
    echo '#'
    echo '########## CODE BLOC ##########'
    echo ''
    echo '    ('
    echo '        set -e'
    echo '        case $1 in '
    echo "            $(_t4dPromptVarWithSpace 15 "doctor)"  ) $(_t4dPromptVarWithSpace 20 "_wksDoctor \${@:2}")            ;;" | sed 's|%||g'
    echo "            $(_t4dPromptVarWithSpace 15 "help|'')" ) $(_t4dPromptVarWithSpace 20 "_wksHelp \${@:2}"  )            ;;" | sed 's|%||g'
    echo '            *)'
    echo '                _t4dDebugLog $perror "${plyellow}wks $1 ${pstd}- Option ${plyellow}${1}${pstd} not available for this project"'
    echo '            ;;'
    echo '        esac'
    echo '    )'
    echo '    #ALL COMMAND ARE LAUNCHED IN A SUBSHELL'
    echo '    #This is here to stop command at the first untracked error'
    echo '    #We Also need to check the subshell output in order to identify which kind of error is sent'
    echo '    _wksParseReturnCode $? _WS_ERROR $WS_LOGFILE'
    echo '    return $_WS_ERROR'
    echo ''
    echo '###############################'
    echo '}'
###############################
}


_t4dUtilsProjectHelp(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectHelp
#   - Name:
#       _t4dUtilsProjectHelp
###
#   - Synopsis:
#       Generate _wksHelp content
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo '_wksHelp(){'
    echo '###### _wksHelp'
    echo '#   - Name:'
    echo '#       _wksHelp'
    echo '###'
    echo '#   - Synopsis:'
    echo '#       Parse project Header to show user a ready to read shell documentation'
    echo '###'
    echo '###### DOCUMENTATION BLOC ##### '
    echo '    local _wksContent="$(_t4dDocGetFunctionContent wks)"'
    echo '    if [[ $# -eq 1 ]] && [[ "$(_t4dDocGetOptionsList "$_wksContent" | grep "^$1")" != "" ]]; then'
    echo '        local _OptionHiddenCallName="$(_t4dDocGetOptionsHiddenCall "$_wksContent" $1)"'
    echo '        t4dHelp $_OptionHiddenCallName | sed "s|$_OptionHiddenCallName|wks $1|g"'
    echo '    elif [[ "$1" == "" ]] || [[ "$1" == "wks" ]]; then'
    echo '        _wksLogo doc'
    echo '        t4dHelp $WS_ROOT/project.env'
    echo '    else '
    echo '        t4dHelp $@'
    echo '    fi'
    echo '    echo ""'
    echo '    echo ""'
    echo '    echo ""'
    echo '  '
    echo '}'
###############################
}

_t4dUtilsProjectInitLoad(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectInitLoad
#   - Name:
#       _t4dUtilsProjectInitLoad
###
#   - Synopsis:
#       Generate _wksInit default content
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo '_wksInit(){'
    echo "# Generated From $T4D_GENERATOR_PATH"
    echo "# v$T4D_GENERATOR_VERSION"
    echo '###### _wksInit'
    echo '#   - Name:'
    echo '#       _wksInit'
    echo '###'
    echo '#   - Description:'
    echo '#       This content will load your environment and Tools4Dev from scratch'
    echo '#       This should not be used anywhere else than project.env file'
    echo '#'
    echo '###'
    echo '###### DOCUMENTATION BLOC #####'
    echo '    #'
    echo '    ######### DEFAULT Tools4Dev_PATH Definition #################'
    echo '    if [[ -z $Tools4Dev_PATH ]]; then                           #'
    echo '        export Tools4Dev_PATH="$HOME/.tools4dev/src"            #'
    echo '    fi                                                          #'
    echo '    #############################################################'
    echo '    #'
    echo '    #'
    echo '    #'
    echo '    #'
    echo '    ######### WS_ROOT                 ###########################'
    echo '    export WS_ROOT="$PWD"'
    echo ''
    echo '    #############################################################'
    echo '    #'
    echo '    ######### WksLoad'
    echo '    _wksLoad'
    echo '    #############################################################'
    echo '    #'
    echo '    #'
    echo '    #'
    echo '    ########## Aliases '
    echo "    # alias wksPloup='wks configure && wks build'"
    echo "    # alias wksRebuild='wks build && wks install'"
    echo "    # alias wkg='gik'"
    echo "    # alias wkr='wks ci-run'"
    echo "    # alias wkc='wks configure'"
    echo '    #############################################################'
    echo '    ######### Multi Repo Notification ###########################'
    echo '###############################'
    echo '}'
    echo ""
    echo '_wksLoad(){'
    echo '###### _wksLoad'
    echo '#   - Name:'
    echo '#       _wksLoad'
    echo '###'
    echo '#   - Synopsis:'
    echo '#       Here you can configure your project'
    echo '###'
    echo '###### DOCUMENTATION BLOC #####'
    echo ''
    echo '    if [[ -f $Tools4Dev_PATH/tools4Dev.env ]]; then'
    echo '        source $Tools4Dev_PATH/tools4Dev.env'
    echo ''
    echo '        _t4dPromptSquare "Project $(basename $WS_ROOT)" $plblue'
    echo '        mkdir -p $WS_ROOT/output'
    echo '        ###### Modules'
    for i in $@; do
        echo "        t4dLoadModule $i"
    done
    echo '        t4dLoadCompletion'
    echo '        #################'
    echo '        if [[ "${_wksHelper}" != "done" ]]; then _wksHelp && export _wksHelper="done"; fi'
    echo ''
    echo '    else'
    echo '        _wksFatalError "wks might need Tools4Dev environment that needs to be cloned into $Tools4Dev_PATH"'
    echo '    fi'
    echo '###############################'
    echo '}'
###############################
}

_t4dUtilsProjectCreateFile(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectCreateFile
#   - Name:
#       _t4dUtilsProjectCreateFile
###
#   - Synopsis:
#       Create t4d default files
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _WS_ROOT=$WS_ROOT
    case $1 in
        main)
            if [[ -e "${_WS_ROOT}/_t4d_/_main_.env" ]]; then
                _t4dCheckSucceeded "\$WS_ROOT/_t4d_/_main_.env Already exists"
            else
                _t4dCheckInfo "Create _main_.env file"
                echo "t4dLoadFile \"\$WS_ROOT/_t4d_/dependencies.env\"" > "${_WS_ROOT}/_t4d_/_main_.env"
                echo "" >> "${_WS_ROOT}/_t4d_/_main_.env"
            fi
        ;;
        gitignore)
            if [[ -e "$WS_ROOT/.gitignore" ]] && [[ "$(cat .gitignore | grep '\.t4d')" != "" ]]; then
                 _t4dCheckSucceeded "\$WS_ROOT/.gitignore Already compatible with t4d"
            else    
                echo "" >>              "$WS_ROOT/.gitignore"
                echo "#Tools4Dev" >>    "$WS_ROOT/.gitignore"
                echo ".t4d/" >>         "$WS_ROOT/.gitignore"
                echo ".*.env" >>        "$WS_ROOT/.gitignore"
                echo ".commit.tmp" >>   "$WS_ROOT/.gitignore"
                echo ".DS_Store" >>     "$WS_ROOT/.gitignore"
                _t4dCheckInfo "$WS_ROOT/.gitignore Created"
            fi
        ;;
        dependencies)
            if [[ -e "$_WS_ROOT/_t4d_/dependencies.env" ]]; then
                 _t4dCheckSucceeded "\$WS_ROOT/_t4d_/dependencies.env Already exists"
            else    
                mkdir -p $_WS_ROOT/_t4d_
                _t4dUtilsProjectDependencies > "$WS_ROOT/_t4d_/dependencies.env"
                _t4dCheckInfo "$WS_ROOT/_t4d_/dependencies.env Created"
            fi
        ;;
        manifest)
            if [[ -e "$_WS_ROOT/manifest.xml" ]]; then
                 _t4dCheckSucceeded "\$WS_ROOT/manifest.xml Already exists"
            else    
                mkdir -p $_WS_ROOT/_t4d_
                _t4dUtilsProjectManifest > "$WS_ROOT/manifest.xml"
                _t4dCheckInfo "$WS_ROOT/manifest.xml Created"
            fi
        ;;
        variable)
            if [[ -e "$_WS_ROOT/_t4d_/_variable_.env" ]]; then
                 _t4dCheckSucceeded "\$WS_ROOT/_t4d_/_variable_.env Already exists"
            else    
                mkdir -p $_WS_ROOT/_t4d_
                _t4dUtilsProjectVariable > "$WS_ROOT/_t4d_/_variable_.env"
                _t4dCheckInfo "$WS_ROOT/_t4d_/_variable_.env Created"
            fi
        ;;
        *)
            _t4dCheckInfo "Not available for $1"
        ;;
    esac
###############################
}

_t4dUtilsProjectDependencies(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectDependencies
#   - Name:
#       _t4dUtilsProjectDependencies
###
#   - Synopsis:
#       Generate _wksDoctor default content
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo '_wksDoctor(){'
    echo "# Generated From $T4D_GENERATOR_PATH"
    echo "# v$T4D_GENERATOR_VERSION"
    echo '###### _wksDoctor'
    echo '#   - Name:'
    echo '#       _wksDoctor'
    echo '###'
    echo '#   - Synopsis:'
    echo '#       List all Project dependencies and their status (available or not)'
    echo '###'
    echo '#   - Usage:'
    echo '#       * _wksDoctor                  = launch all checks'
    echo '#       '
    echo '###'
    echo '#   - Example:'
    echo '#       * _wksDoctor -no-logo         = launch _wksDoctor without logo in output'
    echo '#       '
    echo '###'
    echo '#   - Note:'
    echo '#       <Required>'
    echo '#       [Optionnal]'
    echo '#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL'
    echo '###### DOCUMENTATION BLOC #####'
    echo '########### CODE BLOC #########'
    echo '    local _t4dErrorCode=1'
    echo '     if [[ "$1" != "--no-logo" ]]; then '
    echo '        _wksLogo doctor'
    echo '    fi'
    echo '    _t4dPromptSquare    "Global" $plpurple'
    echo '        _t4dCheckEnv        Tools4Dev_PATH "${HOME}/.tools4dev/src"'
    echo '        _t4dCheckVersion    "$(_t4dMinimalVersion)"'
    echo '        _t4dCheckCommand     "git-lfs"'
    echo '        if [[ -e "$WS_ROOT/manifest.xml" ]] && [[ ! -e "$T4D_PROJECT_LOG_PATH/clone/.clone" ]]; then'
    echo '            _t4dCheckFailed "${plblue}wks clone${pstd} has not been already launched"'
    echo '        fi'
    echo ''
    echo '###############################'
    echo '}'
    echo '    '
    echo '_t4dMinimalVersion(){'
    echo "  echo \"$(t4dGetVersion)\""
    echo '}'
###############################
}

_t4dUtilsProjectManifest(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectManifest
#   - Name:
#       _t4dUtilsProjectManifest
###
#   - Synopsis:
#       Generate default manifest
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo '    <?xml version="1.0" encoding="UTF-8"?>'
    echo '<manifest>'
    echo "    <remote name=\"origin\" default=\"ssh://git@${WS_GIT_URL}:7999\" ssh=\"ssh://git@${WS_GIT_URL}:7999\" http=\"https://<user>:<password>@${WS_GIT_URL}/scm\"/>"
    echo '    <default key="t4d"    name="default"   remote="origin"      revision="main" />'
    echo '    <disable key="TOOL"   remote="origin"  default="default"    name="icu"               revision="main" path="source/subProjects" />'
    echo '</manifest>'
###############################
}

_t4dUtilsProjectVariable(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectVariable
#   - Name:
#       _t4dUtilsProjectVariable
###
#   - Synopsis:
#       Generate Default usefull vars
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _RepoName="$(_t4dSrcGitInfoRepoName)"
    echo '######### WS Variable Definitions ###########################'
    echo '# env variable that will be defined here should have been named WS_<Variable> to know where it comes from'
    echo ''
    echo "WS_PROJECT_NAME=\"$_RepoName\""
    echo "WS_EXPORT_PREFIX=\"$_RepoName\""
    echo "WS_EXPORT_PREFIX_LOW=\"$(echo $WS_EXPORT_PREFIX | tr '[:upper:]' '[:lower:]')\""
    echo ''
    echo '#Variable PREFIX NAME like WS for default values'
    echo 'WS_PREFIX="EX"'
    echo ''
    echo '###########################'
    echo '## CI & AWS'
    echo '###########################'
    echo "# WS_AMAZON_S3_ROOT=\"s3://\$WS_EXPORT_PREFIX_LOW\""
    echo "# WS_JENKINS_PROJECT_NAME=\"\$WS_EXPORT_PREFIX_LOW\""
    echo '######################################################'
    echo ''
    echo ''
    echo '###########################'
    echo '## T4D'
    echo '###########################'
    echo 'WS_BUILD_CONFIG_FILE="$WS_ROOT/.t4d/build-config"'
    echo 'WS_LOGFILE="$WS_ROOT/.t4d/wks.log"'
    echo '######################################################'
    echo ''
    echo ''
    echo '###########################'
    echo '## PROJECT'
    echo '###########################'
    echo 'WS_SRC_VERSION="X.XX.X"'
    echo '# WS_EXPORT_NAME="${WS_EXPORT_PREFIX}_${WS_SRC_VERSION}_${WS_BUILD_DATE}"'
    echo '# WS_INSTALL_PREFIX="${WS_ROOT}/build/${WS_EXPORT_NAME}"'
    echo '######################################################'
    echo ''
    echo ''
    echo '###########################'
    echo '## DEFAULT VALUES'
    echo '###########################'
    echo 'EX_BUILD_TARGET="host"'
    echo '######################################################'
###############################
}


_t4dUtilsProjectEnd(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dUtilsProjectEnd
#   - Name:
#       _t4dUtilsProjectEnd
###
#   - Synopsis:
#       Generate _wksLogo and end content
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    echo '_wksLogo(){'
    echo ''
    echo '    local _color=${1:-$plpurple}'
    echo '    local center="$(_t4dPromptCenterSpace "34" | sed "s|-||g")"'
    echo '    l1="##      ##     ##   ##    #####  "'
    echo '    l2="##  ##  ##    ##  ##     ##   ## "'
    echo '    l3="## #### ##   #####        ##     "'
    echo '    l4="###    ###  ##   ##   ##    ##   "'
    echo '    l5="##      ## ##     ##   #####     "'
    echo '    if [[ "$1" == "doc" ]]; then'
    echo '        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"'
    echo '        _t4dDocWks ${_Content} ${pipurple}'
    echo '    elif [[ "$1" == "doctor" ]]; then'
    echo '        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"'
    echo '        _t4dDocWks ${_Content} ${pipurple} "Doctor"'
    echo '    else'
    echo '        local _Content="${l1}%${l2}%${l3}%${l4}%${l5}"'
    echo '        _t4dDocWks ${_Content} ${pipurple} "$WS_PROJECT_NAME"'
    echo '    fi'
    echo '}'
    echo ''
    cat $Tools4Dev_PATH/Templates/fatal.env
    echo ''
    echo '_wksInit'
###############################
}
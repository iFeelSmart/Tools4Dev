_t4dModJicSafetyCheck(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModJicSafetyCheck
#   - Name:
#       _t4dModJicSafetyCheck
###
#   - Synopsis:
#       Check jira invoke variables
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    _t4dSrcJiraTestURL || return 404
    if [[ "$JIRA_USER_AND_PASSWORD" == "_t4dSrcJiraSetPassword" ]]; then
        _t4dSrcJiraSetPassword
    fi
    _t4dSrcJiraCheckCredentials || return 404

###############################
}

_t4dModJicHandleClientId(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.5.0
###### _t4dModJicHandleClientId
#   - Name:
#       _t4dModJicHandleClientId
###
#   - Synopsis:
#       Parse external url to return readable client ID
###
#   - Example:
#       _t4dModJicHandleClientId <data>
###
###### DOCUMENTATION BLOC #####
    #TO BE OVERRIDEN AT PROJECT/TEAM LEVEL

    echo "$1"

###############################
}

_t4dModJicSearch(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModJicSearch
#   - Name:
#       _t4dModJicSearch
###
#   - Synopsis:
#       Display tickets resulting from given query
###
#   - Usage:
#       * _t4dModJicSearch <JQL query>     
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=820
    local _Query="$1"
    local _OuputjsonFile="$T4D_PROJECT_LOG_PATH/jic/_t4dModJicSearch.json"

    if [[ "${_Query}" == "" ]]; then _t4dDebugLog "$perror" "${_t4dErrorCode}-X -> No query specified"; return $_t4dErrorCode; fi
    
    _t4dDebugLog "$pinfo" "Query : '$_Query'"

    _t4dJiraAPISearch "$_Query" "$_OuputjsonFile"

    _t4dModJicParseAndDumpLoop "$_OuputjsonFile"

###############################
}

_t4dModJicPersonalPrompt(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModJicPersonalPrompt
#   - Name:
#       _t4dModJicPersonalPrompt
###
#   - Synopsis:
#       Display tickets to do for current user
###
#   - Available Options:
#       * -sprint   = only tickets from current sprint for user
#       * -all      = tickets from all projects for user
###
#   - Usage:
#       * _t4dModJicPersonalPrompt
#       * _t4dModJicPersonalPrompt -sprint
#       * _t4dModJicPersonalPrompt -all
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    
    case $1 in
        -sprint)    _t4dModJicGetSprint -user       ${@:2} ;;
        -all)       _t4dModJicGetTicketCurrentUser -all-projects ${@:2} ;;
        *)          _t4dModJicGetTicketCurrentUser  ${@} ;;
    esac

###############################
}

_t4dModJicInfo(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModJicInfo
#   - Name:
#       _t4dModJicInfo
###
#   - Synopsis:
#       Display full ticket info
###
#   - Usage:
#       * _t4dModJicInfo <Ticket ID>     
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=820
    local _Ticket="$1"
    local _OuputjsonFile="$T4D_PROJECT_LOG_PATH/jic/_t4dModJicInfo.json"

    if [[ "${_Ticket}" == "" ]]; then _t4dDebugLog "$perror" "${_t4dErrorCode}-X -> No ticket ID specified"; return $_t4dErrorCode; fi

    _Ticket=$(echo ${_Ticket} | tr '[:lower:]' '[:upper:]')
    #agile api is case-sensitive
    _t4dJiraAPIGetTicketAgile "$_Ticket" "$_OuputjsonFile"

    _t4dModJicParseAndDumpSingleTicket "$_OuputjsonFile"

###############################
}

_t4dModJicComment(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModJicComment
#   - Name:
#       _t4dModJicComment
###
#   - Synopsis:
#       Display comments of given ticket
###
#   - Usage:
#       * _t4dModJicComment <Ticket ID>     
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    local _t4dErrorCode=821
    local _Ticket="$1"
    local _OuputjsonFile="$T4D_PROJECT_LOG_PATH/jic/_t4dModJicComment.json"

    if [[ "${_Ticket}" == "" ]]; then _t4dDebugLog "$perror" "${_t4dErrorCode}-X -> No ticket ID specified"; return $_t4dErrorCode; fi

    _Ticket=$(echo ${_Ticket} | tr '[:lower:]' '[:upper:]')
    #agile api is case-sensitive
    _t4dJiraAPIGetTicketAgile "$_Ticket" "$_OuputjsonFile"

    _t4dModJicParseAndDumpComments "$_OuputjsonFile"

###############################
}

_t4dModJicCreate(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dModJicCreate
#   - Name:
#       _t4dModJicCreate
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Assigne="default"
    local _Description=""
    local _Prefix=""
    local _Project="${WS_JIRA_PREFIX:-none}"
    local _Force="false"
    local _Type="Task"
    local _AssigneID=""
    local _TicketResultJsonFile="$T4D_PROJECT_LOG_PATH/_t4dModJicCreate.json"
    while [[ "$@" != "" ]]; do
        case "$1" in
            -project)
                _Project="$2"
                shift
            ;;
            -prefix)
                _Prefix="${_Prefix}[$(echo $2 | tr '[:lower:]' '[:upper:]')]"
                shift
            ;;
            -component)
                _Component="$2"
                shift
            ;;
            -description|-d)
                _Description="$2"
                shift
            ;;
            -type)
                _Type="$2"
                shift
            ;;
            -outputFile)
                _TicketResultJsonFile="$2"
                shift
            ;;
            -assign)
                _Assigne="$(echo $2 | tr '[:upper:]' '[:lower:]' | tr -d ' ')"
                shift
            ;;
            -force|-f)
                _Force="true"
            ;;
            *)
                _Title="$1"
            ;;
        esac
        shift
    done

    _t4dPromptSquare "%${_Project}%% - ${_Prefix} ${_Title}" $plblue $plred
    
    
    if [[ "${_Assigne}" == "default" ]] && [[ "$_Component" != "" ]]; then
        _Assigne="$(_t4dSrcJiraProjectGetComponentDefaultAssignee "$_Project" "$_Component")"
    else
        _Assigne="$(echo $JIRA_USER_AND_PASSWORD | cut -d ':' -f1)"
    fi

    if [[ "${_Assigne}" != "" ]]; then
        local _User="$(_t4dSrcJiraGetUsers | sed 's| ||g' )"
        local _UserSelected="$(echo $_User | grep -i "$_Assigne")"
        local _UsersNames="$(echo $_UserSelected | cut -d '|' -f3)"
        
        if [[ "$_UserSelected" != "" ]] && [[ "$(echo $_UserSelected | wc -l | tr -d ' ')" == "1" ]]; then
            echo "    ${plpurple}Assigne : ${pstd}"
            echo "    $(echo $_UserSelected | cut -d '|' -f2)"
            _AssigneID="$(echo $_UserSelected | cut -d '|' -f1)"
        else
            if [[ "$_UserSelected" == "" ]]; then
                _UsersNames="$(echo $_User | cut -d '|' -f3)"
            fi
            _t4dDebugLog $perror "User assignement error >$_Assigne< does not find a unique match with available users"
            _t4dDebugLog $pinfo "\n$(_t4dPromptCol $(echo $_UsersNames))"
            return $_t4dErrorCode
        fi
    fi
    echo "    ${plpurple}Description : ${pstd}"
    echo "    $_Description"

    local _AvailableTypes="$(_t4dSrcJiraIssueGetAvailableTypes $_Project | tr ' ' '\n' | sed 's|%| |g')"
    if [[ "$(echo $_AvailableTypes | grep "$_Type")" == "" ]]; then
        _t4dDebugLog $perror "_t4dModJicCreate - Type unavailable on this project"
        _t4dDebugLog $pinfo "Types:\n$_AvailableTypes"
    fi

    
    if [[ "$_Force" == "true" ]]; then
        local _InputJsonFile="$T4D_PROJECT_LOG_PATH/_t4dModJicCreate.json"
        _t4dSrcJiraIssueDefaultTemplate "$_Project" "$_Type" "${_Prefix} ${_Title}" "$_Description" "$_InputJsonFile" "$_AssigneID"
        _t4dJiraAPIPostv2 issue "$(cat $_InputJsonFile)" "$_TicketResultJsonFile"

        local _TicketID="$(_t4dGetJsonData "$_TicketResultJsonFile" ".key")"
        if [[ "$_TicketID" != "" ]] && [[ "$_TicketID" != "null" ]]; then
            _t4dPromptSquare "Issue $_TicketID Created" $plgreen
            _t4dCheckInfo "${_t4dJiraBaseURL}/browse/$_TicketID"
        else
            local _ErrorMessage="$(_t4dGetJsonData "$_TicketResultJsonFile" ".errorMessages[0]")"
            if [[ "$_ErrorMessage" != "" ]]; then
                _t4dDebugLog $perror "$_ErrorMessage"
            else
                _t4dDebugLog $perror "_t4dModJicCreate - Unknown error"
            fi
            return $_t4dErrorCode
        fi
        
    else
        _t4dPromptSquare "This was a dry-run, please use -f to create this ticket" $plyellow
    fi

###############################
}

_t4dModBpiSafetyCheck(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModBpiSafetyCheck
#   - Name:
#       _t4dModBpiSafetyCheck
###
#   - Synopsis:
#       Doctor for bpi
###
#   - Definition:
#       Checks :
#       * aws binary presence
#       * aws availability and credentials existence
#       * adb binary presence
#       
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    if [[ -e "$WS_AWS_CLI_PATH" ]]; then
        _t4dSrcAwsPingMainName || return 404
    else
        _t4dCheckFailed "$WS_AWS_CLI_PATH doesn't exist please install it"
        return 400
    fi

    _t4dSrcAndroidAdbExists || ( _t4dCheckFailed "adb not found please add it to PATH"; return 400 )

###############################
}

_t4dModBpiS3(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModBpiS3
#   - Name:
#       _t4dModBpiS3
###
#   - Synopsis:
#       Browse, download and extract content archived on S3 buckets
###
#   - Definition:
#       Browse S3 buckets like folders on your computer
#       Give an S3 path to the command to obtain the folder's contents
#       Don't worry about "/" every argument can be seperated by space, actually it will work better with autocompletion that way.
#
#       IMPORTANT : Arguments not starting by - will build your path
#           For example,  <_t4dModBpiS3 toto titi> will check for folder s3://toto/titi and show his content
#           you can also use <_t4dModBpiS3 s3://toto/titi> it will work the same
#
#       This function is similar to cd built-in that will allow you to explore s3 bucket from your term.
#
#
#       Add -pull option after a path to download it (archive or full folder)
#       Add -extract option after a path to extract the downloaded archive
#
#       Autocompletion : 
#           We can't have a great auto completion for every path in s3.
#           In order to avoid any performance problem, Autocompletion will be managed by local cache methodology 
#
#           Every time you will explore one path it will be added to the "Autocompletion Folder". 
#           So you will be able to tab threw this path next time you will use this function. 
#           Note that you can rm this folder at any time if you need to clean your cache
#
#           NOTE: Autocompletion folder is a path stored in a variable called T4D_BPI_BUCKETS_INDEX_FOLDER
#
###
#   - Available Options:
#       * -pull         = download file from given S3 path
#       * -pull-latest  = list all files contained in given S3 path and only download latest's one
#       * -extract      = if -pull is set, extract downloaded archive
#       * -silent       = enable silent mode
###
#   - Usage:
#       * _t4dModBpiS3 [pathS3] [option]
###
#   - Example:
#       * _t4dModBpiS3
#       * _t4dModBpiS3 s3-path
#       * _t4dModBpiS3 s3-path s3-example-archive.zip -pull -extract
#       * _t4dModBpiS3 s3-path/s3-example-archive.zip -pull -extract
#           
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    local _t4dErrorCode=Unknown
    local _OutPutBpiListFile="$T4D_BPI_LIST_INDEX_FILE"
    local _action="bucket"
    local _extract="false"
    local _verbosityLvl="1"
    local _filter=""

    local _arg=""
    local _path=""

    while [[ "$@" != "" ]]; do
        case "$1" in
            -pull)
                _action="pull"
            ;;
            -pull-latest)
                _action="pull-with-filter"
                _filter="latest"
            ;;
            -extract)
                _extract="true"
            ;;
            -silent|-s)
                _verbosityLvl="0"
            ;;
            -verbose|-v)
                _verbosityLvl="2"
            ;;
            *)
                _action="list"
                _arg="$_arg/${1}"
            ;;
        esac
        shift
    done
    local _awsPath="$(echo $_arg | sed 's|^/||g')"
    case $_action in
        bucket)
            _t4dModBpiSafetyCheck || return $_t4dBpiErrorCode
            _t4dPromptSquare "%%Amazon S3 Main Page%%" $plblue $plyellow
            local _Output="$(_t4dSrcAwsListBuckets)"
            _t4dModBpiListAddToCache "s3://" "$_Output" "$T4D_BPI_LIST_INDEX_FILE"
            echo "${plpurple}${_Output}${pstd}"
        ;;
        pull)
            _t4dModBpiPull -extract $_extract $_awsPath
        ;;
        pull-with-filter)
            _t4dModBpiPull -extract $_extract -filter $_filter $_awsPath
        ;;
        *)
            _t4dModBpiPrint -verbose $_verbosityLvl $_awsPath

        ;;
    esac


}


_t4dModBpiInstall(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModBpiInstall
#   - Name:
#       _t4dModBpiInstall
###
#   - Synopsis:
#       Deploy a build to currently selected device
###
#   - Usage:
#       * _t4dModBpiInstall <path>
###
#   - Example:
#       * _t4dModBpiInstall local-path/to/unzipped-s3-example-file
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=500
    local CHPWD=1
    local _Manifest="$WS_INVENTORY_CONFIG_FILE"
    local _Prefix="$(_t4dFindDataInXmlV2 manifest name hardware prefix $_Manifest)"

    local _curDir="$(pwd)"
    local _folder="$1"

    if [[ ! -e "$WS_ROOT/.t4d/inventory/cache.env" ]]; then
        _t4dDebugLog "$perror" "No device selected"
        _t4dCheckInfo "Please use bpi devices to select a device"
        return 301
    fi

    source "$WS_ROOT/.t4d/inventory/cache.env"

    if [[ ! -d ${_folder} ]]; then
        _t4dDebugLog "$perror" "Given folder does not exist"
        _t4dCheckInfo "Please provide a folder containing a build"
        return 300
    elif [[ ! -e ${_folder}/INSTALL ]]; then
        _t4dDebugLog "$perror" "Given folder does not contain an install script"
        _t4dCheckInfo "Please provide a folder containing a build"
        return 300
    else
        cd ${_folder}
        _t4dDebugLog "$pinfo" "Starting install"
        local _Type=$(eval "echo \$${_Prefix}_TYPE")
        case "$_Type" in
            dev.board.stb)
                #network install handling only
                sh ./INSTALL "$(eval "echo \$${_Prefix}_IP")" || _t4dErrorCode=$?
            ;;
            dev.board.mobile)
                sh ./INSTALL "$(eval "echo \$${_Prefix}_SERIAL")" || _t4dErrorCode=$?
            ;;
            *)
                _t4dDebugLog "$perror" "bpi can't install on target type $_Type. If you think it's an error, please contact the devops team"
            ;;
        esac

        cd ${_curDir}
        return $_t4dErrorCode
    fi

###############################
}

_t4dModBpiInfo(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dModBpiInfo
#   - Name:
#       _t4dModBpiInfo
###
#   - Synopsis:
#       Show info contained in inventory file (selected or not)
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    _t4dPromptSquare "Bpi info device" "$plyellow"

    echo ""

    _t4dModBpiDeviceInfo

    echo ""

    _t4dPromptSquare "Bpi status" "$plyellow"

    if [[ -e $T4D_BPI_LIST_INDEX_FILE ]]; then
        _t4dDebugLog "$pinfo" "S3 last queried path : $(head -1 $T4D_BPI_LIST_INDEX_FILE | sed 's|^%--->|s3://|g' | sed 's|^s3://s3://|s3://|g')"
    else
        _t4dDebugLog "$pinfo" "No bpi list launched"
    fi

    if [[ -e $T4D_BPI_IMPORT_INDEX_FILE ]]; then
        _t4dDebugLog "$pinfo" "Last archive pulled path : $(head -1 $T4D_BPI_IMPORT_INDEX_FILE | sed 's|^%--->||g')"
    else
        _t4dDebugLog "$pinfo" "No bpi pull launched"
    fi

    return 0

###############################
}
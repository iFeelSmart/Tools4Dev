_t4dModJksFileInit(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dModJksFileInit
#   - Name:
#       _t4dModJksFileInit
###
#   - Synopsis:
#       allow user to create jenkinsfile dynamically
###
#   - Available Options:
#       * -suffix               = add suffix to output file
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Template="$WS_ROOT/_Jenkins_/.Jenkinsfile.base"
    local _Vars="JENKINS_LIB_VERSION=main@main PROJECT_NAME=$(_t4dSrcGitInfoRepoName) GIT_REPOSITORY=$(_t4dSrcGitInfoGetCloneUrl) JENKINS_NOTIFICATION_LVL=1"
    local _NotificationLvl="1"
    local _Irc="sandbox"
    local _Scheme="default"
    local _Bool="default"
    local _outputFile="$WS_ROOT/_Jenkins_/Jenkinsfile"
    local _defaultTarget="default"
    local _defaultExec="Build"
    local _Force="false"
    local _writeInFile="false"
    local _Target  Exec _Repo _LibVersion _ProjectName _EnvVars
     while [[ "$@" != "" ]]; do
        case "$1" in
            -write|-w)
                _writeInFile="true"
            ;;
            -force|-f)
                _writeInFile="true"
                _Force="true"
            ;;
            -input)
                shift
                _Template="$1"
            ;;
            -suffix)
                shift
                _outputFile="$_outputFile.$1"
            ;;
            -define|-D)
                shift
                _Vars="$1 $_Vars"
            ;;
            -lib-version|-V)
                shift
                _Vars="JENKINS_LIB_VERSION=main@release/$1 $_Vars"
            ;;
            -param|-P)
                shift
                _Bool="$_Bool $1"
            ;;
            -M)
                shift
                _EnvVars="$_EnvVars $1"
            ;;
            -target|-T)
                shift
                _Target="${_Target}$1 "
            ;;
            -exec|-E)
                shift
                _Exec="${_Exec}$1 "
            ;;
            *)
                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
                return $_t4dErrorCode
            ;;
        esac
        shift
    done

    if [[ ! -e "$_Template" ]]; then
        _Template="$Tools4Dev_PATH/Templates/jenkinsFile.in"
    fi
    if [[ "$_Target" == "" ]]; then
        _Target="$_defaultTarget"
    fi
    if [[ "$_Exec" == "" ]]; then
        _Exec="$_defaultExec"
    fi

    local _JenkinsFileContent="$(cat $_Template)"
    for _var in $(echo $_Vars); do
        local _Name="$(echo $_var | cut -d '=' -f1)"
        local _Data="$(echo $_var | cut -d '=' -f2)"
        # echo "$_var - $_Name - $_Data"
        _JenkinsFileContent="$(echo $_JenkinsFileContent | sed "s|@${_Name}@|$_Data|g")"
    done

    for _envVar in $(echo $_EnvVars); do
        local _Name="$(echo $_envVar | cut -d '=' -f1)"
        local _Value="$(echo $_envVar | cut -d '=' -f2)"
        local _Data="env.M_$_Name=\"$_Value\""

        _JenkinsFileContent="$(echo $_JenkinsFileContent | grep -v "env.M_${_Name}=" | sed "s|//@Env@|${_Data}\n//@Env@|g")"
    done

    for _exec in $(echo $_Exec); do
        if [[ "$(echo $_exec | grep '|')" != "" ]]; then
            local _Name="$(echo $_exec | cut -d '|' -f1)"
            local _Value="$(echo $_exec | cut -d '|' -f2)"
        else
            local _Name="M_BuildTarget"
            local _Value="$_exec"
        fi
        local _Data="pipeline.exec($_Name,\"$_Value\",\"false\")"

        _JenkinsFileContent="$(echo $_JenkinsFileContent | sed "s|//@Exec@|//@Exec@\n$_Data|g")"
    done

    for _tar in $(echo $_Target); do
        if [[ "$(echo $_tar | grep '|')" != "" ]]; then
            local _Name="$(echo $_tar | cut -d '|' -f1)"
            local _Value="$(echo $_tar | cut -d '|' -f2)"
        else
            local _Name="M_BuildTarget"
            local _Value="$_tar"
        fi

        local _Data="$_Name.push(\"$_Value\")"

        _JenkinsFileContent="$(echo $_JenkinsFileContent | sed "s|//@Target@|//@Target@\n$_Data|g")"
    done
    
    

    if [[ "$_writeInFile" == "true" ]]; then
        if [[ -e "" ]]; then
            if [[ "$_Force" == "true" ]]; then
                echo "$_JenkinsFileContent" > $_outputFile
            else
                _t4dDebugLog $perror "File $_outputFile already exist"
                _t4dDebugLog $pinfo "use -f to replace his content"
            fi
        else
            echo "$_JenkinsFileContent" > $_outputFile
        fi
        
    else
        _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color "$(echo $_outputFile | sed "s|${WS_ROOT}/||g")")" "$plblue" "15"
        if [[ "$(command -v pygmentize)" != "" ]]; then
            echo "$_JenkinsFileContent" | pygmentize
        else
            echo "$_JenkinsFileContent"
            _t4dDebugLog $pinfo "This content could be shown with color sintax. please consider installing pygmentize"
        fi
    fi

###############################
}

_t4dModJksFileUpdateLib(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dModJksFileUpdateLib
#   - Name:
#       _t4dModJksFileUpdateLib
###
#   - Synopsis:
#       update jenkinsFiles to sended version
###
#   - Usage:
#       * _t4dModJksFileUpdateLib <version>
###
#   - Example:
#       * _t4dModJksFileUpdateLib 2.15.0   = update lib from jenkinsfile to release/2.15.0
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    
    local _NewVersion="$1"
    if [[ -e  "$WS_ROOT/_Jenkins_" ]]; then
        local _Files="$(find $WS_ROOT/_Jenkins_ | grep 'Jenkinsfile')"
        for _File in $(echo $_Files); do
            cat $_File | sed "s|@Library(.*|@Library('main@release/${_NewVersion}')|g" > $WS_ROOT/.t4d/Jenkinsfile.tmp
            mv "$WS_ROOT/.t4d/Jenkinsfile.tmp" "$_File" && _t4dCheckSucceeded "$_File"
        done
    elif [[ -e  "$WS_ROOT/Jenkinsfile" ]]; then
        _File="$WS_ROOT/Jenkinsfile"
        cat $_File | sed "s|@Library(.*|@Library('main@release/${_NewVersion}')|g" > $WS_ROOT/.t4d/Jenkinsfile.tmp
        mv "$WS_ROOT/.t4d/Jenkinsfile.tmp" "$_File" && _t4dCheckSucceeded "$_File"
    fi

###############################
}
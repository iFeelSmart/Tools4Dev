_t4dModJksInfoMain(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dModJksInfoMain" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksInfoMain
#   - Name:
#       _t4dModJksInfoMain
###
#   - Synopsis:
#       Get and Parse Jenkins WebUI threw shell
###
#   - Definition:
#       Depending on the number of argument you provide, this function
#       will try to get html output and parse it to your terminal
#
#       IMPORTANT : Page has to exist to avoid failure output
#
#       If you are on a Build Page, next argument will interact with artefact :
#       if user specify ArtefactName, it will download it in the current directory
#       if user specify All as his last argument, it will download all available artefact
#           in the current directory
#
###
#   - Usage:
#       _t4dModJksInfoMain          [Project] [BranchName] [BuildNumber] [ArtefactName|All]
#       _t4dModJksInfoMain [Folder]/[Project] [BranchName] [BuildNumber] [ArtefactName|All]
#
###
#   - Cases :
#       Number of Arguments = 0                 -> Get Jenkins Main Page
#       Number of Arguments = 1                 -> Get Project Main Page
#       Number of Arguments = 2                 -> Get BranchName Page of Project
#       Number of Arguments = 3                 -> Get Build Page of BranchName 
#       Number of Arguments = 4                 -> Download Artefact(s)
#
###
#   - Example:
#       _t4dModJksInfoMain
#       _t4dModJksInfoMain Feature
#       _t4dModJksInfoMain Prod master 
#       _t4dModJksInfoMain Prod master 50
#       _t4dModJksInfoMain Prod master 50 All
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _Project="$(_t4dJenkinsUtilsParseProjectPath $1)"
    local _Branch="$2"
    local _BuildNumber="$(echo $3 | sed 's|last$|lastBuild|g')"
    local _Artefact="$4"

    case $# in
        0)
            _t4dSrcJenkinsPageMainGetHtmlPage
        ;;
        1)
            _t4dSrcJenkinsPagePipelineGetHtmlPage "${_Project}"
        ;;
        2)
            _t4dSrcJenkinsPageBranchGetHtmlPage "${_Project}" $_Branch
        ;;
        3)
            _t4dModJksInfoGetBuild "${_Project}" $_Branch $_BuildNumber
        ;;
        4)
            _t4dSrcJenkinsPageBuildDownloadArtefact "${_Project}" $_Branch $_BuildNumber $_Artefact
        ;;
        *)
            _t4dDebugLog $perror "_t4dSrcJenkinsApiGetPage -> Wrong number of argument ( $# ) >$@< maximum is 4"
            return 250
        ;;
    esac

###############################
_t4dDebugInfoEnd "_t4dModJksInfoMain" "$@"
}

_t4dModJksInfoGetBuild(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dModJksInfoGetBuild" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksInfoGetBuild
#   - Name:
#       _t4dModJksInfoGetBuild
###
#   - Synopsis:
#       Get Html page from specifique Project, BranchName and BuilderNumber in Jenkins
###
#   - Usage:
#       _t4dModJksInfoGetBuild <ProjectName> <BranchName> <BuildNumber>|last
#
###
#   - Example:
#       _t4dModJksInfoGetBuild Prod master 72
#       _t4dModJksInfoGetBuild Prod master last
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _project="$1"
    local _branchName="$(echo $2 | sed 's|%252F|/|g')"
    local _branchNameURL="$(echo $_branchName | sed 's|/|%252F|g')"
    local _buildNumber="$3"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksInfoGetBuild.html"
    local _ConsoleHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksInfoGetBuildConsole.html"
    # _t4dDebugLog $plog "_t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile"
    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile
    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/consoleFull $_ConsoleHtmlFile
    _t4dPromptSquare "$(_t4dGetHtmlData $_OutPutHtmlFile title)" "$plpurple"
    local _Revision="$(_t4dSrcJenkinsPageBuildGetProjectSha7 $_OutPutHtmlFile)"
    local _LibRevision="$(_t4dSrcJenkinsPageBuildGetJenkinsLibSha7 $_OutPutHtmlFile)"
    local _LibBranch="$(_t4dSrcJenkinsPageBuildGetJenkinsLibBranch $_OutPutHtmlFile)"
    local _url="$(_t4dSrcJenkinsPageBuildGetUrl $_project $_branchNameURL $_buildNumber "blue")"
    local _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
    
    local _PipelinePassing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile PASSING | tr ' ' '\n' | sort)"
    local _PipelineFailing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile FAILING | tr ' ' '\n' | sort)"

    _t4dPromptSquare "$(_t4dSrcJenkinsPageBuildGetBuildDate $_OutPutHtmlFile $_buildNumber)" "$plcyan"
    _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color "$_LibBranch -> $_LibRevision")" $plyellow
    
    _t4dSrcJenkinsPageBuildListArtifacts $_OutPutHtmlFile || _t4dDebugLog $pwarning "Unable to  List Artefacts"
    echo ""
    echo ""
    
    echo "$(_t4dPromptCenterSpace "${#_BuildStatus}" | sed 's|-||g')$_BuildStatus"
    if [[ "${_PipelinePassing}${_PipelineFailing}" != "" ]]; then
        echo ""
        _t4dPromptFixedCol 40 --color "$plgreen" $(echo ${_PipelinePassing})
        _t4dPromptFixedCol 40 --color "$plred"   $(echo ${_PipelineFailing})
    fi
    if [[ "$_Revision" == "$_LibRevision" ]]; then
        _t4dPromptSquare "$_branchName -> Unknown" "$plblue"
    else
        _t4dPromptSquare "$_branchName -> $_Revision" "$plblue"
    fi

    if [[ "$_T4D_HYPER_LINK_COMPATIBLE" == "false" ]]; then
        echo "${plwhite}$(_t4dPromptCenterSpace "${#_url}" | sed 's|-||g')${_url}${pstd}"
    else
        local _urlName="Click To Open BlueOcean"
        echo "${plwhite}$(_t4dPromptCenterSpace "${#_urlName}" | sed 's|-||g')$(_t4dPromptHyperLink "${_url}" "${_urlName}")${pstd}"
    fi
    

###############################
_t4dDebugInfoEnd "_t4dModJksInfoGetBuild" "$@"
}

_t4dModJksUtilsStart(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsStart" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsStart
#   - Name:
#       _t4dModJksUtilsStart
###
#   - Synopsis:
#       Start Jenkins Build
###
#   - Definition:
#       Will try to launch a build directly from commandLine
#
#       Use $WS_JENKINS_PROJECT_NAME and current BranchName to create Jenkins URL
#
#       First argument will define the behavior, if parsed argument exist as a branch on remotes git
#           it will launch a default build using the actual sent argument
#
###
#   - Usage:
#       _t4dModJksUtilsStart [BranchName]
#       _t4dModJksUtilsStart [Project]  <BranchName>
#       _t4dModJksUtilsStart -extraArg <ParsedCommandLineArgument>
#
###
#   - Example:
#       _t4dModJksUtilsStart
#       _t4dModJksUtilsStart develop
#       _t4dModJksUtilsStart Prod master
#       _t4dModJksUtilsStart -extraArg $(_t4dJenkinsUtilsParams -shell ...)
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsStart.html"
    local _OutPutHtmlFileLastBuild="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsStartLastBuild.html"
    local _OutPutHtmlFileProject="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsStartProject.html"
    local _ExtraArg="build?delay=0sec"
    local _ExtraArgParam=""
    local _Start="false"
    local _branchName=""
    local _project=""

    if [[ "$1" == "-extraArg" ]]; then
        _ExtraArgParam="$(echo $2)"
        shift
        shift
    fi


    local _T4D_QUIET_MODE='true'
    case $# in 
        0)
            _branchName="$(_t4dSrcGitInfoBranch)"
            _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
        ;;
        1)
            # _t4dDebugLog $pinfo "Forcing branch name to $1"
            _branchName="$1"
            _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
        ;;
        2)
            # _t4dDebugLog $pinfo "Set project to $1"
            # _t4dDebugLog $pinfo "Set branch to $2"
            _branchName="$2"
            _project="$(_t4dJenkinsUtilsParseProjectPath $1)"
        ;;
        *)
            _t4dDebugLog $perror "_t4dModJksUtilsStart, too many argument >$@< $# exceed limit of 2"
        ;;
    esac

    local _NormalizedbranchName="$(echo $_branchName | sed 's|/|%252F|g')"


    #TEST BRANCH STATUS ON JENKINS
    _t4dSrcJenkinsApiGetPage "$_project" $_OutPutHtmlFileProject
    _t4dSrcJenkinsApiGetPage "$_project/job/$_NormalizedbranchName/" $_OutPutHtmlFile
    _t4dSrcJenkinsApiGetPage "$_project/job/$_NormalizedbranchName/lastBuild/" $_OutPutHtmlFileLastBuild
    local _ProjectAvailable="$(_t4dGetHtmlData $_OutPutHtmlFileProject "title" | grep -Eo '404 Not Found' )"
    local _BranchAvailable="$(_t4dGetHtmlData $_OutPutHtmlFile "title" | grep -Eo '404 Not Found' )"
    local _BuildWithParams="$(cat $_OutPutHtmlFile | grep -Eo 'task-link">Build with Parameters' )"
    local _BuildStatusBefore="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFileLastBuild)"
    local _BuildNumberBefore="$(_t4dSrcJenkinsPageBuildGetBuildNumber $_OutPutHtmlFileLastBuild)"
    if [[ "$_ProjectAvailable" != "" ]]; then
        _t4dDebugLog $perror "Project $_project Unavailable, please see jenkins available project using jks get"
        return 1
    elif [[ "$_BranchAvailable" != "" ]]; then
        _t4dDebugLog $pwarning "Unknown Branch $_branchName in $_project"
        _t4dPromptAskForChar "Press Enter to Sync Branch in $(echo $_project | sed 's|/job||g'), Ctrl+C to Abort"
        _t4dModJksUtilsSync $_project
    fi

    case "${_BuildStatusBefore:-Empty}" in
        Started*)
            _t4dDebugLog $pwarning "Build #${_BuildNumberBefore} Already running"
            _t4dPromptAskForChar "Press Enter to launch another build, Ctrl+C to Abort"
            _Start="true"
        ;;
        Empty)
            _t4dDebugLog $pwarning "Build #1, Default config will be launched"
            if [[ "$_ExtraArgParam" != "" ]]; then
                _t4dDebugLog $pinfo "Parameters detected, you will need to stop this build then relaunch your command in order to apply it on your build"
                _t4dDebugLog $pinfo "TIPS : jks stop     - stop current build"
                _t4dPromptAskForChar "Press Enter to continue, Ctrl+C to Abort"
            fi
            _Start="true"
        ;;
        *)
            _Start="true"
        ;;
    esac

    if [[ "$_BuildWithParams" == 'task-link">Build with Parameters' ]]; then
        _ExtraArg="buildWithParameters?delay=0sec$_ExtraArgParam"
    else
        _ExtraArg="build?delay=0sec"
    fi

    #BUILD ONLY IF IT'S POSSIBLE
    if [[ "$_Start" == "true" ]]; then
        t4dLogVerbose $pvlog "_t4dSrcJenkinsPageBranchBuildNow $_project $_branchName \"${_ExtraArg}\""
        _t4dSrcJenkinsPageBranchBuildNow $_project $_NormalizedbranchName "${_ExtraArg}"
        t4dLogVerbose $pvlog "_t4dSrcJenkinsApiGetPage \"$_project/job/$_branchName/lastBuild/\" $_OutPutHtmlFile"
        sleep 2
        _t4dSrcJenkinsApiGetPage "$_project/job/$_NormalizedbranchName/lastBuild/" $_OutPutHtmlFile
        local _BuildStatusAfter="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
        local _BuildNumber="$(_t4dSrcJenkinsPageBuildGetBuildNumber $_OutPutHtmlFile)"
        case $_BuildStatusAfter in
            Started*)
                _t4dPromptSquare "Build #$_BuildNumber Started" $plgreen
            ;;
            *)
                _t4dDebugLog $perror "Something went wrong, build status is ${_BuildStatusAfter:-Empty}"
            ;;
        esac
    fi

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsStart" "$@"
}

_t4dModJksUtilsStartWithParams(){
# Generated From $Tools4Dev_PATH/Templates/function-advanced.env
# v1.5.0
###### _t4dModJksUtilsStartWithParams
#   - Name:
#       _t4dModJksUtilsStartWithParams
###
#   - Synopsis:
#       Jenkins params utilities to get params default values and generate jks command 
###
#   - Usage:
#       * _t4dModJksUtilsStartWithParams [arguments] 
#           Show you current params with default params or overrided params
#       * _t4dModJksUtilsStartWithParams [arguments] -f
#           Launch build with overrided params
#       * _t4dModJksUtilsStartWithParams -clean 
#           Will force all boolean to false
#
###
#   - Available Options:
#       * -Param|-P  <NAME>  [Value]       = Replace <NAME> value with [Value]
#       * -clean                           = Disable All Boolean
#       * -Filter|-F <FILTER> <Value>      = Search for item beguinning with <FILTER> then appl new value on all of them 
#       * -force|-f                        = Launch Build with current config
#       * -slack                           = Replace SlackChannel with content of $WS_CUSTOM_CHANNEL_NOTIFICATION
#       * -pipeline                        = Override default project pipeline 
#           
#  
###
#   - Example:
#
#       * _t4dModJksUtilsStartWithParams -clean -P Partner-STB true
#           Will force all boolean to false + set boolean Partner-STB to true
#       * _t4dModJksUtilsStartWithParams -clean -F Partner true
#           Will force all boolean to false + set all boolean starting with Partner to true
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###### DOCUMENTATION BLOC #####
    local _Option="status"
    local _Ouput=""
    local _Params="$(_t4dSrcJenkinsFilesGetParams)"
    local _Pipeline=""
    local _Verbosity="0"

    while [[ "$@" != "" ]]; do
        case "$1" in
            -Param|-P)
                _Type="$(echo $_Params | grep "^$2|" | cut -d '|' -f2 )"
                _Params="$(echo $_Params | grep -v "^$2|" || true)"
                _Params="$_Params\n$2|$_Type|$3"
                shift
                shift
            ;;
            -slack)
                if [[ "$WS_CUSTOM_CHANNEL_NOTIFICATION" != "" ]] && [[ "$(echo $_Params | grep "^SlackChannel|")" != "" ]]; then
                    _Type="$(echo $_Params | grep "^SlackChannel|" | cut -d '|' -f2 )"
                    _Params="$(echo $_Params | grep -v "^SlackChannel|")"
                    _Params="$_Params\nSlackChannel|$_Type|${WS_CUSTOM_CHANNEL_NOTIFICATION:-null}"
                else
                    _t4dDebugLog "$warning" "WS_CUSTOM_CHANNEL_NOTIFICATION variable not defined or SlackChannel params not available"
                fi
            ;;
            -clean|-c)
                _Params="$(echo $_Params | sed 's|true$|false|g')"
            ;;
            -Filter|-F)
                _Type="$(echo $_Params | grep "^$2" | cut -d '|' -f2 | uniq )"
                _Filter="$(echo $_Params | grep "^$2" | cut -d '|' -f1)"
                _Params="$(echo $_Params | grep -v "^$2")"
                local _Result=""
                if [[ "$(echo $_Type | head -1 | cut -d ' ' -f1)" != "$_Type" ]]; then
                    _t4dDebugLog $perror "$_Type is not uniq"
                    return 1
                fi
                
                for _filteredParam in $(echo $_Filter); do
                    # _t4dDebugLog $pinfo ">> $_filteredParam"
                    _Result="$_Result\n$_filteredParam|$_Type|$3"
                done
                _Params="$_Params\n$_Result"
                shift
                shift
            ;;
            -force|-f)
                _Option="launch"
            ;;
            -pipeline)
                _Pipeline="$(_t4dSrcJenkinsUtilsParseProject $2) $(_t4dSrcGitInfoBranch)"
                shift
            ;;
            -verbose|-v)
                _Verbosity="1"
            ;;
            *)
                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
                return $_t4dErrorCode
            ;;
        esac
        shift
    done

    #Format Space for URL
    _Params="$(echo $_Params | sed 's| |%20|g')"

    case $_Option in
        launch)
            _Ouput=""
            _OuputOpt=""
            for _param in $(echo $_Params); do
                local _name="$(echo $_param | cut -d '|' -f1)"
                local _value="$(echo $_param | cut -d '|' -f3)"
                _Ouput="${_Ouput}&${_name}=${_value}"
            done
            if [[ "$_Verbosity" != "0" ]]; then
                _t4dDebugLog $plog "_t4dModJksUtilsStart -extraArg "$_Ouput" $(echo $_Pipeline)"
            fi
            _t4dModJksUtilsStart -extraArg "$_Ouput" $(echo $_Pipeline) || return 1
        ;;
        status)
            for _param in $(echo $_Params); do
                local _name="$(_t4dPromptVarWithSpace 25 "$(echo $_param | cut -d '|' -f1)" | sed 's|%||g')"
                local _type="$(_t4dPromptVarWithSpace 10 "$(echo $_param | cut -d '|' -f2)" | sed 's|%||g' \
                                                | sed "s|boolean|\\${plblue}boolean\\${pstd}|g" \
                                                | sed "s|string|\\${plpurple}string\\${pstd}|g")"
                local _value="$(echo $_param | cut -d '|' -f3 \
                                                | sed 's|%20| |g' \
                                                | sed "s|true$|\\${plgreen}true\\${pstd}|g" \
                                                | sed "s|false$|\\${plred}false\\${pstd}|g")"
                if [[ "$(echo ${_name} | grep '^MB')" != "" ]]; then
                    _OuputOpt="${_OuputOpt}\n${_type} - ${_name} = ${_value}" 
                else
                    _Ouput="${_Ouput}\n${_type} - ${_name} = ${_value}" 
                fi
                
            done
            if [[ "$_Pipeline" != "" ]]; then
                _t4dPromptSquare "${_Pipeline}" $plblue
            fi
            echo "$_Ouput" | sort
            if [[ "$_OuputOpt" != "" ]]; then
                echo "$_OuputOpt" | sort
            fi
            _t4dPromptSquare "This was a dry run, Specify -f option to launch parameterized build" "${plpurple}"
        ;;
        *)
            _t4dDebugLog $perror "_t4dJenkinsUtilsParams : option ${plyellow}${_Option}${pstd} not available"
            return 1
        ;;
    esac

###############################
}

_t4dModJksUtilsBuildStatus(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.0
_t4dDebugInfoStart "_t4dModJksUtilsBuildStatus" "$#" "$@"
###### _t4dModJksUtilsBuildStatus
#   - Name:
#       _t4dModJksUtilsBuildStatus
###
#   - Synopsis:
#       Return Pretty Build status for Table input
###
#   - Example:
#       _t4dModJksUtilsBuildStatus PASSED ALPHA
#       _t4dModJksUtilsBuildStatus PASSED BETA
###
###### DOCUMENTATION BLOC #####

    local _Color=""
    local _Name=""
    case $1 in 
        PASSED)
            _Color="$plgreen"
            if [[ $# -eq 2 ]]; then
                _Name="$2"
            else
                _Name="PASSED"
            fi
            
        ;;
        FAILED)
            _Color="$plred"
            if [[ $# -eq 2 ]]; then
                _Name="$2"
            else
                _Name="FAILED"
            fi
        ;;
        *)
            _Name=" "
        ;;
    esac
    if [[ ${#_Name} -gt 8 ]]; then
        _Name="${_Name:0:7}."
    fi
    _t4dPromptVarCenterWithChar --color "$_Color" 10 "$_Name"   " "

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsBuildStatus" "$@"
}


_t4dModJksUtilsEdit(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsEdit" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsEdit
#   - Name:
#       _t4dModJksUtilsEdit
###
#   - Synopsis:
#       Read '_Jenkins_/_Main_' and open vi to allow user to customize buildCommand
###
#   - Definition:
#       This function will create a file name Build.tmp and scan _Jenkins_/_Main_ boolean params to create
#           an easy to edit file in order to allow user to disable or enable any target during build.
#       
#       Each time you will launch _t4dModJksUtilsEdit it will replace old file by a new one, so be careful
#
#       It will also open file with vi to edit the file dynamically. After it will show your current configuration 
#           and path to the file
#
#           IMPORTANT : [ ] -> desactived
#           IMPORTANT : [X] -> activated
#
#           TIPS : i   -> edit file
#           TIPS : esc -> enter in save mode
#           TIPS : :wq -> write and save
#           TIPS : :q! -> quit without saving
#
###
#   - Usage:
#       _t4dModJksUtilsEdit
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    if [[ ! -e "$T4D_PROJECT_LOG_PATH/jenkins/Build.tmp" ]]; then
        _t4dSrcJenkinsUtilsConvertJenkinsFileBoolean "$WS_ROOT/_Jenkins_/_main_" "$T4D_PROJECT_LOG_PATH/jenkins/Build.tmp"
    fi
    vi  "$T4D_PROJECT_LOG_PATH/jenkins/Build.tmp"
    cat "$T4D_PROJECT_LOG_PATH/jenkins/Build.tmp" | grep -v '^#'
    _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color "$T4D_PROJECT_LOG_PATH/jenkins/Build.tmp")" $picyan

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsEdit" "$@"
}

_t4dModJksUtilsGetLastPage(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsGetLastPage" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsGetLastPage
#   - Name:
#       _t4dModJksUtilsGetLastPage
###
#   - Synopsis:
#       Get last Build Page depending on your current workspace and branchName
###
#   - Usage:
#       _t4dModJksUtilsGetLastPage
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    if [[ "$1" != "" ]] && [[ "$(_t4dSrcBitBucketUtilsListRemoteBranches "WKS" "$WS_PROJECT_NAME" "?filterText=$1")" != "" ]]; then
        local _branchName="$(echo $1 | sed 's|/|%252F|g')"
    else
        local _branchName="$(_t4dSrcGitInfoBranch | sed 's|/|%252F|g')"
    fi
    local _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} ${_branchName})"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsGetLastPage.html"
    _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/" "$_OutPutHtmlFile"
    local _Uuid="$(_t4dSrcJenkinsPageBranchListBuilds $_OutPutHtmlFile | head -1 | sed 's|#||g')"
    _t4dModJksInfoGetBuild $_project $_branchName $_Uuid

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsGetLastPage" "$@"
}

_t4dModJksUtilsStop(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsStop" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsStop
#   - Name:
#       _t4dModJksUtilsStop
###
#   - Synopsis:
#       Try to stop last build depending on your current workspace and branchName
###
#   - Usage:
#       _t4dModJksUtilsStop
#       _t4dModJksUtilsStop <CustomUuid>
#       _t4dModJksUtilsStop <CustomUuid> <CustomBranch>
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _branchName="$(_t4dSrcGitInfoBranch | sed 's|/|%252F|g')"

    if [[ "$2" != "" ]]; then
        _t4dDebugLog $pinfo "Override BranchName with $2"
        _branchName="$2"
    fi

    local _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsStop.html"
    _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/" "$_OutPutHtmlFile"
    local _Uuid="$(_t4dSrcJenkinsPageBranchListBuilds $_OutPutHtmlFile | head -1 | sed 's|#||g')"
    local _TestNumber="0"
    local _BuildStatus="Started"

    if [[ "$1" != "" ]]; then
        _t4dDebugLog $pinfo "Override Uuid with $1"
        _Uuid="$1"
    fi
    
    while [[ "$(echo $_BuildStatus | grep 'Started')" != "" ]]; do
        _TestNumber="$(expr $_TestNumber + 1)"
        echo -en "\rPlease wait $(_t4dPromptVarWithChar $_TestNumber "" '.' | sed 's|%||g')"
        _t4dSrcJenkinsPageBuildStop $_project $_branchName $_Uuid stop
        _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/$_Uuid/" $_OutPutHtmlFile
        _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
    done
    echo ""


    local _BuildNumber="$(_t4dSrcJenkinsPageBuildGetBuildNumber $_OutPutHtmlFile)"
    
    case $_BuildStatus in
        Success*)
            _t4dPromptSquare "Build Already Finished & Successful" $plyellow
        ;;
        Failed*)
            _t4dPromptSquare "Build Already Finished & Failed" $plred
        ;;
        Aborted*)
            _t4dPromptSquare "Build $_BuildNumber Stopped" $plgreen
        ;;
        *)
            _t4dDebugLog $perror "Something went wrong, build status is $_BuildStatus"
        ;;
    esac

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsStop" "$@"
}

_t4dModJksUtilsSync(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsSync" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsSync
#   - Name:
#       _t4dModJksUtilsSync
###
#   - Synopsis:
#       Force jenkins new branch discovery process
###
#   - Definition:
#       If your branch has never been discovered on Jenkins (because you just push it), you will need to launch 
#       _t4dModJksUtilsSync in order to force jenkins discovering new branches
#
###
#   - Example:
#       _t4dModJksUtilsSync
#       _t4dModJksUtilsSync Develop
#       
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _project _branchName

    if [[ "$1" != "" ]]; then
        _project="$1"
    else
        _branchName="$(_t4dSrcGitInfoBranch | sed 's|/|%252F|g')"
        _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
    fi
    _t4dPromptSquare "$_project : Indexing Branch" $plpurple
    _t4dSrcJenkinsPagePipelineSync "$_project"

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsSync" "$@"
}

_t4dModJksUtilsReStart(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.1
_t4dDebugInfoStart "_t4dModJksUtilsReStart" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModJksUtilsReStart
#   - Name:
#       _t4dModJksUtilsReStart
###
#   - Synopsis:
#       Try to Stop last build then start a new one
###
#   - Usage:
#       _t4dModJksUtilsReStart
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _branchName="$(_t4dSrcGitInfoBranch | sed 's|/|%252F|g')"
    local _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksUtilsReStart.html"
    _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/" "$_OutPutHtmlFile"
    local _Uuid="$(_t4dSrcJenkinsPageBranchListBuilds $_OutPutHtmlFile | head -1 | sed 's|#||g')"
    _t4dModJksUtilsStop  $_project $_branchName $_Uuid stop
    _t4dModJksUtilsStart ${1:-default}

###############################
_t4dDebugInfoEnd "_t4dModJksUtilsReStart" "$@"
}

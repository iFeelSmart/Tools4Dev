# _t4dModGikCompletions(){
#     local opts
#     local opts="$(_t4dDocGetOptionsListV4 "$(_t4dDocGetFunctionContent "gik")" )"
#     local gitOpts="$(git help 2>&1 | grep '^   [a-z]' | cut -d ' ' -f4)"
#     case $1 in 
#         git)
#             opts="$(_t4dDocGetOptionsListV4 "$(_t4dDocGetFunctionContent "gik")" )"
#             COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
#         ;;
#         checkout)
#             opts="$(_t4dSrcGitInfoListRemotesBranch)"
#             COMPREPLY=( $(compgen -F "${opts}" -- ${cur} ) )
#         ;;
#         -b)
#             opts="feature bugfix jenkins release"
#             COMPREPLY=( $(compgen -W "$opts" -- ${cur} ) )
#         ;;
#         origin)
#             opts="$(_t4dSrcGitInfoListRemotesBranch | egrep '(staging|sprint|release|master|develop)')"
#             COMPREPLY=( $(compgen -W "$opts" -- ${cur} ) )
#         ;;
#         other)
#             opts="$(git help 2>&1 | grep '^   [a-z]' | cut -d ' ' -f4)"
#             COMPREPLY=( $(compgen -W "$opts" -- ${cur} ) )
#         ;;
#         add)
#             local _status="$(cat $T4D_PROJECT_LOG_PATH/.gikStatus | cut -d ' ' -f2 | tr '\n' ' ')"
#             if [[  "$(echo $_status | sed 's| ||g')" != "" ]]; then
#                 opts="$_status"
#                 COMPREPLY=( $(compgen -W "${opts}" -- ${cur} ) )
#             else
#                 _t4dModGikCompletionsFileExplorer
#             fi
#         ;;
#         *)
#             echo "$(_t4dDocGetSectionContent "$(_t4dDocGetFunctionContent "$(_t4dDocGetOptionsHiddenCall "$(_t4dDocGetFunctionContent "gik")" ${COMP_WORDS[1]})" )" "Available Options" | sed 's| ||g' | cut -d '=' -f1 | cut -d '|' -f1)"
#         ;;
#     esac

# }

_t4dModGikCompletions(){
    local _outputShell="false"
    local _enableFileCompletion="false"

    local gikOpts="$(_t4dDocGetOptionsListV4 "$(_t4dDocGetFunctionContent "gik")" )"
    local gitOpts="$(git help 2>&1 | grep '^   [a-z]' | cut -d ' ' -f4)"

    if [[ "$1" == "-shell" ]]; then
        shift
        _outputShell="true"
    fi
    local cur="${@: -1}"
    local opts="$1"
    if [[ $# -gt 2 ]]; then
        local prev="$(echo ${@: -2:-1} | sed 's| ||g')"
    else
        local prev="$opts"
    fi
    
    if [[ "${prev}" == "gik" ]] || [[ "${prev}" == "help" ]] || [[ "${prev}" == "git" ]]; then
        opts="$gikOpts"
    elif [[ "$opts" == "add" ]]; then
        local _status="$(cat $T4D_PROJECT_LOG_PATH/.gikStatus 2> /dev/null | sed 's|^.||g' | sed 's|^.||g' | sed 's|^.||g' | tr '\n' ' ')"
        if [[  "$(echo ${_status} | sed 's| ||g')" != "" ]]; then
            opts="$_status"
        else
            _enableFileCompletion="true"
        fi
    elif [[ "$opts" != "" ]] && [[ "$( echo $gikOpts | grep "$opts")" != "" ]]; then
        case $prev in
            checkout)
                opts="$(_t4dSrcGitInfoListRemotesBranch)"
            ;;
            -b)
                opts="feature bugfix jenkins release"
            ;;
            origin)
                opts="$(_t4dSrcGitInfoListRemotesBranch | egrep '(staging|sprint|release|master|develop)')"
            ;;
            other)
                opts="$(git help 2>&1 | grep '^   [a-z]' | cut -d ' ' -f4)"
            ;;
            all)
                if [[ "${prev}" == "all" ]]; then
                    opts="git"
                else
                    _git
                fi
            ;;
            *)
                opts="$(_t4dDocGetSectionContent "$(_t4dDocGetFunctionContent "$(_t4dDocGetOptionsHiddenCall "$(_t4dDocGetFunctionContent "gik")" ${opts})" )" "Available Options" -allow-empty | sed 's| ||g' | sed 's|^*||g' | cut -d '=' -f1 | cut -d '|' -f1)"
            ;;
        esac
    fi

    if [[ "$_outputShell" == "true" ]]; then
        if [[ "$_enableFileCompletion" == "true" ]]; then
            echo ""
        else
            echo "$opts"
        fi
        # echo "- ${prev}"
        # echo "- $cur"
    else
        if [[ "$_enableFileCompletion" == "true" ]]; then
            _t4dModGikCompletionsFileExplorer
        else
            COMPREPLY=( $(compgen -W "${opts}" -- ${cur} ) )
        fi
        return 0
    fi

}

_t4dModGikCompletionsFileExplorer(){
    if [[ -d $cur ]]; then
        COMPREPLY=( $(compgen -o nospace -f -- ${cur} ) )
    else
        COMPREPLY=( $(compgen -o nospace -S / -W "$(_t4dFindTypeInXML project $WS_ROOT/manifest)" -- ${cur} ) )
    fi
}
    


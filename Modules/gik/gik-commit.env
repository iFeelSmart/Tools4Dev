#ERROR CODE 312
_t4dModGikCommit(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.2.2
_t4dDebugInfoStart "_t4dModGikCommit" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dModGikCommit
#   - Name:
#       _t4dModGikCommit
###
#   - Synopsis:
#       Launch multi repositories commit scenario
###
#   - Definition:
#       Global Gik commit method that will help user to commit at once in several subprojects
#
#       This will works with several distinct steps
#           1- Get all involved projects (reading change to be commited status)
#           2- Override user branch argument (-b), take Global Manager Project 
#               if not then Check Branch status (protected or not)
#           3- Override custom message if any (-m)
#
#
#           Ask User to commit in Several repository at once
#           4- Update manifest status
#           5- Create a new .diff file
#           6- Add those to be commited in Global Manager Project
#           7- Generate a custom message commit if '-m' was not specified
#           Ask User to commit in current Global Manager Project
#
###
#   - Usage:
#       _t4dModGikCommit <options>
#
###
#   - Available Options:
#       * -folders                      = Only commit in one folder
#       * -force  | -f                  = Force commit
#       * -branch | -b                  = Select which branch will be selected for commit
#       * -message| -m                  = Add a 'OneLine' message for commit
#       * -diff-file                    = Enable .diff file generation
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local CHPWD=1
    local _answer=""
    local _force="${T4D_GIK_FORCE:-false}"
    local _branch="$(_t4dSrcGitInfoBranch)"
    local _message=""
    local _protected="$(_t4dSrcGitIsMyBranchProtected $_branch)"
    local _involvedProjects=""
    local _projects=""
    local _extraArgs=""
    local _manifestFile="$WS_ROOT/manifest.xml"
    local _errors="false"
    local _enableDiff="false"

    while [[ "$@" != "" ]]; do
        case "$1" in
            -folders)
                _projects="$2"
                shift
                shift
            ;;
            -force|-f)
                _force="true"
                shift
            ;;
            -diff-file)
                _enableDiff="true"
                shift
            ;;
            -branch|-b*)
                local _branch="$2"
                shift
                shift
            ;;
            -normalize|-n)
                _message="$(_t4dSrcGitUtilsNormalizeCommitMessage "$2 $3" )"
                _SubRepoMessage="$(echo $_message | sed 's|#[^ ]* ||g')"
                shift
                shift
                shift
            ;;
            -message|-m*)
                _message="$2"
                _SubRepoMessage="$(echo $_message | sed 's|#[^ ]* ||g')"
                shift
                shift
            ;;
            --no-verify)
                _extraArgs="--no-verify"
                shift
            ;;
            *)
                _t4dModGikCommitFatalError "312" "Unknown option $1"
                return 312
            ;;
        esac
    done

    if [[ "$(readlink $_manifestFile)" != "" ]]; then
        _manifestFile="$(readlink $_manifestFile)"
    fi

    
    [[ "$_force" != "true" ]] && [[ "$_protected" != "" ]] && _t4dModGikCommitFatalError "312" "$_protected" "use -f options or gik checkout -b" && return 312
    # STEP 1 Involved Projects
    _t4dModGikCommitInfo "Involved Projects"
    for _project in $(echo $_projects); do
        cd "$WS_ROOT/$_project"
        local _st="$(git status -s 2>/dev/null)"
        local _tmp="$(_t4dSrcGitStatusCommit "$_st")"
        local _gitBusy="$(_t4dSrcGitUtilsBusyGit)"
        local _LockableProject="$(_t4dManifestXmlGetData project path $_project lock $_manifestFile)"
        if [[ "$_gitBusy" != "false" ]]; then
            _t4dDebugLog $pwarning "   Folder ${plcyan} ${_project} ${pstd} Skipped as $_gitBusy on going"
            _errors="1"
        elif [[ "$_tmp" != "" ]]; then
            _t4dPromptSquare "$_project"
            if [[ "$_LockableProject" == "true" ]]; then
                echo "   ${plyellow}$(_t4dSrcGitInfoBranch)${pstd} ${pemlock}"
            elif [[ "$(_t4dSrcGitInfoBranch)" != "$_branch" ]]; then
                echo "   ${plblue}$(_t4dSrcGitInfoBranch)${pstd} -> ${pigreen}${_branch}${pstd}"
            else
                echo "   ${plgreen}$(_t4dSrcGitInfoBranch)${pstd}"
            fi
            echo "$_tmp"
            _involvedProjects="$_involvedProjects $_project"
        fi
    done
    cd "$WS_ROOT"
    if [[ "$_involvedProjects" != "" ]]; then
        echo ""
        _t4dPromptInfo "Commit Message" "$_message" 16
        echo ""
        if [[ "$_force" != 'true' ]]; then
            echo "Do you want to commit ?"
            echo "  Enter to proceed, Ctrl+C to abort"
            read _answer
        fi
        for _project in $(echo $_involvedProjects); do
            local _LockableProject="$(_t4dManifestXmlGetData project path $_project lock $_manifestFile)"
            cd "$WS_ROOT/$_project"
            if [[ "$_LockableProject" == "true" ]]; then
                _t4dDebugLog $pinfo "Project $_project Locked, skipping branch switching"
            else
                _t4dSrcGitUtilsSwitchOrCreateBranch ${_branch}
            fi
            if [[ "$_message" == "" ]]; then
                git commit $(echo $_extraArgs) || _errors=2
            else
                git commit -m "$_SubRepoMessage" $(echo $_extraArgs) || _errors=2
            fi
        done
    else
        echo "          NONE"
    fi
    

    case $_errors in 
    1)
        echo "${plyellow}At least 1 Warning from busy repository has been found, do you want to create a WKS Commit and update your manifest ?${pstd}"
        echo "Enter to continue, Ctrl+C to abort"
        cd "$WS_ROOT"
        read _answer
    ;;
    2)
        echo "${plyellow}At least 1 Errors commiting in >$_involvedProjects <, do you want to create a WKS Commit and update your manifest ?${pstd}"
        echo "Enter to continue, Ctrl+C to abort"
        cd "$WS_ROOT"
        read _answer
    ;;
    esac
    # STEP 2 WKS Project
    _t4dModGikCommitInfo "WKS Project"
    local _AllProjects="$(_t4dFindTypeInXML "project" "$WS_ROOT/manifest")"
    echo "${plblue} GikCommit : Updating $(basename $_manifestFile)"
    cd "$WS_ROOT"
    _t4dModGikUtilsUpdate -no-logo $_AllProjects $_manifestFile

    if [[ ! -e "$WS_ROOT/.diff" ]] && [[ "$_enableDiff" == "true" ]]; then
        touch "$WS_ROOT/.diff"
    fi

    if [[ -e "$WS_ROOT/.diff" ]]; then
            echo " GikCommit : Updating .diff"
            _t4dModGikUtilsDiff -f $_AllProjects --no-color --name-only -r HEAD 2> /dev/null > "$WS_ROOT/.diff"
            echo " GikCommit : Add .diff & Manifest.xml to be commited${pstd}"
            cd "$WS_ROOT"
            git add .diff
    fi

    cd "$WS_ROOT"
    git add $(echo $_manifestFile | sed "s|$WS_ROOT/||g")
    local _st="$(git status -s 2>/dev/null)"
    local _GlobalSt="$(_t4dSrcGitStatusCommit "$_st")"

    echo "${plblue} GikCommit : Status"

    if [[ "$_GlobalSt" != "" ]]; then
        echo $_GlobalSt
        echo ""
        _t4dPromptInfo "Commit Message" "$_message" 16
        if [[ "$_force" != 'true' ]]; then
            echo "Do you want to commit ?"
            echo "  Enter to proceed, Ctrl+C to abort"
            read _answer
        fi
        echo "${_message:-'chore : UpdateManifest'}" > .commit.tmp
        if [[ -e "$WS_ROOT/.diff" ]]; then
            git diff --cached .diff | grep '^+' >> .commit.tmp || echo "No Diff Entry" >> .commit.tmp
        fi
        git commit -F .commit.tmp $(echo $_extraArgs) > /dev/null || _errors='true'
    else
        _t4dModGikCommitFatalError "312" "Nothing to be commited"
        _errors='true'
    fi

    if [[ "${_errors}" == 'false' ]]; then
        if [[ -e "$T4D_PROJECT_LOG_PATH/.gikStatus" ]]; then
            rm $T4D_PROJECT_LOG_PATH/.gikStatus
        fi
        _t4dPromptSquare "$(git log -1 | head -1 )" "${plgreen}"
    else
        _t4dPromptSquare "_t4dModGikCommit, at least 1 error catched" "${plyellow}"
        return 312
    fi

###############################
_t4dDebugInfoEnd "_t4dModGikCommit" "$@"
}

_t4dModGikCommitLogo(){
    if [[ "$_T4D_QUIET_MODE" == "true" ]]; then
        #DO NOTHING
    else
        local center="$(_t4dPromptCenterSpace '58' | sed 's|-||g')"
        echo "${pllcyan}"
        echo "${center}   _______ __      ______                          _ __   "
        echo "${center}  / ____(_) /__   / ____/___  ____ ___  ____ ___  (_) /_  "
        echo "${center} / / __/ / //_/  / /   / __ \/ __ \`__ \/ __ \`__ \/ / __/  "
        echo "${center}/ /_/ / / ,<    / /___/ /_/ / / / / / / / / / / / / /_    "
        echo "${center}\____/_/_/|_|   \____/\____/_/ /_/ /_/_/ /_/ /_/_/\__/    "
        echo "${pstd}"
    fi
}

_t4dModGikCommitInfo(){
    local Y="${plblue}4${plpurple}"
    local P="${plyellow}\"\"${plpurple}"
    echo "${plpurple}"
    echo "    .-\"-.            "
    echo "   / $Y $Y \\           "
    echo "   \_ v _/            "
    echo '   //   \\            '
    echo "  ((     )) $1"
    echo "===$P===$P====================="
    echo "     |||              "
    echo "     '|'       ${pstd}"
}

_t4dModGikCommitFatalError(){
echo "${plred}              .   ,                    "
echo "        '. '.  \  \                        "
echo "       ._ '-.'. \`\  \                     "
echo "         '-._; .'; \`-.'.                  "
echo "        \`~-.; '.       '.     GIK ERROR $1"
echo "         '--,\`           '.               "
echo "            -='.          ;       $2       "
echo "  .--=~~=-,    -.;        ;                "
echo "  .-=\`;    \`~,_.;        /               "
echo " \`  ,-\`'    .-;         |                "
echo "    .-~\`.    .;         ;                 "
echo "     .;.-   .-;         ,\                 "
echo "       \`.'   ,=;     .-'  \`~.-._         "
echo "        .';   .';  .'      .'   '-.        "
echo "          .\  ;  ;        ,.' _  a',       "
echo "         .'~\";-\`   ;      ;\"~\` \`'-=.)  ${plyellow}$3${plred}"
echo "       .' .'   . _;  ;',  ;                "
echo "       '-.._\`~\`.'  \  ; ; :              "
echo "            \`~'    _'\\_ \\_              "
echo "                  /=\`^^=\`\"\"/\`)-.      "
echo "                  \ =  _ =     =\          "
echo "                   \`\"\"\` \`~-. =   ;    "
echo "             ${piblue}See Doc -> _t4dModGikCommit"
echo "${pstd}"
}
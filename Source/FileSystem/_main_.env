#ERROR CODE 230
source $T4D_SOURCE_PATH/FileSystem/ssh-utils.env

_t4dSrcFileSystemExtract(){
#### _t4dSrcFileSystemExtract
#   Definition :
#       extract tar or zip content in a specific folder
#
#   Usage :
#       _t4dSrcFileSystemExtract <filename> <filePath>
#       _t4dSrcFileSystemExtract -f <filename> <filePath>
#### DOCUMENTATION BLOC ####
    local _ExtractIfExist="-n"
    local _LogFile="$T4D_PROJECT_LOG_PATH/_t4dSrcFileSystemExtract.log"
    
    if [[ "$1" == "-f" ]]; then
        _ExtractIfExist="-o"
        shift
    fi
    local CHPWD=1
    local _FileName="$1"
    local _RootPath="${2:-$PWD}"
    if [[ -d "${_RootPath}" ]] && [[ -e "${_RootPath}/$_FileName" ]] ; then
        mkdir -p "$_RootPath"
        cd "$_RootPath"
        case "$1"
        in
            *.tar)
                echo "tar" > "$_LogFile"
                tar -xvf "${1}" 2>&1 | tee -a "$_LogFile"
            ;;
            *.tar.gz)
                echo "tar.gz" > "$_LogFile"
                tar -xvzf "${1}" 2>&1 | tee -a "$_LogFile"
            ;;
            *.zip)
                echo "zip" > "$_LogFile"
                unzip ${_ExtractIfExist} "${1}" 2>&1 | tee -a "$_LogFile"
            ;;
            *)
                echo "_t4dSrcFileSystemExtract : File not supported skipping extract"
            ;;
        esac
    else
        if [[ ! -e "${_RootPath}/$_FileName" ]]; then 
            _t4dDebugLog $perror "file $_var not found"
        fi
        return 1
    fi
}

_t4dSrcFileSystemGetExtractedLast(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcFileSystemGetExtractedLast
#   - Name:
#       _t4dSrcFileSystemGetExtractedLast
###
#   - Synopsis:
#       Will parse _t4dSrcFileSystemExtract to find folder name
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _DefaultLogFile="$T4D_PROJECT_LOG_PATH/_t4dSrcFileSystemExtract.log"
    local _InstallDir="$1"
    local _ExtractedInfo="$(cat "$T4D_PROJECT_LOG_PATH/_t4dSrcFileSystemExtract.log" | tail -1 | rev | sed -e 's/^[[:space:]]*//' |cut -d ' ' -f1 | rev | cut -d '/' -f1)"
    echo "${_InstallDir}/${_ExtractedInfo}"

###############################
}

_t4dSrcFileSystemCompress(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dSrcFileSystemCompress
#   - Name:
#       _t4dSrcFileSystemCompress
###
#   - Synopsis:
#       create archive in given file extension
###
#   - Usage:
#       _t4dSrcFileSystemCompress <zip|bzip|gzip> <folder|file> <filename>
###
#   - Available Options:
#       * gzip
#       * zip
#       * bzip
###
# Other Valid Documentation blocks :
# Options | Available Options | Usage | Example | Definition
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local CHPWD=1
    local _t4dErrorCode=Unknown
    local _Extension="$1"
    local _Content="$(basename $2)"
    local _ContentDir="$(dirname $2)"
    local _Filename="$3"
    local _OldPWD="$PWD"
    cd $_ContentDir

    case ${_Extension} in
        gzip)
            tar -cz -f ${_Filename}.tar.gz ${_Content}
            ;;
        bzip)
            tar -cJ -f ${_Filename}.tar.bz2 ${_Content}
            ;;
        zip)
            zip -r ${_Filename}.zip ${_Content} 
            ;;
        *)
            _t4dDebugLog $perror "Unknown compression format ${1}"
            return $_t4dErrorCode
            ;;
    esac

    cd $_OldPWD

###############################
}


_t4dSrcFileSystemMount(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dSrcFileSystemMount
#   - Name:
#       _t4dSrcFileSystemMount
###
#   - Synopsis:
#       mount any shared folder on current project
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Root="$(dirname $1)"
    local _Folder="$(basename $1)"
    local _ServerPath="$2"
    local _Credentials="$3"
    local CHPWD=1
    local _OLDPWD=$PWD
    
    if [[ "$WS_HOST_TYPE" != "OSX" ]]; then
        _t4dDebugLog $perror "Not Supported on Linux"
        return $_t4dErrorCode
    fi
    # _t4dDebugLog $pinfo  "$_Root - $_Folder"
    # _t4dDebugLog $pinfo  "mount -t smbfs //$_Credentials@$_ServerPath $_Folder"
    
    mkdir -p $_Root/$_Folder
    cd $_Root

    if [[ "$(ls $_Folder)" != "" ]]; then
        _t4dCheckInfo "Folder $_Folder Already exists"
    else
        mount -t smbfs //$_Credentials@$_ServerPath $_Folder
        if [[ "$(ls $_Folder 2> /dev/null)" != "" ]]; then
            _t4dCheckSucceeded "$_Folder available"
        fi
    fi

    cd $_OLDPWD

###############################
}

_t4dSrcSystemRsync(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.0
_t4dDebugInfoStart "_t4dSrcSystemRsync" "$#" "$@"
###### _t4dSrcSystemRsync
#   - Name:
#       _t4dSrcSystemRsync
###
#   - Synopsis:
#       Rsync overload function to handle RSYNC_PASSWORD 'shadowly'
###
#   - Example:
#       _t4dSrcSystemRsync {YOUR PARAM LIKE YOU USED RSYNC}
###
###### DOCUMENTATION BLOC #####
    if [[ "$T4D_RSYNC_PASSWORD" != "" ]]; then
        echo $T4D_RSYNC_PASSWORD > .rsync
        chmod 600 .rsync
        rsync --password-file .rsync $@
        rm .rsync
    else
        rsync  $@
    fi

###############################
_t4dDebugInfoEnd "_t4dSrcSystemRsync" "$@"
}

_t4dSrcFileSystemDiskUsage(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.5.0
###### _t4dSrcFileSystemDiskUsage
#   - Name:
#       _t4dSrcFileSystemDiskUsage
###
#   - Synopsis:
#       Return OS Disk Usage 
###
#   - Example:
#       _t4dSrcFileSystemDiskUsage
#       _t4dSrcFileSystemDiskUsage /var/lib/jenkins/jobs
###
###### DOCUMENTATION BLOC #####

    echo "Will Be Overrided in Platform Folders" &> /dev/null

###############################
}

_t4dSrcFileSystemPatchVersion(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcFileSystemPatchVersion
#   - Name:
#       _t4dSrcFileSystemPatchVersion
###
#   - Synopsis:
#       search for version in sended folder to replace version
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _folder="$1"
    local _version="${2:-0.0.0}"
    local _Newversion="${3:-0.0.0}"
    local CHPWD=1
    local _Result="$(grep -r "$(echo $_version | sed 's|\.|\\.|g')" $_folder | cut -d ':' -f1)"
    local _TmpFile="$T4D_PROJECT_LOG_PATH/_t4dSrcFileSystemPatchVersion.tmp"
    
    mkdir -p $T4D_PROJECT_LOG_PATH
    t4dLogVerbose $plog "Replacing $_version with $_Newversion"

    for _file in $(echo $_Result); do
        local _Content="$(cat $_file | grep "$_version")"
        if [[ -e $_file ]]; then
            _t4dDebugLog $plog "$_file"
            cat $_file | sed "s|$_version|$_Newversion|g" > $_TmpFile
            mv $_TmpFile $_file
        fi
    done
###############################
}
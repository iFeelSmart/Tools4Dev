
_t4dSrcJenkinsPageBuildInfo(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsPageBuildInfo
#   - Name:
#       _t4dSrcJenkinsPageBuildInfo
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _project="$1"
    local _branchName="$(echo $2 | sed 's|%252F|/|g')"
    local _branchNameURL="$(echo $_branchName | sed 's|/|%252F|g')"
    local _buildNumber="$3"
    local _ExtendedLog="${4:-default}"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksInfoGetBuild.html"
    local _ConsoleHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksInfoGetBuildConsole.html"
    # _t4dDebugLog $plog "_t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile"
    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile
    if [[ "$_ExtendedLog" == "extended" ]]; then
        _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/consoleFull $_ConsoleHtmlFile
    fi

    local _Title="$(_t4dGetHtmlData $_OutPutHtmlFile title)"
    if [[ "$(echo $_Title | grep '404 Not Found')" != "" ]]; then
        _t4dDebugLog $perror "$_Title"
        return 1
    else
        _t4dPromptSquare "$_Title" "$plpurple"
        local _Revision="$(_t4dSrcJenkinsPageBuildGetProjectSha7 $_OutPutHtmlFile)"
        local _LibRevision="$(_t4dSrcJenkinsPageBuildGetJenkinsLibSha7 $_OutPutHtmlFile)"
        local _LibBranch="$(_t4dSrcJenkinsPageBuildGetJenkinsLibBranch $_OutPutHtmlFile)"
        local _url="$(_t4dSrcJenkinsPageBuildGetUrl $_project $_branchNameURL $_buildNumber "blue")"
        local _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
        
        if [[ "$_ExtendedLog" == "extended" ]]; then
            local _PipelinePassing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile PASSING | tr ' ' '\n' | sort)"
            local _PipelineFailing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile FAILING | tr ' ' '\n' | sort)"
        fi

        _t4dPromptSquare "$(_t4dSrcJenkinsPageBuildGetBuildDate $_OutPutHtmlFile $_buildNumber)" "$plcyan"
        _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color "$_LibBranch -> $_LibRevision")" $plyellow
        
        _t4dSrcJenkinsPageBuildListArtifacts $_OutPutHtmlFile || _t4dDebugLog $pwarning "Unable to  List Artefacts"
        echo ""
        echo ""
        
        echo "$(_t4dPromptCenterSpace "${#_BuildStatus}" | sed 's|-||g')$_BuildStatus"
        if [[ "$_ExtendedLog" == "extended" ]]; then
            if [[ "${_PipelinePassing}${_PipelineFailing}" != "" ]]; then
                echo ""
                _t4dPromptFixedCol 40 --color "$plgreen" $(echo ${_PipelinePassing})
                _t4dPromptFixedCol 40 --color "$plred"   $(echo ${_PipelineFailing})
            fi
        fi
        if [[ "$_Revision" == "$_LibRevision" ]]; then
            _t4dPromptSquare "$_branchName -> Unknown" "$plblue"
        else
            _t4dPromptSquare "$_branchName -> $_Revision" "$plblue"
        fi

        if [[ "$_T4D_HYPER_LINK_COMPATIBLE" == "false" ]]; then
            echo "${plwhite}$(_t4dPromptCenterSpace "${#_url}" | sed 's|-||g')${_url}${pstd}"
        else
            local _urlName="Click To Open BlueOcean"
            echo "${plwhite}$(_t4dPromptCenterSpace "${#_urlName}" | sed 's|-||g')$(_t4dPromptHyperLink "${_url}" "${_urlName}")${pstd}"
        fi
    fi
    

###############################
}

_t4dSrcJenkinsPageBuildMonitor(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildMonitor" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildMonitor
#   - Name:
#       _t4dSrcJenkinsPageBuildMonitor
###
#   - Synopsis:
#       Get Html page from specifique Project, BranchName and BuilderNumber in Jenkins
###
#   - Usage:
#       _t4dSrcJenkinsPageBuildMonitor <ProjectName> <BranchName> <BuildNumber>|last
#
###
#   - Example:
#       _t4dSrcJenkinsPageBuildMonitor Prod master 72
#       _t4dSrcJenkinsPageBuildMonitor Prod master last
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _project="$(_t4dJenkinsUtilsParseProjectPath $1)"
    local _branchName="$(echo $2 | sed 's|%252F|/|g')"
    local _branchNameURL="$(echo $_branchName | sed 's|/|%252F|g')"
    local _buildNumber="$(echo $3 | sed 's|last$|lastBuild|g')"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dSrcJenkinsPageBuildMonitor.html"
    local _ConsoleHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dSrcJenkinsPageBuildMonitorConsole.html"
    # _t4dDebugLog $plog "_t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile"
    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/ $_OutPutHtmlFile
    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/consoleFull $_ConsoleHtmlFile
    
    local _Title="$(_t4dGetHtmlData $_OutPutHtmlFile title)"
    local _BuildNumber="$(echo $_Title | grep -Eo '#.* ' | cut -d ' ' -f1 | sed 's|#||g')"
    local _PreviousBuildNumber="$(expr $_BuildNumber - 1 2> /dev/null)"
    local _Revision="$(_t4dSrcJenkinsPageBuildGetProjectSha7 $_OutPutHtmlFile)"
    local _LibRevision="$(_t4dSrcJenkinsPageBuildGetJenkinsLibSha7 $_OutPutHtmlFile)"
    local _LibBranch="$(_t4dSrcJenkinsPageBuildGetJenkinsLibBranch $_OutPutHtmlFile)"
    local _url="$(_t4dSrcJenkinsPageBuildGetUrl $_project $_branchNameURL $_buildNumber "blue")"
    local _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
    local _PipelinePassing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile PASSING | tr ' ' '\n' | sort)"
    local _PipelineFailing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile FAILING | tr ' ' '\n' | sort)"

    if [[ "$_Title" != "Error 404 Not Found" ]]; then
        case "$_BuildStatus" in 
            Started*)
                _t4dPromptSquare "$_Title -> %%${_Revision}%%" "$plpurple" "$plyellow"
                _t4dPromptObjectCenter "$(_t4dPromptSquare --no-color "$_BuildStatus")" "$plcyan" "10"
                echo ""
                echo ""
                if [[ ${_PreviousBuildNumber} -ge 1 ]]; then
                    _t4dPromptSquare "Previous Status : " "$piyellow"
                    _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/${_PreviousBuildNumber}/console $_ConsoleHtmlFile
                    local _PipelinePassing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile PASSING | tr ' ' '\n' | sort)"
                    local _PipelineFailing="$( _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile FAILING | tr ' ' '\n' | sort)"
                    if [[ "${_PipelinePassing}${_PipelineFailing}" != "" ]]; then
                        echo ""
                        _t4dSrcJenkinsPageBuildMonitorParsePipeline "${_PipelinePassing}" "${_PipelineFailing}" "$piyellow"
                    fi
                fi
            ;;
            *)
                _t4dPromptSquare "$_Title" "$plpurple"
                _t4dPromptSquare "$(_t4dSrcJenkinsPageBuildGetBuildDate $_OutPutHtmlFile $_buildNumber)" "$plcyan"
                _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color "$_LibBranch -> $_LibRevision")" $plyellow
                # _t4dSrcJenkinsPageBuildListArtifacts $_OutPutHtmlFile
                echo ""
                echo "$(_t4dPromptCenterSpace "${#_BuildStatus}" | sed 's|-||g')$_BuildStatus"
                if [[ "${_PipelinePassing}${_PipelineFailing}" != "" ]]; then
                    echo ""
                    _t4dSrcJenkinsPageBuildMonitorParsePipeline "${_PipelinePassing}" "${_PipelineFailing}"
                fi
                if [[ "$_Revision" == "$_LibRevision" ]]; then
                    _t4dPromptSquare "$_branchName -> Unknown" "$plblue"
                else
                    _t4dPromptSquare "$_branchName -> $_Revision" "$plblue"
                fi
            ;;
        esac
    else
        return 360
    fi
    

    

###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildMonitor" "$@"
}

_t4dSrcJenkinsPageBuildMonitorParsePipeline(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildMonitorParsePipeline" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildMonitorParsePipeline
#   - Name:
#       _t4dSrcJenkinsPageBuildMonitorParsePipeline
###
#   - Synopsis:
#       Override Default Content
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
        _t4dPromptFixedCol 40 --color "$plgreen" $(echo ${1})
        _t4dPromptFixedCol 40 --color "$plred"   $(echo ${2})
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildMonitorParsePipeline" "$@"
}

_t4dSrcJenkinsPageBuildGetJenkinsLibSha7(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetJenkinsLibSha7" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetJenkinsLibSha7
#   - Name:
#       _t4dSrcJenkinsPageBuildGetJenkinsLibSha7
###
#   - Synopsis:
#       Return Jenkins Library Sha7 from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _res="$(cat $1 | grep -Eo '<strong>Revision</strong>: .{0,7}')$(cat $1 | grep -Eo '<b>Revision</b>: .{0,7}')"
    echo $_res | cut -d ':' -f2 | sed 's| ||g' | head -1
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetJenkinsLibSha7" "$@"
}

_t4dSrcJenkinsPageBuildGetBuildNumber(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetBuildNumber" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetBuildNumber
#   - Name:
#       _t4dSrcJenkinsPageBuildGetBuildNumber
###
#   - Synopsis:
#       Return Build Title from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    _t4dGetHtmlData $1 "title" | grep -Eo '#[0-9].* ' | sed 's|#||g'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetBuildNumber" "$@"
}

_t4dSrcJenkinsPageBuildGetPipelineStatus(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetPipelineStatus" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetPipelineStatus
#   - Name:
#       _t4dSrcJenkinsPageBuildGetPipelineStatus
###
#   - Synopsis:
#       Return List of PASSING or FAILING pipeline
###
#   - Example:
#       _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile PASSING
#       _t4dSrcJenkinsPageBuildGetPipelineStatus $_ConsoleHtmlFile FAILING
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _Item="ITEMS ${2:-FAILING}"
    cat $1 | tr '\n' ' ' | grep -Eo "${_Item}.*" | sed 's|SCM||g' | cut -d '<' -f1 | sed "s|${_Item} ||g" | tr -d '^$'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetPipelineStatus" "$@"
}

_t4dSrcJenkinsPageBuildGetJenkinsLibBranch(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetJenkinsLibBranch" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetJenkinsLibBranch
#   - Name:
#       _t4dSrcJenkinsPageBuildGetJenkinsLibBranch
###
#   - Synopsis:
#       Return Jenkins Library Branch from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _res="$(cat $1 | tr -d '\n' | grep -Eo '<strong>Revision</strong>.{0,100}')$(cat $1 | tr -d '\n' | grep -Eo '<b>Revision</b>.{0,100}')"
    echo $_res | grep -Eo '<ul><li>.{0,100}</li></ul>' | head -1 | sed 's|<ul><li>||g' | sed 's|</li></ul>||g'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetJenkinsLibBranch" "$@"
}

_t4dSrcJenkinsPageBuildGetProjectSha7(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetProjectSha7" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetProjectSha7
#   - Name:
#       _t4dSrcJenkinsPageBuildGetProjectSha7
###
#   - Synopsis:
#       Return Project Sha7 from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _res="$(cat $1 | grep -Eo '<strong>Revision</strong>: .{0,7}')$(cat $1 | grep -Eo '<b>Revision</b>: .{0,7}')"
    echo $_res | cut -d ':' -f2 | sed 's| ||g' | tail -1
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetProjectSha7" "$@"
}

_t4dSrcJenkinsPageBuildListArtifacts(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildListArtifacts" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildListArtifacts
#   - Name:
#       _t4dSrcJenkinsPageBuildListArtifacts
###
#   - Synopsis:
#       Return Available artifacts list from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    cat $1 | grep -Eo '.{0,150}\.zip' | grep -Eo 'href.{0,150}' | uniq | cut -d '=' -f2 | sed 's|"||'g | grep -v '^\.' | sed 's|^artifact/||g' || true
    cat $1 | grep -Eo '.{0,150}\.tar' | grep -Eo 'href.{0,150}' | uniq | cut -d '=' -f2 | sed 's|"||'g | grep -v '^\.' | sed 's|^artifact/||g'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildListArtifacts" "$@"
}

_t4dSrcJenkinsPageBuildGetBuildStatus(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetBuildStatus" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetBuildStatus
#   - Name:
#       _t4dSrcJenkinsPageBuildGetBuildStatus
###
#   - Synopsis:
#       Return Build Status from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    # _t4dDebugLog $pinfo "$1"
    cat $1 | grep -Eo '<h1 class="build-caption page-headline">.{0,200}' | grep -Eo 'tooltip=".{0,20}' | cut -d '"' -f2 | sed 's|&lt||g' | sed 's|&l||g' | sed 's|&||g'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetBuildStatus" "$@"
}

_t4dSrcJenkinsPageBuildGetBuildParamsError(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetBuildStatus" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetBuildStatus
#   - Name:
#       _t4dSrcJenkinsPageBuildGetBuildStatus
###
#   - Synopsis:
#       Return Build Status from given JenkinsHtmlPage
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    cat $1 | grep -Eo 'java.lang.IllegalStateException:.{0,200}' | head -1 | cut -d ':' -f2 | sed 's|&lt||g' | sed 's|&l||g' | sed 's|&||g'
###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetBuildStatus" "$@"
}

_t4dSrcJenkinsPageBuildDownloadArtefact(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
###### _t4dSrcJenkinsPageBuildDownloadArtefact
#   - Name:
#       _t4dSrcJenkinsPageBuildDownloadArtefact
###
#   - Synopsis:
#       Download artefact into current directory
###
###### DOCUMENTATION BLOC #####
########## CODE BLOC ##########

    local _project="$(_t4dJenkinsUtilsParseProjectPath $1)"
    local _branchName="$(echo $2 | sed 's|%252F|/|g')"
    local _branchNameURL="$(echo $_branchName | sed 's|/|%252F|g')"
    local _buildNumber="$3"
    local _ArtefactName="$4"
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dSrcJenkinsPageBuildDownloadArtefact.html"
    # _t4dDebugLog "$pinfo" "$_ArtefactName"
    case $_ArtefactName in
        Log*)
            local _ConsoleHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dModJksInfoGetBuildConsole.html"
            _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/consoleFull $_ConsoleHtmlFile
            local _Revision="$(_t4dSrcJenkinsPageBuildGetProjectSha7 $_ConsoleHtmlFile)"
            local _Title="$(_t4dGetHtmlData $_ConsoleHtmlFile title)"
            local _Date="$(_t4dSrcJenkinsPageBuildGetBuildDate $_ConsoleHtmlFile $_buildNumber)"
            # if [[ "$_ArtefactName" == "LogPassing" ]] || [[ "$_ArtefactName" == "LogFailing" ]]; then
            _t4dPromptSquare "$_Title" "$plcyan"
            
            
            if [[ "$_ArtefactName" == "LogPassing" ]]; then
                local _PipelinePassing="$(_t4dSrcjenkinsHtmlGetSpan $_ConsoleHtmlFile "ITEMS PASSING" | grep -v '^ *$' | grep -v 'ITEMS PASSING' | grep -v 'SCM' | sort)"
                echo $_PipelinePassing
            elif [[ "$_ArtefactName" == "LogFailing" ]]; then
                local _PipelineFailing="$(_t4dSrcjenkinsHtmlGetSpan $_ConsoleHtmlFile "ITEMS FAILING" | grep -v '^ *$' | grep -v 'ITEMS PASSING' | grep -v 'SCM' | sort)"
                echo $_PipelineFailing
            else
                local _ConsoleLogFile="$T4D_PROJECT_LOG_PATH/jenkins/pipeline-node-252.log"
                _t4dSrcjenkinsHtmlGetSpan $_ConsoleHtmlFile "pipeline-node-252" > $_ConsoleLogFile
                # _t4dPromptSquare "$_Title" "$plcyan"
                _t4dDebugLog $plog "Downloading Log - $_ConsoleLogFile"
            fi
        ;;
        *)
            _t4dSrcJenkinsApiGetPage $_project/job/$_branchNameURL/$_buildNumber/artifact/ $_OutPutHtmlFile
            local _Revision="$(_t4dSrcJenkinsPageBuildGetProjectSha7 $_OutPutHtmlFile)"
            local _Title="$(_t4dGetHtmlData $_OutPutHtmlFile title)"
            local _Date="$(_t4dSrcJenkinsPageBuildGetBuildDate $_OutPutHtmlFile $_buildNumber)"
            local _AvailableArtefacts="$(_t4dSrcJenkinsPageBuildListArtifacts $_OutPutHtmlFile)"
            if [[ "$_ArtefactName" == "Log" ]]; then
                _t4dPromptSquare "$_Title" "$plcyan"
                _t4dDebugLog $plog "Downloading Log"
            elif [[ "$_ArtefactName" == "List" ]]; then
                _t4dPromptSquare "$_Title" "$plcyan"
                echo $_AvailableArtefacts
            elif [[ "$(echo $_AvailableArtefacts | grep "$_ArtefactName")" == "$_ArtefactName" ]]; then
                _t4dPromptSquare "$_Title" "$plcyan"
                _t4dPromptObjectEndOfLine "$(_t4dPromptSquare --no-color "Downloading $_ArtefactName")" $plyellow
                _t4dSrcJenkinsApiDownloadItem "$_project/job/$_branchNameURL/$_buildNumber/artifact/$_ArtefactName"
            elif [[ "$_ArtefactName" == "All" ]]; then
                _t4dPromptSquare "$_Title" "$plcyan"
                for _Item in $(echo $_AvailableArtefacts); do
                    _t4dSrcJenkinsApiDownloadItem "$_project/job/$_branchNameURL/$_buildNumber/artifact/$_Item" &> /dev/null && _t4dCheckSucceeded "$_Item"
                done
            else
                _t4dDebugLog $perror "$_ArtefactName seems to be unavailable in download"
            fi
        ;;
    esac

###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildDownloadArtefact" "$@"
}

_t4dSrcJenkinsPageBuildGetBuildDate(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
###### _t4dSrcJenkinsPageBuildGetBuildDate
#   - Name:
#       _t4dSrcJenkinsPageBuildGetBuildDate
###
#   - Synopsis:
#       Return Build Date from given JenkinsHtmlPage 
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _Date="$(cat $1 | grep -A1 "Build #" | tail -1 | sed 's| ||g')"
    local _Day="$(echo $_Date | grep -Eo '.*,[0-9][0-9][0-9][0-9]' | sed 's|(||g')"
    local _Time="$(echo $_Date | grep -Eo '[0-9][0-9][0-9][0-9].*' | sed 's|^[0-9][0-9][0-9][0-9]||g')"
    local _Hour="$(echo $_Time | cut -d ':' -f1)"
    local _Min="$(echo $_Time | cut -d ':' -f2)"
    local _isPM="$(echo $_Time | grep -Eo 'PM')"
    if [[ "$_isPM" == "PM" ]]; then
        if [[ "$_Hour" != "12" ]]; then
            _Hour="$(expr $_Hour + 12 2> /dev/null)"
        fi
    fi
    echo "$_Day ${_Hour}:${_Min}"
###############################
}

_t4dSrcJenkinsPageBuildStop(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
###### _t4dSrcJenkinsPageBuildStop
#   - Name:
#       _t4dSrcJenkinsPageBuildStop
###
#   - Synopsis:
#       Stop last build, today we cant be sure parallel pipe are stopped so we have to do it 3 times
###
###### DOCUMENTATION BLOC #####
########## CODE BLOC ##########
    local _OutPutHtmlFile="$T4D_PROJECT_LOG_PATH/jenkins/_t4dSrcJenkinsPageBuildStop.html"
    local _project="$1"
    local _branchName="$2"
    local _Uuid="$3"
    local _BuildURl="$(_t4dSrcJenkinsPageBuildGetUrl $_project $_branchName $_Uuid stop)"
    local _BuildStatus="unknown"
    local _TestNumber=0

    _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/$_Uuid/" $_OutPutHtmlFile
    _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"

    while [[ "$(echo $_BuildStatus | grep "Started\|In progress")" != "" ]]; do
        _TestNumber="$(expr $_TestNumber + 1)"
        echo -en "\rPlease wait $(_t4dPromptVarWithChar $_TestNumber "" '.' | sed 's|%||g')"
        _t4dSrcJenkinsApiPost "$_BuildURl" $_OutPutHtmlFile
        sleep 1
        _t4dSrcJenkinsApiGetPage "$_project/job/$_branchName/$_Uuid/" $_OutPutHtmlFile
        _BuildStatus="$(_t4dSrcJenkinsPageBuildGetBuildStatus $_OutPutHtmlFile)"
        if [[ ${_TestNumber} -gt 15 ]]; then
            break
        fi
    done
    echo ""
    _t4dDebugLog $plog "STATUS $_Uuid $_BuildStatus"
###############################
}


_t4dSrcJenkinsPageBuildGetUrl(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsPageBuildGetUrl" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsPageBuildGetUrl
#   - Name:
#       _t4dSrcJenkinsPageBuildGetUrl
###
#   - Synopsis:
#       Return Jenkins URL
###
#   - Usage:
#       _t4dSrcJenkinsPageBuildGetUrl <Project> <branchName> <buildNumber> [blue]
#
###
#   - Example:
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    local _branch="$(echo $2 | sed 's|/|%252F|g')"
    if [[ "${4:-none}" == "blue" ]]; then
        echo "$JENKINS_WEB_URL/blue/organizations/jenkins/$(echo $1 | sed 's|/job/|%2F|g')/detail/$(echo $2 | sed 's|%252F|%2F|g')/$3/pipeline"
    elif [[ "${4:-none}" == "artifacts" ]]; then
        echo "$JENKINS_WEB_URL/blue/organizations/jenkins/$1/detail/$(echo $2 | sed 's|%252F|%2F|g')/$3/artifacts"
    elif [[ "${4:-none}" == "artifact" ]]; then
        echo "$JENKINS_WEB_URL/job/$1/job/$2/$3/artifact/$5"
    elif [[ "${4:-none}" == "stop" ]]; then
        echo "$JENKINS_WEB_URL/job/$1/job/$_branch/$3/stop"
    else
        echo "$JENKINS_WEB_URL/$1/job/$2/$3/"
    fi

###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsPageBuildGetUrl" "$@"
}



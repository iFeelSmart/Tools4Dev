_t4dSrcJenkinsUtilsParseProject(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsUtilsParseProject" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsUtilsParseProject
#   - Name:
#       _t4dSrcJenkinsUtilsParseProject
###
#   - Synopsis:
#       Parse Current Project/BranchName in JenkinsProject related project.
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########
    if [[ "$WS_JENKINS_PROJECT_NAME" != "" ]]; then
        _t4dJenkinsUtilsParseProjectPath $WS_JENKINS_PROJECT_NAME
    else
        _t4dDebugLog $perror "No Jenkins Configuration for your project"
        _t4dDebugLog $pinfo  "you can define _t4dSrcJenkinsUtilsParseProject function in your project to add your Jenkins Configuration"
        return 1
    fi
    

###############################
}

_t4dSrcJenkinsUtilsGenerateUrl(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsUtilsGenerateUrl
#   - Name:
#       _t4dSrcJenkinsUtilsGenerateUrl
###
#   - Synopsis:
#       return web url from given branch / project / repo
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Branch="${1:-$WS_GIT_BRANCH}"
    local _Repo="${2:-$(_t4dSrcGitInfoRepoName)}"
    local _Key="${3:-$(_t4dSrcGitInfoProjectKEY)}"

    local _branchName="$(echo $_Branch | sed 's|/|%252F|g')"

    local _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} ${_branchName})"
    echo "$JENKINS_WEB_URL/job/$_project/job/$_branchName"
###############################
}

_t4dJenkinsUtilsParseProjectPath(){
    local _Project="$(basename $1 2> /dev/null)"
    local _DirName="$(dirname $1 2> /dev/null | sed 's|/job$||g' | sed 's|/job/|/|g' | sed 's|/|/job/|g' | sed 's|$|/job|g'| sed 's|job/branches/job|branches|g')"
    if [[ "$_DirName" != "./job" ]]; then
        _Project="$_DirName/$_Project"
    fi
    echo "$_Project"
}

_t4dJenkinsUtilsConvertArg(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dJenkinsUtilsConvertArg
#   - Name:
#       _t4dJenkinsUtilsConvertArg
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _branchName _project _buildId
    case $# in 
    0)
        _branchName="$(_t4dSrcGitInfoBranch)"
        _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
    ;;
    1)
        _branchName="$1"
        _project="$(_t4dSrcJenkinsUtilsParseProject ${WS_JENKINS_PROJECT_NAME} $_branchName)"
    ;;
    2)

        _branchName="$2"
        _project="$(_t4dJenkinsUtilsParseProjectPath $1)"
    ;;
    3)
        _branchName="$2"
        _project="$(_t4dJenkinsUtilsParseProjectPath $1)"
        _buildId="$3"
    ;;
    *)
        _t4dDebugLog $perror "_t4dJenkinsUtilsConvertArg, too many argument >$@< $# exceed limit of 3"
        return $_t4dErrorCode
    ;;
    esac
    echo "$_project|$_branchName|${_buildId:-none}"

###############################
}




_t4dSrcJenkinsUtilsParseBuildStatus(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcJenkinsUtilsParseBuildStatus" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcJenkinsUtilsParseBuildStatus
#   - Name:
#       _t4dSrcJenkinsUtilsParseBuildStatus
###
#   - Synopsis:
#       Convert output buildStatus into colored statement using BranchName
###
#   - Usage:
#       _t4dSrcJenkinsUtilsParseBuildStatus <BuildStatus> <BranchName>
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    local _Branch=$2
    local _color="$pigrey"
    local _result="$1"
    case $_result in
        *job-status-red*)
            _color="$plred"
        ;;
        *job-status-blue*)
            _color="$plgreen"
        ;;
        *job-status-abort*)
            _color="$plgrey"
        ;;
        *job-status-yellow*)
            _color="$plyellow"
        ;;
    esac
    if [[ "$(echo $_result | grep '\-anime')" != ""  ]]; then
        _color="-> $_color"
    fi
    echo "${_color}${_Branch}${pstd}"

###############################
_t4dDebugInfoEnd "_t4dSrcJenkinsUtilsParseBuildStatus" "$@"
}
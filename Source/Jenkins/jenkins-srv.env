_t4dSrcJenkinsSrvExec(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvExec
#   - Name:
#       _t4dSrcJenkinsSrvExec
###
#   - Synopsis:
#       exec command on given server
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Server="$(echo $1| sed 's|http.*//||g' | cut -d ':' -f1)"
    local _ServerIp="$(_t4dSystemGetIp $_Server)"
    local _User="$2"
    local _Command="$(echo ${@:4} | sed 's|\*|\\*|g')"
    local _Tools4DevPath="${3}"
    # _t4dDebugLog $plog "$_Command"
    if [[ "$(_t4dSystemGetIp | grep "$_ServerIp")" != "" ]]; then
        _t4dDebugLog $plog "Local Server Detected, running locally"
        $(echo ${_Command})
    else
        _t4dSrcFileSystemSshT4dOutput ${_User}@${_Server} ${_Tools4DevPath} ${_Command}
    fi

###############################
}

_t4dSrcJenkinsSrvGetConfigFile(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvGetConfigFile
#   - Name:
#       _t4dSrcJenkinsSrvGetConfigFile
###
#   - Synopsis:
#       get config.xml file content of given path if exist
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Path="$(echo $1 | sed 's|/config.xml$||g')"
    if [[ -e "$_Path/config.xml" ]]; then
        cat $_Path/config.xml
    else
        echo ""
    fi

###############################
}

_t4dSrcJenkinsSrvCheckAccess(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvCheckAccess
#   - Name:
#       _t4dSrcJenkinsSrvCheckAccess
###
#   - Synopsis:
#       check server access
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    # local _t4dErrorCode=1
    local _Server="$2"
    local _User="$1"
    local _Output="$(_t4dSrcJenkinsSrvExec $_Server $_User "echo true" 2> /dev/null)"
    if [[ "$_Output" == "true" ]]; then
        return 0
    else
        _t4dDebugLog $perror "can't connect to $_Server using $_User"
    fi

###############################
}

_t4dSrcJenkinsSrvSearchConfigFiles(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvSearchConfigFiles
#   - Name:
#       _t4dSrcJenkinsSrvSearchConfigFiles
###
#   - Synopsis:
#       List all configs of given jenkins path file except branches
###
#   - Usage:
#       _t4dSrcJenkinsSrvSearchConfigFiles <JenkinsRoot> [RelativePath|RelativeConfigFile]
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _RootPath="/var/lib/jenkins"
    local _Depth=""
    local _Recursive=""
    if [[ "$1" == "-root" ]]; then
        _RootPath="${2}"
        shift
        shift
    fi

    local _RelativePath="$(echo ${1} | sed 's|^/||g')"
    if [[ "$_RelativePath" == "" ]] || [[ "$_RelativePath" == "/" ]]; then
        _t4dDebugLog $pwarning "Default path selected, might take a while to search all config files"
        _RelativePath=""
    fi

    local _JobPath="${_RootPath}/jobs/${_RelativePath}"

    if [[ "$(echo $_RelativePath | grep 'config.xml$')" != "" ]] && [[ -e "$_JobPath" ]] ; then
        echo "$_JobPath"
    elif [[ -e "${_RootPath}/config.xml" ]] && [[ -e "${_JobPath}" ]]; then
        if [[ "$(echo $_JobPath | grep "/branches/")" == "" ]]; then
            find "${_JobPath}" -name 'config.xml' ! -path '*/branches/*' | sort -n
        else
            find "${_JobPath}" -maxdepth 1 -name 'config.xml' | sort -n
        fi
        
    else
        _t4dDebugLog $perror "_t4dSrcJenkinsSrvSearchConfigFiles - Could not find Jenkins config files in >${_JobPath}<"
        return $_t4dErrorCode
    fi
    

###############################
}

_t4dSrcJenkinsSrvCreateJob(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvCreateJob
#   - Name:
#       _t4dSrcJenkinsSrvCreateJob
###
#   - Synopsis:
#       create jenkins job using baseJob config file
###
#   - Usage:
#       * _t4dSrcJenkinsSrvCreateJob <path> <baseConfig> <gitSource> <libSource> [gitFilter] [jenkinsFile]
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _t4dErrorMsg=""
    local _Path="$1"
    local _Uuid="$(basename $_Path)"
    local _JenkinsBaseJob="${2:-Error}"
    local _GitSource="${3:-Error}"
    local _LibSource="${4:-Error}"
    local _GitContentFilter="${5:-Default}"
    local _JenkinsFile="${6:-Jenkinsfile}"

    if [[ "$_GitContentFilter" == "Default" ]]; then
        _GitContentFilter=".*"
    fi
    if [[ ! -e "$_JenkinsBaseJob" ]]; then
        _t4dErrorMsg="Base job does not exist >$_JenkinsBaseJob<"
    fi
    if [[ "$_GitSource" == "Error" ]]; then
        _t4dErrorMsg="Wrong Git source >$_GitSource<"
    fi
    if [[ "$_LibSource" == "Error" ]]; then
        _t4dErrorMsg="Wrong Lib source >$_LibSource<"
    fi


    if [[ "$_t4dErrorMsg" != "" ]]; then
        _t4dDebugLog $perror "_t4dSrcJenkinsSrvCreateJob - $_t4dErrorMsg"
        return $_t4dErrorCode
    fi

    if [[ ! -d "$_Path" ]] ; then
        mkdir -p "$_Path"
        cat $_JenkinsBaseJob | sed "s|JENKINSFILE|$_JenkinsFile|g" \
                                            | sed "s|GIT_SOURCE|$_GitSource|g" \
                                            | sed "s|LIB_SOURCE|$_LibSource|g" \
                                            | sed "s%GIT_CONTENT_FILTER%$_GitContentFilter%g" \
                                            | sed "s%GIT_BRANCH_FILTER%$_GitContentFilter%g" > "$_Path/config.xml"
        echo "$_Uuid - Last Updated $(date)" > $_Path/source.properties
        _t4dSrcJenkinsSrvUpdateFolderRightsForJenkins $_Path

        _t4dCheckSucceeded "Job $_Path"
        if [[ "$WS_VERBOSE" != "1" ]]; then
            _t4dCheckInfo "    - $_GitSource"
            _t4dCheckInfo "    - $_GitContentFilter"
            _t4dCheckInfo "    - $_JenkinsFile"
        fi
    else
        if [[ ! -e "$_Path/config.xml" ]]; then
            _t4dCheckWarning "Folder $_Path Already Exist but config.xml file can't be found"
        else
            _t4dCheckInfo "Job $_Path Already Exist"
        fi
        
    fi
    
###############################
}

_t4dSrcJenkinsSrvCreateFolder(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJenkinsSrvCreateFolder
#   - Name:
#       _t4dSrcJenkinsSrvCreateFolder
###
#   - Synopsis:
#       create folder config file
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Folder="$1"
    local _JenkinsFolderBase="${2}"

    if [[ ! -e "$_Folder/config.xml" ]]; then
        mkdir -p "${_Folder}/jobs"
        if [[ -e "$_JenkinsFolderBase" ]]; then
            cat $_JenkinsFolderBase > "$_Folder/config.xml"
            _t4dSrcJenkinsSrvUpdateFolderRightsForJenkins $_Folder
            _t4dCheckInfo "Folder Created $_Folder"
        else
            _t4dDebugLog $perror "JenkinsFolderBase >$_JenkinsFolderBase< does not exist"
            return $_t4dErrorCode
        fi
    else
        _t4dCheckSucceeded "$_Folder Already Exist"
    fi
    

###############################
}

_t4dSrcJenkinsSrvUpdateFolderRightsForJenkins(){
# Generated From $Tools4Dev_PATH/Templates/function-wks.env
# v1.5.0
###### _t4dSrcJenkinsSrvUpdateFolderRightsForJenkins
#   - Name :
#       _t4dSrcJenkinsSrvUpdateFolderRightsForJenkins
###
#   - Synopsis :
#       jenkins jobs or foler has to be owned by jenkins user and group
###
#   - Usage :
#       _t4dSrcJenkinsSrvUpdateFolderRightsForJenkins <Path>
#
###
###### DOCUMENTATION BLOC #####
########## CODE BLOC ##########
    local _Path=$1
    local _Owner="${2:-jenkins}"
    local _OwnerGroup="${3:-jenkins}"
    if [[ "$USER" == "root" ]]; then
        chown -R $_Owner:$_OwnerGroup $_Path
    fi
###############################
}

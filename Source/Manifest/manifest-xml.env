_t4dManifestXmlGetLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlGetLine
#   - Name:
#       _t4dManifestXmlGetLine
###
#   - Synopsis:
#       Get line in manifest xml file or in input
###
#   - Usage:
#       * _t4dManifestXmlGetLine <type> <name> <value> 
#
###
#   - Example:
#       * _t4dManifestXmlGetLine default name test    = find line when type is defaut and name time
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

    local _type=$1
    local _nameType=$2
    local _name=$3
    local _xmlVar="$(_t4dManifestXmlFileInVar $4)"

    echo "$_xmlVar" | grep "<${_type} " | grep " $_nameType=\"${_name}\"" 

###############################
}

_t4dManifestXmlGetData(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlGetData
#   - Name:
#       _t4dManifestXmlGetData
###
#   - Synopsis:
#       Get data in manifest xml file or in input
###
#   - Example:
#       * _t4dManifestXmlGetData <type> <typeName> <Name> <Data> [ManifestPath]              = Find data in xml file
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

    local _type=$1
    local _nameType=$2
    local _name=$3
    local _attribute=$4
    local _xmlVar="$(_t4dManifestXmlFileInVar $5)"

    echo  "$_xmlVar" | grep "<${_type} " | grep " $_nameType=\"${_name}\"" | grep -Eo "${_attribute}=.*" | cut -d '"' -f2

###############################
}

_t4dManifestXmlGetMarker(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlGetMarker
#   - Name:
#       _t4dManifestXmlGetMarker
###
#   - Synopsis:
#       Get Marker in manifest xml file or in input
###
#   - Example:
#       * _t4dManifestXmlGetMarker <type> <marker> <file>           = Find each type specified in first arg in xml manifest file
#       * _t4dManifestXmlGetMarker <type> <marker> "<var>"             = {Find each type specified in first arg in xml manifest var
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

    local _type=$1
    local _marker=$2
    local _xmlVar="$(_t4dManifestXmlFileInVar $3)"

    echo "$_xmlVar" | grep "<${_type} " | grep -Eo " ${_marker}=.*" | cut -d '"' -f2

###############################
}

_t4dManifestXmlOpen(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlOpen
#   - Name:
#       _t4dManifestXmlOpen
###
#   - Synopsis:
#       Create or open for edit xml manifest
###
#   - Example:
#       * _t4dManifestXmlOpen -o file              = write start xml manifest in file
#       * _t4dManifestXmlOpen                      = echo start xml manifest
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"

    local _StartL1='<?xml version="1.0" encoding="UTF-8"?>'
    local _StartL2="<manifest>"

    if [[ "$_File" != "" ]]; then
        local _Folder="$(dirname $_File)"
        mkdir -p $_Folder
        if [[ ! -e $_File ]] ;then
            echo $_StartL1 > $_File
            echo $_StartL2 >> $_File
        else 
            local _res=$(cat $_File | grep -v "</manifest>")
            echo  $_res > $_File
        fi  
    else 
        echo $_StartL1
        echo $_StartL2
    fi

###############################
}

_t4dManifestXmlClose(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlClose
#   - Name:
#       _t4dManifestXmlClose
###
#   - Synopsis:
#       add  manifest xml end file
###
#   - Example:
#       * _t4dManifestXmlClose -o file            = add end to xml manifest end file and close file
#       * _t4dManifestXmlClose                    = echo xml end manifest 
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"

    local _End="</manifest>"

   if [[ "$_File" != "" ]]; then
       
        if [[ ! -e $_File ]] ;then
            _t4dDebugLog $plog "_t4dManifestXmlClose - File >$_File< does not exist"
            return $_t4dErrorCode
        else 
            echo $_End >> $_File
        fi 
    else 
        echo $_End
    fi

###############################
}


_t4dManifestXmlSetLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlSetLine
#   - Name:
#       _t4dManifestXmlSetLine
###
#   - Synopsis:
#       add line in xml manifest
###
#   - Example:
#       _t4dManifestXmlSetLine -o File -t provider "type=kvm" "time=$(date +%s)" 
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    local _t4dErrorCode=1
    local _Out="null"
    local _Type="null"
    local _Data="null"
    local _Res=""
    local _Arg=""
    local _check="null"


    while [[ "$@" != "" ]]; do
        case "$1" in
            -out|-o)
                _Out="$2"
                shift
            ;;
            -type|-t)
                if [[ "$_check" == "null" ]] ;then
                    _Type="$2"
                    _Res="<${_Type}${_Res}"
                    _check="1"
                else
                    _t4dDebugLog $perror "too many types"
                    return $_t4dErrorCode
                fi
                shift
            ;;
            *)
                _Arg="$1"
                local _Marker=$(echo $_Arg | cut -d"=" -f1)
                local _Data=$(echo $_Arg | cut -d"=" -f2)
                _Res="${_Res} $_Marker=\"$_Data\""
            ;;
        esac
        shift
    done

    _Res="$_Res>"

    if [[ "$_Type" == "null" ]]; then
        _t4dDebugLog $perror "Empty type"
        return $_t4dErrorCode
    fi


    if [[ "$_Out" == "null" ]]; then
        echo "$_Res"
    else
        echo "$_Res" >> $_Out
    fi
    

###############################
}

_t4dManifestXmlFileInVar(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dManifestXmlFileInVar
#   - Name:
#       _t4dManifestXmlFileInVar
###
#   - Synopsis:
#       change file in var if il file
###
#   - Example:
#       * _t4dManifestXmlCheckFile test.xml             = change file in var
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1

    local _Content="$1"

    if [[ -e "$_Content" ]]; then
        _Content="$(cat "$_Content")"
    elif [[ -e "${_Content}.xml" ]]; then
        _Content="$(cat "${_Content}.xml")"
    fi

    echo "$_Content"

###############################
}

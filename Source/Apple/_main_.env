source $T4D_SOURCE_PATH/Apple/apple-api.env 

#Enable Two Factor Authen ? 
#Always Allow from local computer to enable signature
#Make sure provisionning profile is here and valid, get his file name ?

#xcodebuild -exportArchive -archivePath test.xcarchive -allowProvisioningUpdates -exportPath $PWD -exportOptionsPlist test.plist
# /Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Support/altool 



#Test.plist
# <?xml version="1.0" encoding="UTF-8"?>
# <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
# <plist version="1.0">
# <dict>
#     <key>method</key>
#     <string>app-store</string>
#     <key>provisioningProfiles</key>
#     <dict>
#         <key>com.example.project.test</key>
#         <string>XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX.mobileprovision</string>
#     </dict>
# </dict>
# </plist>


_t4dSrcAppleUploadOnTestFlight(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcAppleUploadOnTestFlight
#   - Name:
#       _t4dSrcAppleUploadOnTestFlight
###
#   - Synopsis:
#       Upload ipa on test flight using altool
###
#   - Usage:
#       _t4dSrcAppleUploadOnTestFlight <FileName> --username "<AppleId>" --password "<Password>"
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    if [[ -e "$_File" ]]; then
        /Applications/Xcode.app/Contents/Developer/usr/bin/altool --upload-package --type ios --file $_File ${@:2}
    elif [[ "$(ls $(dirname $_File) | grep 'ipa$' | wc -l | tr -d ' ')" == "1" ]]; then
        local _ipaFile="$(dirname $_File)/$(ls $(dirname $_File) | grep 'ipa$')"
        _t4dDebugLog $pwarning "Folder does not contains $_File, but ${_ipaFile} file found"
        /Applications/Xcode.app/Contents/Developer/usr/bin/altool --upload-package --type ios --file $_ipaFile ${@:2}
    else
        _t4dDebugLog $perror "File $_File does not exist"
        ls $(dirname $_File)
        return 1
    fi

###############################
}

_t4sSrcApplePrintPlistForUpload(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4sSrcApplePrintPlistForUpload
#   - Name:
#       _t4sSrcApplePrintPlistForUpload
###
#   - Synopsis:
#       print plist file content mandatory to allow upload build on testflight
###
#   - Example:
#       * _wksUtilsPrintPlistFile "com.example.test" "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX.mobileprovision" > test.plist             = Print plist content into test.plist
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _PackageName="$1"
    local _ProvisionningProfile="$2"
    local _Bitcode="${3:-true}"
    local _TeamID="${4}"
    local _SigningCertificate="${5}"


    echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
    echo "<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">"
    echo "<plist version=\"1.0\">"
    echo "<dict>"
    if [[ "$_TeamID" != "" ]]; then
        echo "    <key>teamID</key>"
        echo "    <string>${_TeamID}</string>"
    fi
    echo "    <key>method</key>"
    echo "    <string>app-store</string>"
    echo "    <key>provisioningProfiles</key>"
    echo "    <dict>"
    echo "        <key>$_PackageName</key>"
    echo "        <string>$_ProvisionningProfile</string>"
    echo "    </dict>"
    if [[ "$_SigningCertificate" != "" ]]; then
        echo "    <key>signingCertificate</key>"
        echo "    <string>$_SigningCertificate</string>"
        echo "    <key>signingStyle</key>"
        echo "    <string>manual</string>"
    fi
    echo "    <key>uploadBitcode</key>"
	echo "        <${_Bitcode}/>"
	echo "    <key>compileBitcode</key>"
	echo "        <${_Bitcode}/>"
	echo "    <key>uploadSymbols</key>"
	echo "        <true/>"
    echo "</dict>"
    echo "</plist>"

###############################
}

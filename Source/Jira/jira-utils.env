_t4dSrcJiraTestURL(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dSrcJiraTestURL
#   - Name:
#       _t4dSrcJiraTestURL
###
#   - Synopsis:
#       test _t4dJiraBaseURL reachability
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    if [[ "${_t4dJiraBaseURL}" == "" ]]; then
        echo "Var _t4dJiraBaseURL containing Jira URL is not set"
        return 2
    fi

    #   combine this with a temp file to store time of last check to avoid double request for every request (once every min for example)
    local _output=$(_t4dJiraAPIGetMainPage)
    #assume url has http part since necessary for api calls

    if [[ "$_output" != "" ]]; then
        echo "${_t4dJiraBaseURL} is unreachable, are you connected to internet ?"
        return 1
    fi

    return 0

###############################
}

_t4dSrcJiraGenerateJsonLogin(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcJiraGenerateJsonLogin
#   - Name:
#       _t4dSrcJiraGenerateJsonLogin
###
#   - Synopsis:
#       generate json file to authentification
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
cat << EOF
{
    "username":"$1",
    "password":"$2"
}
EOF
###############################
}


_t4dSrcJiraGetUsers(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
######_t4dSrcJiraGetUsers
#   - Name:
#      _t4dSrcJiraGetUsers
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local OutPutJsonFile="$T4D_PROJECT_LOG_PATH/_t4dSrcJiraGetUsers.json"
    _t4dJiraAPIGetv2 users $OutPutJsonFile
    _t4dGetJsonData $OutPutJsonFile '.[] | "\(.accountId)|\(.emailAddress)|\(.displayName)"'  | grep -v 'null'
    
###############################
}

_t4dSrcJiraSetPassword(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcJiraSetPassword
#   - Name:
#       _t4dSrcJiraSetPassword
###
#   - Synopsis:
#       Function that need to be overrided to be able to set JiraPassword
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    _t4dDebugLog $pwarning "Hi there, this function is a placeHolder. You might need to declare this functions in your $Tools4Dev_PATH/.$USER.env file in order to be able to set Jirapassword"
    _t4dDebugLog $pinfo "for OSX user, you can also add keychain password JiraPassword"
    _t4dDebugLog $pinfo "then add JIRA_USER_AND_PASSWORD=\"\<user\>:\$(_t4dGetKeychainPassword JiraPassword)\" in you file ${T4D_GIT_FIRSTNAME}${T4D_GIT_LASTNAME}.env"
    #OSX
    #JIRA_USER_AND_PASSWORD="<user>:$(_t4dGetKeychainPassword JiraPassword)"

###############################
}

_t4dSrcJiraCheckCredentials(){
# Generated From $Tools4Dev_PATH/utils/templates.env
# v1.5.0
###### _t4dSrcJiraCheckCredentials
#   - Name:
#       _t4dSrcJiraCheckCredentials
###
#   - Synopsis:
#       check credentials variable, or default to bitbucket's
###
#   - Note :
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########

    if [[ "${JIRA_USER_AND_PASSWORD}" == "" ]]; then
        _t4dDebugLog $perror "No credentials set for Jira to use, please define JIRA_USER_AND_PASSWORD"
        return 1
    elif [[ "${JIRA_USER_AND_PASSWORD}" == "_t4dSrcJiraSetPassword" ]]; then
        _t4dDebugLog $perror "_t4dSrcJiraSetPassword has not been run yet to setup your access to Jira"
        return 1
    fi

    return 0

###############################
}

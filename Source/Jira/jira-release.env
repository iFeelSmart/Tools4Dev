

_t4dJiraRelease(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dJiraRelease
#   - Name:
#       _t4dJiraRelease
###
#   - Synopsis:
#       get release if exist, if not and -f, it will create it
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _OuputjsonFile="$T4D_PROJECT_LOG_PATH/jic/_t4dJiraReleaseGet.json"
    local _Action="$1"
    _t4dJiraAPIGetv2 project/${WS_TICKETING_PREFIX}/version | _t4dConvertToJson $_OuputjsonFile
    local _AvailableReleases="$(cat $_OuputjsonFile | grep '"name":' | cut -d '"' -f4)"
    case $_Action in
        create)
            if [[ "$(echo $_AvailableReleases | grep "^${2}$")" != "" ]]; then
                _t4dCheckSucceeded "Release $2 already exist"
            elif [[ "$2" != "" ]]; then
                _t4dCheckInfo "Creating $2"
                _t4dJiraAPIPostv2 version "$(_t4dJiraReleaseJson $WS_SRC_VERSION)"
            else
                _t4dDebugLog $perror "Could not create release named >$2<"
            fi
        ;;
        get)
            local _SearchRelease="$(echo $_AvailableReleases | grep "${2:-null}")"
            if [[ "$_SearchRelease" != "" ]]; then
                echo "$_SearchRelease"
            else
                echo "$_AvailableReleases"
            fi
        ;;
        *)
            _t4dDebugLog $perror "_t4dJiraRelease Unknown action $_Action"
        ;;
    esac

###############################
}

_t4dJiraReleaseJson(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dJiraReleaseJson
#   - Name:
#       _t4dJiraReleaseJson
###
#   - Synopsis:
#       generate json release file for jira api
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _CurrentDate="$(date '+%Y-%m-%d')"
    local _Name="${1:-$WS_NEXT_RELEASE}"
    local _Project="${2:-$WS_TICKETING_PREFIX}"
    local _ID="${3}"
    if [[ "$_Name" == "" ]]; then
        _t4dDebugLog $perror "_t4dJiraReleaseJson - Release Name empty, please define WS_NEXT_RELEASE"
        return $_t4dErrorCode
    elif [[ "$_Project" == "" ]]; then
        _t4dDebugLog $perror "_t4dJiraReleaseJson - ProjectKey empty, please define WS_TICKETING_PREFIX variable to match your jira project"
        return $_t4dErrorCode
    elif [[ "$_ID" == "" ]]; then
        _ID="$(_t4dJiraInfoGetProjectKey $_Project)"
    fi

cat << EOF
{
    "description": "Release : ${_Project} $_CurrentDate",
    "name": "$_Name",
    "archived": false,
    "released": true,
    "startDate": "${_CurrentDate}",
    "releaseDate": "${_CurrentDate}",
    "project": "${_Project}",
    "projectId": "${_ID}"
}
EOF

###############################
}


_t4dJiraReleaseAddIssue(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dJiraReleaseAddIssue
#   - Name:
#       _t4dJiraReleaseAddIssue
###
#   - Synopsis:
#       update issue fixVersion to match given release
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Issues="$2"
    local _Release="$1"
    for _Ticket in $(echo $_Issues); do
        _t4dCheckInfo "$_Ticket"
        _t4dJiraAPIPutv2 issue/$_Ticket "$(_t4dJiraReleaseLinkIssueJson $_Release)"
    done

###############################
}

_t4dJiraReleaseLinkIssueJson(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dJiraReleaseLinkIssueJson
#   - Name:
#       _t4dJiraReleaseLinkIssueJson
###
#   - Synopsis:
#       generate json to link issue to release
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _ReleaseName="$1"

cat << EOF
{
    "fields":{
        "fixVersions":[{"name":"$_ReleaseName"}]
    }
}
EOF
###############################
}

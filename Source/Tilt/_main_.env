source $T4D_SOURCE_PATH/Tilt/tilt-api.env

_t4dSrcTiltCheckServer(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcTiltServerStatus
#   - Name:
#       _t4dSrcTiltServerStatus
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Get="$(tilt get tiltfile 2>&1 )"
    if [[ "$(echo $_Get | grep "^NAME")" != "" ]]; then
        echo $_Get | grep "^NAME" | head -1
    else
        echo $_Get
    fi

###############################
}

_t4dSrcTiltWaitForTiltfileLoaded(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcTiltWaitForTiltfileLoaded
#   - Name:
#       _t4dSrcTiltWaitForTiltfileLoaded
###
#   - Synopsis:
#       check tilt logs to find Sucessfull >Titlefile Loaded<
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Timeout="$1"
    local _Error="true"
    for _time in $(seq 1 $_Timeout); do
        sleep 1
        _t4dPromptInProgress "Please wait $(_t4dPromptVarFillWithChar "." "$_time")"
        local _Res="$(tilt logs 2> /dev/null | grep 'Successfully loaded Tiltfile')"
        if [[ "$_Res" != "" ]]; then
            _Error=""
            _t4dPromptInProgress ""
            _t4dPromptSquare "Tiltfile Loaded in $(echo $_Res | grep -Eo "[0-9]*\.[0-9]*") - $WS_TILT_DEFAULT_URL)" $plgreen
            break
        fi
    done
    if [[ "$_Error" == "true" ]]; then
        _t4dDebugLog $pwarning "Tiltfile not loaded"
        tilt logs
        return $_t4dErrorCode
    fi

###############################
}

_t4dSrcTiltConfigure(){
# Generated From Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcTiltConfigure
#   - Name:
#       _t4dSrcTiltConfigure
###
#   - Synopsis:
#       description
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    if [[ "$1" == "context" ]]; then
        local _KubeContext="${2:-$WS_TILT_KUBE_CONTEXT}"
        if [[ "$_KubeContext" != "" ]]; then
            local _CurrentKubeContext="$(kubectx -c)"

            if [[ "$_CurrentKubeContext" != "" ]] && [[ "$_KubeContext" != "$_CurrentKubeContext" ]]; then
                local _DefaultKubeContext="$(echo $_KubeContext | head -1)"
                _t4dDebugLog $plog "kubectx $_DefaultKubeContext"
                kubectx $_DefaultKubeContext
            fi
        else
            _t4dDebugLog $perror "WS_TILT_KUBE_CONTEXT seem to be empty >$2<"
            return $_t4dErrorCode
        fi
    elif [[ "$1" == "namespace" ]]; then
        local _KubeNamespace="${2:-$WS_PERSONAL_NAMESPACE}"
        if [[ "$_KubeNamespace" != "" ]]; then
            if [[ "$(kubectl get namespace | grep "^$_KubeNamespace")" == "" ]]; then
                _t4dDebugLog $plog "Creating namespace $_KubeNamespace"
                kubectl create namespace $_KubeNamespace
            else
                if [[ "$(kubens -c)" != "$_KubeNamespace" ]]; then
                    kubens $_KubeNamespace
                fi
            fi
        else
            _t4dDebugLog $perror "WS_PERSONAL_NAMESPACE seem to be empty, >$_KubeNamespace<"
            return $_t4dErrorCode
        fi
    fi
    

###############################
}

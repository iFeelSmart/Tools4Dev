

_t4dSrcInventoryRulesDataCheck(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcInventoryRulesDataCheck
#   - Name:
#       _t4dSrcInventoryRulesDataCheck
###
#   - Synopsis:
#       check data rules for every type of data
###
#   - Example:
#       * {Example1}              = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    # _t4dDebugLog $plog "${@}"
    if [[ $# -gt 0 ]]; then
        case "$1" in
            macAddress)
                _t4dSrcInventoryRulesParseMacAddress "${@:2}"
            ;;
            ipv4)
                # _t4dDebugLog $plog "${@:2}"
                _t4dSrcInventoryRulesParseIpv4 "${@:2}"
            ;;
            option)
                _t4dSrcInventoryRulesParseOption "${2}" "${3}"
            ;;
            *)
                echo ${@:2}
            ;;
        esac
        shift
    fi
###############################
}

_t4dSrcInventoryRulesParseOption(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcInventoryRulesParseOption
#   - Name:
#       _t4dSrcInventoryRulesParseOption
###
#   - Synopsis:
#       allow user to define custom available data for an element
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Option="$1"
    local _AvailableOptions="$(echo $2 | sed 's/^/|/g' | sed 's/$/|/g')"

    if [[ "$(echo $_AvailableOptions | grep -Eo "\|${_Option:-null}\|")" != "" ]]; then
        echo $_Option
    fi

###############################
}


_t4dSrcInventoryRulesParseMacAddress(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcInventoryRulesParseMacAddress
#   - Name:
#       _t4dSrcInventoryRulesParseMacAddress
###
#   - Synopsis:
#       Parse given MacAddress to convert it in a good format like XX:XX:XX:XX:XX
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Data="$1"
    local _MacAddress="$(echo "$_Data" | sed 's|:||g' | sed 's| ||g' | sed 's|-||g' | sed 's|\.||g' | tr '[a-z]' '[A-Z]')"
    local _AlphaNumeric="$(echo $_MacAddress | grep -Eo '[0-9A-F]' | wc -l | tr -d ' ')"
    if [[ "${#_MacAddress}" == "12" ]] && [[ "${_AlphaNumeric}" == "12" ]]; then
        echo "${_MacAddress:0:2}:${_MacAddress:2:2}:${_MacAddress:4:2}:${_MacAddress:6:2}:${_MacAddress:8:2}:${_MacAddress:10:2}"
    else
        _t4dDebugLog $plog "$_MacAddress ${#_MacAddress} ${_AlphaNumeric} "
        _t4dDebugLog $perror "[$_t4dErrorCode] Could not parse >${_Data}< as a MacAddress, try using XX:XX:XX:XX:XX format with hexa char only"
        return $_t4dErrorCode
    fi

###############################
}


_t4dSrcInventoryRulesParseIpv4(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.7.0
###### _t4dSrcInventoryRulesParseIpv4
#   - Name:
#       _t4dSrcInventoryRulesParseIpv4
###
#   - Synopsis:
#       Check IP value
###
#   - Example:
#       _t4dSrcInventoryRulesParseIpv4 192.168.1.2          = return IP
#       _t4dSrcInventoryRulesParseIpv4 192.168.1            = return empty + log error
#       _t4dSrcInventoryRulesParseIpv4 192.168.1.abc        = return empty + log error
#       _t4dSrcInventoryRulesParseIpv4 1230.168.1.2         = return empty + log error
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Ip="$1"
    local _Digits=0
    for i in $(echo $_Ip | sed 's|\.| |'g); do
        _Digits=$(expr $_Digits + 1 )
        if [[ "$(echo $i | grep -Eo '^[0-9]+$')" != "$i" ]]; then
            _t4dDebugLog $perror "non numeric character found"
            return $_t4dErrorCode
        elif [[ $i -gt 255 ]]; then
            _t4dDebugLog $perror "at least one number seems to be greater than 255"
            return $_t4dErrorCode
        fi
    done
    if [[ $_Digits != "4" ]]; then
        _t4dDebugLog $perror "IP address seems to not contains 4 numbers"
        return $_t4dErrorCode
    else
        echo "$_Ip"
        return 0
    fi

###############################
}

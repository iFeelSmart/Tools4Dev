_t4dSrcAndroidImportNDK(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.5.0
###### _t4dFunctionName
#   - Name:
#       _t4dFunctionName
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Example:
#       _t4dSrcAndroidImportNDK "r17c"
###
###### DOCUMENTATION BLOC #####

    local filterVersion="$1"
    local awsPath="$T4D_ANDROID_AMAZON_S3_ROOT/NDK/"
    local availableFiles="$($WS_AWS_CLI_PATH s3 ls $awsPath)"
    local result="$(echo $availableFiles | grep "$filterVersion" | grep -Eo 'android-ndk.*' | grep "$T4D_ANDROID_OS_TYPE" )"
    local count="$(echo $result | wc -l | sed 's| ||g')"
    local ndkInstallPath="$T4D_ANDROID_OPT_ROOT_PATH/$(echo $result | sed 's|-darwin-x86_64.zip||g' | sed 's|-linux-x86_64.zip||g')"


    if [[ "$count" == "1" ]]; then
        if [[ -d "$ndkInstallPath" ]]; then
            _t4dCheckSucceeded "$ndkInstallPath Already exists"
        else
            _t4dSrcAwsImportFile "$T4D_ANDROID_AMAZON_S3_ROOT/NDK" "$T4D_ANDROID_ROOT/NDK" "$result"
        fi
    elif [[ "$result" == "" ]]; then
        echo "NotFound"
    else
        _t4dDebugLog $pwarning "More than 1 result, please be more specific"
        echo "  Available NDK"
        echo "$result" | sed 's|^|    * |g'
        return 1
    fi

    if [[ -e "$T4D_ANDROID_ROOT/NDK/$result" ]] && [[ ! -e "$ndkInstallPath" ]]; then
        unzip -n "$T4D_ANDROID_ROOT/NDK/$result" -d "$T4D_ANDROID_OPT_ROOT_PATH/"
    fi
    if [[ -e "$ndkInstallPath" ]]; then
        ln -sfn "$ndkInstallPath" "$T4D_ANDROID_OPT_ROOT_PATH/android-ndk"
    fi

###############################
}

_t4dSrcAndroidImportSDKBase(){
    _t4dSrcAndroidCheckFolderPermission
    _t4dSrcAndroidImportSDK

    if [[ -e "$T4D_ANDROID_OPT_ROOT_PATH/android-sdk/tools/bin/sdkmanager" ]]; then
        _t4dSrcAndroidCheckJavaBinary
        echo "y" | $T4D_ANDROID_OPT_ROOT_PATH/android-sdk/tools/bin/sdkmanager --update 2>&1 | grep --line-buffered -v 'Warning'
    else
        _t4dCheckFailed "$T4D_ANDROID_OPT_ROOT_PATH/android-sdk/tools/bin/sdkmanager no such file"
        return 1
    fi
}

_t4dSrcAndroidCheckJavaBinary(){
    if [[ "$(which java)" != "" ]]; then
        local _version="$(java -version 2>&1 | grep -Eo 'version.*' | cut -d ' ' -f2 | sed 's|"||g')"
        if [[ "$(echo $_version | cut -d '.' -f1)" -gt 8 ]]; then
            if [[ $(_t4dGetOsName) == "OSX" ]]; then
                JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
                if [[ $JAVA_HOME == "" ]]; then
                    _t4dDebugLog $perror "Java version 8 not installed on your Mac, please install it and check that /usr/libexec/java_home -v 1.8 returns a valid result"
                    return 1
                else
                    _t4dDebugLog $plog "Using java $JAVA_HOME"
                    return 0
                fi
            else
                _t4dDebugLog $perror "Java major version need to be less that 8, please use Java8 by setting JAVA_HOME variable"
                return 1
            fi
        fi
        _t4dDebugLog $plog "Using java $_version"
    fi
}

_t4dSrcAndroidCheckFolderPermission(){
    if [[ -w $(dirname $T4D_ANDROID_OPT_ROOT_PATH) ]]; then
        mkdir -p "$T4D_ANDROID_OPT_ROOT_PATH"
        return 0
    else
        _t4dCheckFailed "$T4D_ANDROID_OPT_ROOT_PATH -> folder not found or permission required"
        _t4dDebugLog "sudo mkdir -p $T4D_ANDROID_OPT_ROOT_PATH"
        _t4dDebugLog "sudo chown -R $USER $T4D_ANDROID_OPT_ROOT_PATH"
        return 1
    fi

}

_t4dSrcAndroidImportSDK(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.4.1
_t4dDebugInfoStart "_t4dSrcAndroidImportSDK" "$#" "$@"
###### _t4dSrcAndroidImportSDK
#   - Name:
#       _t4dSrcAndroidImportSDK
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Example:
#       _t4dSrcAndroidImportSDK
###
###### DOCUMENTATION BLOC #####
    local awsPath="$T4D_ANDROID_AMAZON_S3_ROOT/SDK/"
    local availableFiles="$($WS_AWS_CLI_PATH s3 ls $awsPath)"
    local hostType="$(echo $WS_HOST_TYPE | sed 's|OSX|darwin|g' | sed 's|Linux|linux|g')"

    local result="$(echo $availableFiles | grep "$hostType" | grep -Eo 'sdk-tools.*' | tail -1)"
    local count="$(echo $result | wc -l | sed 's| ||g')"

    _t4dSrcAndroidCheckFolderPermission

    if [[ "$count" == "1" ]]; then
        _t4dSrcAwsImportFile "$T4D_ANDROID_AMAZON_S3_ROOT/SDK" "$T4D_ANDROID_ROOT/SDK" "$result"
    elif [[ "$result" == "" ]]; then
        echo "NotFound"
    else
        _t4dDebugLog $pwarning "More than 1 result, please be more specific"
    fi

    if [[ -e "$T4D_ANDROID_ROOT/SDK/$result" ]] && [[ ! -e "$T4D_ANDROID_OPT_ROOT_PATH/android-sdk/tools/bin/sdkmanager" ]]; then
        mkdir -p "$T4D_ANDROID_OPT_ROOT_PATH/android-sdk"
        unzip -n "$T4D_ANDROID_ROOT/SDK/$result" -d "$T4D_ANDROID_OPT_ROOT_PATH/android-sdk"
    fi
###############################
_t4dDebugInfoEnd "_t4dSrcAndroidImportSDK" "$@"
}

_t4dSrcAndroidPingSTB(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.3.0
_t4dDebugInfoStart "_t4dSrcAndroidPingSTB" "$#" "$@"
#cat &>/dev/null << EOF
###### _t4dSrcAndroidPingSTB
#   - Name:
#       _t4dSrcAndroidPingSTB
###
#   - Synopsis:
#       Return Succeed if STB was found on the network, Failed if not.
###
#   - Usage:
#       _t4dSrcAndroidPingSTB <IP> 
#
###
#   - Available Options:
#       
#
###
#   - Example:
#       _t4dSrcAndroidPingSTB www.google.fr
#       _t4dSrcAndroidPingSTB 192.168.4.3
#       _t4dSrcAndroidPingSTB url.yourdomain.tcl
#
###
#   - Note:
#       Only 1 Ping is launched.
#
###
###### DOCUMENTATION BLOC #####
#EOF
########## CODE BLOC ##########

    if [[ "$(ping -c 1 -t 1 -W 1 $1 | grep -Eo ' 0.0% packet loss')" == ' 0.0% packet loss' ]]; then
        _t4dCheckSucceeded "$1 Online"
    else
        _t4dCheckFailed "$1 Offline"
    fi

###############################
_t4dDebugInfoEnd "_t4dSrcAndroidPingSTB" "$@"
}

_t4dSrcAndroidAdbExists(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.5.0
###### _t4dSrcAndroidAdbExists
#   - Name:
#       _t4dSrcAndroidAdbExists
###
#   - Synopsis:
#       Return 0 if adb is found using which command, 100 if not
###
#   - Example:
#       _t4dSrcAndroidAdbExists
###
###### DOCUMENTATION BLOC #####

    echo "Will Be Overriden in Platform Folders" &> /dev/null

###############################
}
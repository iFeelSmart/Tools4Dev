_t4dSrcYamlParseLine(){
    local _Line="$1"

    if [[ "$_line" == "§START§§END§" ]]; then
        #AVOID DELETING EMPTY LINES
        echo "0|NONE||||"
    else

        local _Indent="$(echo $_Line | grep -Eo '^ *' | sed 's| |§\n|g' | wc -l | sed 's| ||g')" 
        if [[ $_Indent -gt 0 ]]; then
            _Indent="$(expr $_Indent - 1)"
        fi

        
        local _Type="$(echo $_Line | grep -Eo '^ *.' | sed 's| ||g')"
        if [[ "$_Type" == "-" ]]; then
            if [[ "$(echo $_Line | grep -Eo '^ *- ')" != "" ]]; then
                _Type="LIST"
            else
                _Type="OTHER"
            fi
        elif [[ "$_Type" == "#" ]]; then
            _Type="COMMENT"
        elif [[ "$(echo $_Type | grep '[a-z]')" != "" ]]; then
            _Type="KEY"
        else
            _Type="NONE"
        fi
        local _Key=""
        local _KeyDelim=""
        local _Data=""

        local _ParsedLine="$(_t4dSrcYamlSerialize $_Line)"

        case $_Type in
            KEY)
                _KeyDelim="§DASH§"
                # _t4dDebugLog $plog "$_ParsedLine"
                _Key="$(echo $_ParsedLine | sed 's|§DASH§|:|g' | sed 's|§SPACE§| |g' | sed 's| *- ||g' | cut -d ':' -f1 | sed 's|^ *||g')"
                # _t4dDebugLog $plog "$_ParsedLine"
                _Data="$(echo $_ParsedLine | grep -Eo "${_Key}${_KeyDelim}.*"  | sed "s|${_Key}${_KeyDelim}||g" | sed 's|^§SPACE§||g')"
                # _t4dDebugLog $plog "Nop"
                local _CurrentPath=".$_Key"
                if [[ "$_Data" != "" ]]; then
                    _CurrentPath="${_CurrentPath}"
                fi
            ;;
            LIST)
                _KeyDelim="§DASH§"
                # _t4dDebugLog $plog "$_ParsedLine"
                _Key="$(echo $_ParsedLine | sed 's|§DASH§§SPACE§|: |g' | sed 's|§DASH§$|:|g' |  sed 's|§SPACE§| |g' | sed 's| *- ||g' | cut -d ':' -f1)"
                # _t4dDebugLog $plog "$(echo ${_Key} | sed "s|+|\\+|g" | sed "s|-|\\-|g")"
                _Data="$(echo $_ParsedLine | grep -Eo "\-§SPACE§${_Key}${_KeyDelim}.*"  | sed "s|-§SPACE§${_Key}${_KeyDelim}||g" | sed 's|^§SPACE§||g')"
                
                local _CurrentPath=">$_Key"
                if [[ "$_Data" != "" ]]; then
                    _CurrentPath="${_CurrentPath}~$_Data~"
                    
                else
                    if [[ "$(echo $_ParsedLine | grep '§DASH§')" != "" ]]; then
                        _KeyDelim="§DASH§"
                        _CurrentPath="${_CurrentPath}~~"
                    else
                        _KeyDelim=""
                    fi
                fi
            ;;
            COMMENT|NONE|OTHER)
                _Data="$_ParsedLine"
            ;;
        esac
        # _t4dDebugLog $plog "DATA2 $_Data"
        echo "$_Indent|$_Type|$_Key|$_KeyDelim|$_Data|$_CurrentPath"
    fi
}

_t4dSrcYamlParseRevertLine(){
    local _line="$1"
    # _t4dDebugLog $plog "$_line"
    local _Type="$(echo $_line | cut -d '|' -f4)"
    local _Key="$(echo $_line | cut -d '|' -f5)"
    local _KeyDelim="$(echo $_line | cut -d '|' -f6)"
    local _Data="$(echo $_line | cut -d '|' -f2 )"

    case $_Type in
        COMMENT|NONE|OTHER)
            _Res="${_Data}"
        ;;
        *)
            _Indent="$(echo $_line | cut -d '|' -f3)"

            if [[ "$_Data" != "" ]]; then
                _Data=" $_Data"
            fi
            if [[ $_Indent -gt 0 ]]; then
                _Res="$(_t4dPromptVarWithSpace "$_Indent" "" | sed 's|%||g')§${_Type}§${_Key}${_KeyDelim}${_Data}"
            else
                _Res="§${_Type}§${_Key}${_KeyDelim}${_Data}"
            fi
        ;;
    esac
    _t4dSrcYamlDeSerialize $_Res
}

_t4dSrcYamlLineGetValue(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates-project.env
# v1.8.0
###### _t4dSrcYamlLineGetValue
#   - Name:
#       _t4dSrcYamlLineGetValue
###
#   - Synopsis:
#       get key or data from given parsed line
###
#   - Example:
#       * _t4dSrcYamlReadFile $Tools4Dev_PATH/Templates/Examples/yaml/advanced.yml.in ">name[.]"  = return >Set up DB server<
#       * _t4dSrcYamlReadFile $Tools4Dev_PATH/Templates/Examples/yaml/advanced.yml.in ">name[Set up DB server].roles>role[.]" = return name of roles in >name[Set up DB server].roles
#
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _Line="$1"
    local _Type="$2"
    case $_Type in
        key)
            _t4dSrcYamlDeSerialize "$(echo $_Line | cut -d '|' -f5)"
        ;;
        data)
            _t4dSrcYamlDeSerialize "$(echo $_Line | cut -d '|' -f2)"
        ;;
        *)
            _t4dDebugLog $perror "_t4dSrcYamlLineGetValue - Type >$_Type< Not supported yet"
        ;;
    esac

###############################
}

_t4dSrcYamlLineSetValue(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlLineSetValue
#   - Name:
#       _t4dSrcYamlLineSetValue
###
#   - Synopsis:
#       edit parsed line to modify any value
###
#   - Usage:
#       _t4dSrcYamlLineSetValue <line> <option> <data> [<option> <data>]
###
#   - Available Options:
#       * -key               = Update Key value
#       * -data              = Update Data 
#       * -indent            = Update Indent
#       * -type              = Update Type ( LIST or KEY )
###
#   - Example:
#       * _t4dSrcYamlLineSetValue ">name~SimpleTask~|SimpleTask|0|LIST|name" -data oui -indent 2 = replace SimpleTask by oui and 0 by 2 in given line
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _Line="$1"
    shift

    local _AbsolutePath="$(echo $_Line | cut -d '|' -f1)"
    local _Data="$(echo $_Line | cut -d '|' -f2)"
    local _Indent="$(echo $_Line | cut -d '|' -f3)"
    local _Type="$(echo $_Line | cut -d '|' -f4)"
    local _Key="$(echo $_Line | cut -d '|' -f5)"
    local _KeyDelim="$(echo $_Line | cut -d '|' -f6)"

    local _ArgKey _ArgData _ArgIndent _ArgType _ArgList
    while [[ "$@" != "" ]]; do
        case "$1" in
            -key)
                _ArgKey="$2"
                _ArgList="$_ArgList Key"
                shift
            ;;
            -data)
                _ArgData="$2"
                _ArgList="$_ArgList Data"
                shift
            ;;
            -indent)
                _ArgIndent="$2"
                _ArgList="$_ArgList Indent"
                shift
            ;;
            -type)
                _ArgType="$2"
                _ArgList="$_ArgList Type"
                shift
            ;;
            *)
                _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
                return $_t4dErrorCode
            ;;
        esac
        shift
    done

    for _Attribute in $(echo $_ArgList); do
        local _OldValue="$(_t4dVarGetValue "_$_Attribute")"
        local _OldValueDeSerialized="$(_t4dSrcYamlDeSerialize $_OldValue)"
        local _NewValueDeserialized="$(_t4dVarGetValue "_Arg$_Attribute")"
        local _NewValue="$(_t4dSrcYamlSerialize $_NewValueDeserialized)"
        if [[ "$_OldValue" != "" ]] && [[ "$_NewValue" != "" ]]; then
            if [[ "$_OldValue" == "$_NewValue" ]]; then
                _t4dDebugLog $pwarning "$_Attribute for $_AbsolutePath is already >$_OldValueDeSerialized<"
            else
                if [[ "$_Attribute" == "Key" ]]; then
                    _t4dDebugLog $pinfo "${_OldValueDeSerialized} -> $_NewValue"
                    _AbsolutePath="$(echo $_AbsolutePath | sed "s|${_OldValue}$|$_NewValue|g" | sed "s|${_OldValue}~|${_NewValue}~|g")"
                    _t4dDebugLog $plog "new Path $(_t4dSrcYamlDeSerialize $_AbsolutePath)"
                fi
                local _${_Attribute}="$_NewValue"
                _t4dCheckInfo "$_Attribute : $_OldValueDeSerialized -> $_NewValueDeserialized"
            fi
        elif [[ "$_KeyDelim" != "" ]]; then
            # _t4dDebugLog $pinfo "Empty $_Attribute, creating $_NewValue"
            local _${_Attribute}="$_NewValue"
            _t4dCheckInfo "Empty $_Attribute : Adding $_NewValueDeserialized"
        else
            _t4dDebugLog $pwarning "empty value for $_Attribute ( Old >$_OldValue< OR New >$_NewValue< ) and no KeyDelim found"
            _KeyDelim="§DASH§"
            _t4dCheckInfo "KeyDelim updated"
            local _${_Attribute}="$_NewValue"
            _t4dCheckInfo "Data updated"
        fi
    done
    echo "$_AbsolutePath|${_Data}|$_Indent|$_Type|$_Key|$_KeyDelim"
###############################
}


source $T4D_SOURCE_PATH/Yaml/yaml-parser.env
source $T4D_SOURCE_PATH/Yaml/yaml-line.env
source $T4D_SOURCE_PATH/Yaml/yaml-file.env
source $T4D_SOURCE_PATH/Yaml/yaml-serialize.env

_t4dSrcYamlLinter(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlLinter
#   - Name:
#       _t4dSrcYamlLinter
###
#   - Synopsis:
#       Linter that allow user to convert yaml file into parsed content and re-convert this into yml content to fix any wrong space
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    _t4dSrcYamlOpenFile $_File
    _t4dSrcYamlCloseFile $_File

###############################
}

_t4dSrcYamlEdit(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYaml
#   - Name:
#       _t4dSrcYaml
###
#   - Synopsis:
#       update file process
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    # while [[ "$@" != "" ]]; do
    #     case "$1" in
    #         -l)
                
    #         ;;
    #         *)
    #             _t4dDebugLog $perror "Empty or Unknown argument < $1 >"
    #             return $_t4dErrorCode
    #         ;;
    #     esac
    #     shift
    # done
    _t4dDebugLog $plog "Not defined yet"


###############################
}

_t4dSrcYamlReadFile(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlReadFile
#   - Name:
#       _t4dSrcYamlReadFile
###
#   - Synopsis:
#       read parsed content to show human readable output
###
#   - Usage:
#        _t4dSrcYamlReadFile <InFilePath> <ymlPath>
###
#   - Example:
#       * t4dSrcyamlReadFile example.yml.in ">name[example].tasks>name['action']" = Read value of com.t4d in task named "'action'" from type called example
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File=$1
    local _Path="$(_t4dSrcYamlPathSerialize $2)"

    if [[ "$_Path" != "" ]]; then
        local _Content="$(cat $_File | sed "s| |§SPACE§|g" | grep "^$_Path" )"
    else
        local _Content="$(cat $_File | sed "s| |§SPACE§|g")"
    fi
    
    for _Line in $(echo $_Content); do
        # _t4dDebugLog $pinfo "$_Line"
        if [[ "$_Path" != "" ]] && [[ "$(echo $_Line | cut -d '|' -f1)" == "$_Path" ]]; then
            _t4dPromptSquare "$(_t4dSrcYamlParseRevertLine $_Line)"
        else
            _t4dSrcYamlParseRevertLine $_Line
        fi
    done

###############################
}


_t4dSrcYamlUpdateLine(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlUpdateLine
#   - Name:
#       _t4dSrcYamlUpdateLine
###
#   - Synopsis:
#       update line from parsed yaml file
###
#   - Definition:
#       update values ​​in yaml file
#
#       § _t4dSrcYamlOpenFile
#           open file
#
#       § _t4dSrcYamlUpdateLine
#           Update one or more line
#               You can send any -<arg> you want, all of those arguments will be transfered to _t4dSrcYamlLineSetValue
#                   For more information on how to use it, please see _t4dSrcYamlLineSetValue documentation
#
#       § _t4dSrcYamlCloseFile
#           Close file
###
#   - Usage:
#        _t4dSrcYamlUpdateLine <FilePath> <ymlPath> {_t4dSrcYamlLineSetValue Arguments}
###
#   - Example: 
#       * _t4dSrcYamlReadFile example.yml.in ">name[example].tasks>name['action']" -data "'NewAction'" = update value of com.t4d in task named "'action'" from type called example
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    local _Path="$(_t4dSrcYamlPathSerialize $2)"

    if [[ "$_Path" != "" ]]; then

        local _Line="$(cat $_File | sed "s| |§SPACE§|g" | grep "^$_Path|")"
        local _Before="$(cat $_File | sed "s| |§SPACE§|g" | grep -B 1000 "^$_Path|" | grep -v "^$_Path|")"
        local _After="$(cat $_File | sed "s| |§SPACE§|g" | grep -A 1000 "^$_Path|" | grep -v "^$_Path|")"
        # _t4dDebugLog $plog "$_Line"
        if [[ "$_Line" != "" ]]; then
            _t4dDebugLog $pinfo "Updating $_Path"
            local _Res="$(_t4dSrcYamlLineSetValue "$_Line" ${@:3})"
            local _NewPath="$(echo $_Res | cut -d '|' -f1)"

            if [[ "$_Res" != "" ]]; then
                echo "$_Before" > $_File.tmp
                echo "$_Res" >> $_File.tmp
                echo "$_After" | sed "s|$_Path|$_NewPath|g" >> $_File.tmp
                mv $_File.tmp $_File
            fi
        else
            _t4dDebugLog $perror "Path not found >$_Path<"
            return $_t4dErrorCode
        fi

    else
        _t4dDebugLog $perror "Could not update empty path"
        return $_t4dErrorCode
    fi
###############################
}

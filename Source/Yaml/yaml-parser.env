
_t4dSrcYamlParseClean(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlParseClean
#   - Name:
#       _t4dSrcYamlParseClean
###s
#   - Synopsis:
#       Clean output file and create log folder
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    local _Folder="$(dirname $_File)"

    mkdir -p "$_Folder"

    if [[ -e "$_File" ]]; then
        rm $_File
    fi

###############################
}

_t4dSrcYamlParseFile(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlParseFile
#   - Name:
#       _t4dSrcYamlParseFile
###
#   - Synopsis:
#       generate yml.in file from .yml file
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _t4dErrorCode=1
    local _File="$1"
    local _InPutParsedFile="$2"
    local _Delim="§"
    local _Content="$(cat $_File | sed 's|\\|§ESCAPE§|g' | sed 's|^|§START§|g' | sed 's|$|§END§|g')"

    _t4dSrcYamlParseClean $_InPutParsedFile
    local _OldIndent=0
    local _Indent=0
    for _line in $(echo $_Content | sed "s| |§SPACE§|g"); do
        
        local _ParsedLine="$(_t4dSrcYamlParseLine "$(echo $_line | sed "s|§SPACE§| |g" | sed 's|§START§||g' | sed 's|§END§||g' )" )"

        local _Type="$(echo $_ParsedLine | cut -d '|' -f2)"
        local _Key="$(echo $_ParsedLine | cut -d '|' -f3)"
        local _KeyDelim="$(echo $_ParsedLine | cut -d '|' -f4)"
        local _Data="$(echo $_ParsedLine | cut -d '|' -f5 )"
        local _Path="$(echo $_ParsedLine | cut -d '|' -f6 )"

        # _t4dDebugLog $plog "$(_t4dSrcYamlDeSerialize $_Path)"

        case $_Type in
            COMMENT|NONE|OTHER)
                echo "|${_Data}|0|$_Type|$_Key|$_KeyDelim" >> $_InPutParsedFile
            ;;
            *)

                _OldIndent="$_Indent"
                _Indent="$(echo $_ParsedLine | cut -d '|' -f1)"
                
                local _AbsolutePath=""
                if [[ $_OldIndent -gt $_Indent ]]; then
                    # _t4dDebugLog $pinfo "Cleaning from $_Indent to $_OldIndent"
                    for _toClean in $(seq $_Indent $_OldIndent); do
                        local _Prefix_$_toClean=""
                    done
                fi

                local _Prefix_$_Indent="$_Path"
                
                for _counter in $(seq 0 $_Indent); do
                    _AbsolutePath="${_AbsolutePath}$(_t4dVarGetValue _Prefix_$_counter)"
                done
                echo "$_AbsolutePath|${_Data}|$_Indent|$_Type|$_Key|$_KeyDelim" >> $_InPutParsedFile
            ;;
        esac
    done

###############################
}

_t4dSrcYamlParseFileRevert(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlParseFileRevert
#   - Name:
#       _t4dSrcYamlParseFileRevert
###
#   - Synopsis:
#       generate yaml file from .yml.in file
###
#   - Usage:
#       * _t4dSrcYamlParseFileRevert <inputFile> <outputFile>
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    local _Content="$(cat $_File)"
    local _OutPutParsedFile="$2"

    _t4dSrcYamlParseClean $_OutPutParsedFile

    for _line in $(echo $_Content | sed 's| |§SPACE§|g'); do
        _t4dSrcYamlParseRevertLine $_line >> $_OutPutParsedFile
    done

###############################
}

_t4dSrcYamlParseInventory(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcYamlParseInventory
#   - Name:
#       _t4dSrcYamlParseInventory
###
#   - Synopsis:
#       generate yml.in file from inventory file
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _File="$1"
    local _InPutParsedFile="$2"

    _t4dSrcYamlParseClean $_InPutParsedFile

    local _Content="$(cat "$_File" | sed "s| |§SPACE§|g")"
    local _GroupName=""

    for _line in $(echo $_Content); do
        if [[ "$(echo $_line | grep '^\[')" != "" ]]; then
            _GroupName="$(echo $_line | sed 's|\[|§DQUOTE§|g' | sed 's|\]|§DQUOTE§|g' )"
            echo ">groups~${_GroupName}~|${_GroupName}|0|LIST|groups|§DASH§" >> $_InPutParsedFile
        elif [[ "$(echo $_line | grep '^\#')" != "" ]];then
            echo "|${_line}|0|COMMENT||"
        else
            local _HostName="$_line"
            echo ">groups~${_GroupName}~>${_HostName}||2|LIST|${_HostName}|" >> $_InPutParsedFile
        fi
    done
###############################
}


#### MODULE HEADER BLOC
# Generated From $Tools4Dev_PATH/Templates/function.env
# This documentation will be read and compile for man usage, MarkDown file and shell documentation
# v1.2
#
#   - Name:
#       MacOS
###
#   - Dependencies:
#       <<<
#       brew install git-lfs zsh jq coreutils
#       git-lfs install
#       >>>
###
#   - Shared Folder:
#       <<<
#       mkdir -p /Users/Shared
#       sudo chown $USER /Users/Shared
#       cd /Users/Shared
#       >>>
###
#   - Clone Tools4Dev:
#       <<<
#       git clone {URL} Tools4Dev
#       cd Tools4Dev
#       >>>
###
#   - Install Zshrc:
#       Please choose One :
# 
#       * If you already have Oh-My-ZSH and don't want to override your current .zshrc file
#       <<<
#       ./t4d install append
#       zsh
#       >>>
#       * If doesn't care
#       <<<
#       ./t4d install
#       zsh
#       >>>
###
#   - Zsh insecure folders:
#       you might have an error during loading that tells you  
#       <<<
#       zsh compinit: insecure directories, run compaudit for list.
#       >>>
#       This can be fixed by using following command
#       <<<
#       compaudit | xargs chmod g-w
#       >>>
###
#   - Clone Deps:
#       <<<
#       wks clone
#       >>>
###
#   - Documentation:
#       <<<
#       t4dDoc
#       >>>  
#       
###
#   - Prefix:
#       
###
#   - Error Code:
#       402
###
#   - See Also :
#       <[BitBucket] [Git] [Others Modules] etc.>
###
#   - Supported Platform:
#       * OSX ( 10.12.6 or higher )
#       * Fedora ( 25 or higher )
###
#   - Author(s):
#       - Quentin NIO
#
###
#### HEADER BLOC ####

#Replace UNIX date with GNU date
##### DOCUMENTATION BLOC #####
if [[ $(which gdate) ]]; then 
    alias date='gdate'
else
    echo "ERROR 402 : gdate doesn't exist"
    echo "    brew install coreutils ?"
fi

#DIFFERENT PING BEHAVIOR BETWEEN OSX AND LINUX
_t4dPing(){
##### _t4dPing
#   Doc
##### DOCUMENTATION BLOC #####
    ping -c 1 -t 1 -W 200 $1 2>&1 | grep '1 packets received'
}

_t4dSrcFileSystemDiskUsage(){
#OVERRIDING FIRST DEFINITION
#DOCUMENTATION AVAILABLE IN Source/Common/fileSystem.env
    # local _Default="$1"
    local _DefaultPath="/"
    if [[ -d "$1" ]]; then
        _DefaultPath="$1"
        shift
    fi
    local _TotalSpace="$(df -H | sed -e 's/  */ /g' | grep "${_DefaultPath}$" | cut -d ' ' -f2)"
    local _AvailableSpace="$(df -H | sed -e 's/  */ /g' | grep "${_DefaultPath}$" | cut -d ' ' -f4)"
    local _UsedSpace="$(df -H | sed -e 's/  */ /g' | grep "${_DefaultPath}$" | cut -d ' ' -f3)"
    local _Percentage="$(df -H | sed -e 's/  */ /g' | grep "${_DefaultPath}$" | cut -d ' ' -f5)"
    
    case $1 in 
        -available)
            echo "$_AvailableSpace"
        ;;
        -used)
            echo "$_UsedSpace"
        ;;
        -total)
            echo "$_TotalSpace"
        ;;
        -capacity)
            echo "$_Percentage"
        ;;
        *)
            echo "${_UsedSpace}/${_TotalSpace}"
        ;;
    esac

###############################
}

_t4dSystemHealthInfo(){
#OVERRIDING FIRST DEFINITION
#DOCUMENTATION AVAILABLE IN Source/Common/System.env
    
    echo "T4D_VERSION=$(cat $Tools4Dev_PATH/VERSION)"
    echo "SYSTEM_VERSION=$(_t4dGetSystemVersion)"
    echo "CLANG_VERSION=$(clang -v 2>&1 | head -1 | grep -Eo 'version.*' | cut -d ' ' -f2)"
    echo "XCODE_VERSION=$(xcodebuild -version 2> /dev/null | head -1 | sed 's|Xcode ||g')"
    echo "DISK_AVAILABLE_SPACE=$(_t4dSrcFileSystemDiskUsage / -available | sed 's|%||g')"
    echo "DISK_PERCENTAGE=$(_t4dSrcFileSystemDiskUsage / -capacity | sed 's|%||g')"
    echo "DISK_USED=$(_t4dSrcFileSystemDiskUsage / -total | sed 's|%||g')"

###############################
}

_t4dGetOsType(){
    echo "OSX"
}

_t4dGetKeychainPassword(){
    if [[ "$T4D_SILENT_COMMAND" != "true" ]]; then
        security find-generic-password -ga $1 2>&1 | grep '^password' | cut -d '"' -f2
    fi
}

_t4dGetSystemHostName(){
    echo "$(hostname | cut -d '.' -f1)"
}

_t4dGetSystemVersion(){
    echo $(sw_vers | grep 'ProductVersion' | cut -d ':' -f2 | sed 's| ||g')
}

_t4dSystemGetCores(){
#OVERRIDING FIRST DEFINITION
#DOCUMENTATION AVAILABLE IN Source/Common/system.env
    echo "$(sysctl -n hw.ncpu 2> /dev/null)"
}

_t4dPromptVarWithSpace(){
##### _t4dPromptVarWithSpace
#   Important and usefull method to fill variable with space to create a fixed lenght variable and generate pretty stdout blocks
#   Usage _t4dPromptVarWithSpace 10 "yourVariable" | sed 's|%||g'
###### DOCUMENTATION BLOC #####
    echo "%$(printf "%-${1}s" $2)%"
}

_t4dPromptVarWithSpaceAtEnd(){
#OVERRIDING FIRST DEFINITION
#DOCUMENTATION AVAILABLE IN Source/Common/prompt.env
    echo "%$(printf "%-$1s" $(echo "$2" | rev))%" | rev
}



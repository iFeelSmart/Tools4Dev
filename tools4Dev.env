#ERROR CODE 100
#SOURCE      ERROR CODE 200
#MODULES     ERROR CODE 300
#PLATFORMS   ERROR CODE 400
#PROJECTS    ERROR CODE 500
#TEMPLATES   ERROR CODE 600
# set -x
#Default
WS_PROJECT_NAME="${WS_PROJECT_NAME:-Tools4Dev}"
WS_VERSION_FILE="${WS_VERSION_FILE:-VERSION}"

source "$Tools4Dev_PATH/Engine/_main_.env"

source "$Tools4Dev_PATH/Source/_main_.env"
source "$Tools4Dev_PATH/Source/_vars_.env"

mkdir -p "$Tools4Dev_PATH/.t4d"
mkdir -p "$T4D_PROJECT_LOG_PATH"

if [[ "$WS_ROOT" != "" ]]; then
    t4dClearEnv WS
fi

_t4dLoadManifestConfig(){
    if [[ -e "$Tools4Dev_PATH/manifest.xml" ]]; then
        export WS_TEAM="$(cat $Tools4Dev_PATH/manifest.xml | grep '<team' | grep -Eo 'name=.*' | cut -d '"' -f2)"
        export T4D_TEAM_ROOT="$(dirname $(readlink $Tools4Dev_PATH/manifest.xml))"
    fi
}

_t4dLoadManifestConfig


WS_AMAZON_S3_ROOT="s3://"

#Loading Dependencies
source $T4D_SOURCE_PATH/Common/_main_.env
source $T4D_SOURCE_PATH/Apple/_main_.env
source $T4D_SOURCE_PATH/Android/_main_.env
source $T4D_SOURCE_PATH/BitBucket/_main_.env
source $T4D_SOURCE_PATH/Aws/_main_.env
source $T4D_SOURCE_PATH/Git/_main_.env
source $T4D_SOURCE_PATH/Inventory/_main_.env
source $T4D_SOURCE_PATH/Jira/_main_.env
source $T4D_SOURCE_PATH/FileSystem/_main_.env
source $T4D_SOURCE_PATH/Jenkins/_main_.env
source $T4D_SOURCE_PATH/Slack/_main_.env
source $T4D_SOURCE_PATH/Docker/_main_.env
source $T4D_SOURCE_PATH/Firebase/_main_.env
source $T4D_SOURCE_PATH/MailMarkdown/_main_.env
source $T4D_SOURCE_PATH/WikiJS/_main_.env
source $T4D_SOURCE_PATH/Kubernetes/_main_.env
source $T4D_SOURCE_PATH/CMake/_main_.env
source $T4D_SOURCE_PATH/GitLab/_main_.env
source $T4D_SOURCE_PATH/Ansible/_main_.env
source $T4D_SOURCE_PATH/Yaml/_main_.env
source $T4D_SOURCE_PATH/Manifest/_main_.env


if [[ "$(uname -s)" == "Darwin" ]]; then
    #MacOS
    source $T4D_PLATFORM_PATH/MacOS.env
    T4D_PLATFORM_NAME="MacOS.env"
elif [[ -e "/etc/alpine-release" ]]; then
    #Alpine
    source $T4D_PLATFORM_PATH/Alpine.env
    T4D_PLATFORM_NAME="Alpine.env"
elif [[ -e "/etc/fedora-release" ]]; then
    #Fedora
    source $T4D_PLATFORM_PATH/Fedora.env
    T4D_PLATFORM_NAME="Fedora.env"
else
    #Linux
    source $T4D_PLATFORM_PATH/Linux.env
    T4D_PLATFORM_NAME="Linux.env"
fi

chpwd() {
    if [[ $CHPWD -eq 0 ]]; then
        if [[ -f project.env ]]; then
            source ./project.env
        else
            ls
        fi
    fi
}



if [[ -d "$HOME/Git/work" ]]; then
    _T4D_WKS_ROOT="$HOME/Git/work"
elif [[ -d "$HOME/Git" ]]; then
    _T4D_WKS_ROOT="$HOME/Git"
elif [[ -d "$HOME/work" ]]; then
    _T4D_WKS_ROOT="$HOME/work"
else
    _T4D_WKS_ROOT=""
fi

WS_HOST_TYPE="$(_t4dGetOsType)"

_t4dLoadManifestProjects(){
    if [[ -e $1 ]]; then
        WS_MANIFEST_PROJECTS="$(_t4dManifestXmlGetMarker "project" "path" $1)"
    fi
}
if [[ -d $PWD/.git ]]; then
    WS_SHA="$(_t4dSrcGitInfoSha)"
    _t4dLoadManifestProjects $WS_ROOT/manifest.xml
fi

WS_BUILD_DATE="$(date +%F)"



T4D_ANDROID_ROOT="$Tools4Dev_PATH/Tools/Android"
T4D_ANDROID_OPT_ROOT_PATH="/opt/google"
T4D_ANDROID_AMAZON_S3_ROOT="s3://example/Android"
T4D_ANDROID_OS_TYPE="$(echo $WS_HOST_TYPE | tr '[:upper:]' '[:lower:]' | sed 's|osx|darwin|g')"
T4D_USERS_PATH="${T4D_USERS_PATH:-"$Tools4Dev_PATH/Users"}"

WS_CUSTOM_CHANNEL_NOTIFICATION=""
WS_TEST_RESULT_FILE="$T4D_PROJECT_LOG_PATH/testOutPut"




##################################

 


if [[ ! -f $Tools4Dev_PATH/.dirs.env ]]; then 
    touch $Tools4Dev_PATH/.dirs.env
fi

_t4dSystemBindKeys


if [[ "$_t4dCheck" != 'true' ]]; then
    t4dCheckForUpdate &
    _t4dCheck='true'
fi
